{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { getTriviaApiQuestions } from \"./utils/triviaAPI\";\nimport { getProgrammingQuizApiQuestions } from \"./utils/programmingQuizAPI\";\nimport { QuizType } from \"./models/Question\";\nimport { normalizeQuestions } from \"./utils/functions\";\nimport { FirstStep } from \"./components/FirstStep\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [quizType, setQuizType] = useState(QuizType.TRIVIA);\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const chooseQuiz = quizType => {\n    setQuizType(quizType);\n  };\n\n  const getQuestions = async () => {\n    let questions;\n\n    if (quizType === QuizType.TRIVIA) {\n      questions = await getTriviaApiQuestions(numOfQuestions, \"Entertainment: Books\", \"hard\");\n    } else {\n      questions = await getProgrammingQuizApiQuestions(numOfQuestions, \"code\", \"Hard\");\n    }\n\n    const formattedQuestions = normalizeQuestions(quizType, questions);\n    setQuestions(formattedQuestions);\n  };\n\n  console.log(\"QST\", questions);\n\n  const renderContent = () => currentStep === 1 ? /*#__PURE__*/React.createElement(FirstStep, {\n    chooseQuiz: chooseQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }) : null;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"GET QUESTIONS\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/App.tsx"],"names":["React","useState","getTriviaApiQuestions","getProgrammingQuizApiQuestions","QuizType","normalizeQuestions","FirstStep","App","questions","setQuestions","quizType","setQuizType","TRIVIA","numOfQuestions","setNumOfQuestions","currentStep","setCurrentStep","chooseQuiz","getQuestions","formattedQuestions","console","log","renderContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,SAASC,8BAAT,QAA+C,4BAA/C;AACA,SAASC,QAAT,QAAmC,mBAAnC;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AAEA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAa,EAAb,CAA1C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAWG,QAAQ,CAACQ,MAApB,CAAxC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAS,CAAT,CAApD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMgB,UAAU,GAAIP,QAAD,IAAwB;AACzCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAFD;;AAIA,QAAMQ,YAAY,GAAG,YAAY;AAC/B,QAAIV,SAAJ;;AACA,QAAIE,QAAQ,KAAKN,QAAQ,CAACQ,MAA1B,EAAkC;AAChCJ,MAAAA,SAAS,GAAG,MAAMN,qBAAqB,CACrCW,cADqC,EAErC,sBAFqC,EAGrC,MAHqC,CAAvC;AAKD,KAND,MAMO;AACLL,MAAAA,SAAS,GAAG,MAAML,8BAA8B,CAC9CU,cAD8C,EAE9C,MAF8C,EAG9C,MAH8C,CAAhD;AAKD;;AAED,UAAMM,kBAAkB,GAAGd,kBAAkB,CAACK,QAAD,EAAWF,SAAX,CAA7C;AACAC,IAAAA,YAAY,CAACU,kBAAD,CAAZ;AACD,GAlBD;;AAoBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBb,SAAnB;;AAEA,QAAMc,aAAa,GAAG,MACpBP,WAAW,KAAK,CAAhB,gBAAoB,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEE,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,GAA4D,IAD9D;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF;AAOD,CA1CD;;AA4CA,eAAeX,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { getTriviaApiQuestions } from \"./utils/triviaAPI\";\nimport { getProgrammingQuizApiQuestions } from \"./utils/programmingQuizAPI\";\nimport { QuizType, Question } from \"./models/Question\";\nimport { normalizeQuestions } from \"./utils/functions\";\nimport { QuizChoiceButton } from \"./components/QuizChoiceButton\";\nimport { FirstStep } from \"./components/FirstStep\";\n\nconst App: React.FC = () => {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [quizType, setQuizType] = useState<QuizType>(QuizType.TRIVIA);\n  const [numOfQuestions, setNumOfQuestions] = useState<number>(5);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const chooseQuiz = (quizType: QuizType) => {\n    setQuizType(quizType);\n  };\n\n  const getQuestions = async () => {\n    let questions;\n    if (quizType === QuizType.TRIVIA) {\n      questions = await getTriviaApiQuestions(\n        numOfQuestions,\n        \"Entertainment: Books\",\n        \"hard\"\n      );\n    } else {\n      questions = await getProgrammingQuizApiQuestions(\n        numOfQuestions,\n        \"code\",\n        \"Hard\"\n      );\n    }\n\n    const formattedQuestions = normalizeQuestions(quizType, questions);\n    setQuestions(formattedQuestions);\n  };\n\n  console.log(\"QST\", questions);\n\n  const renderContent = () =>\n    currentStep === 1 ? <FirstStep chooseQuiz={chooseQuiz} /> : null;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={getQuestions}>GET QUESTIONS</button>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}