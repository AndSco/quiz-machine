{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuizCreationForm.tsx\";\nimport React, { useReducer, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { QuizCreationReducer, QuizCreationStartingValues } from \"../../../reducers/QuizCreation\";\nimport { Input, StyledLabel, Container as InputContainer } from \"../../UI/Input\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../../UI/Form\";\nimport { Colors } from \"../../../constants/colors\";\nimport { Question } from \"../../../models/PrivateQuiz\";\nimport { QuestionSubForm } from \"./QuestionSubForm\";\nconst Container = styled(FormContainer)`\n  height: 500px;\n  /* background-color: ${Colors.ORANGE}; */\n`;\nconst RadioButtonsContainer = styled.div`\n  display: flex;\n  margin: 0.5rem 0 1rem 0;\n`;\nconst RadioContainer = styled.div`\n  display: flex;\n  margin: 0 1rem;\n  background: white;\n  padding: 0.3rem 0.7rem;\n  border-radius: 40px;\n  cursor: pointer;\n\n  label {\n    padding-left: 6px;\n  }\n`;\nexport const QuizCreationForm = () => {\n  const [isAddingQuestions, setIsAddingQuestions] = useState(false);\n  const [inputValues, dispatch] = useReducer(QuizCreationReducer, QuizCreationStartingValues);\n  const [questionsUploaded, setQuestionsUploaded] = useState([]);\n\n  const handleChange = (input, inputName) => {\n    dispatch({\n      type: inputName,\n      payload: input\n    });\n  };\n\n  const handleRadioButtonChange = choice => {\n    const actionToDispatch = {\n      type: \"isPrivate\",\n      payload: false\n    };\n\n    if (choice === \"yes\") {\n      actionToDispatch.payload = true;\n    }\n\n    dispatch(actionToDispatch);\n  };\n\n  const handleSubmit = () => console.log(\"Submitted\", inputValues);\n\n  const saveQuestionInState = question => setQuestionsUploaded([...questionsUploaded, question]);\n\n  const testQuestion = new Question(\"What is the capital?\");\n  testQuestion.addReply(\"Rome\");\n  testQuestion.addReply(\"Venice\");\n  testQuestion.insertRightReply(\"Brno\");\n  console.log(\"Question\", testQuestion);\n  console.log(\"INPUT VALUES\", inputValues);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, isAddingQuestions && /*#__PURE__*/React.createElement(QuestionSubForm, {\n    saveQuestionInState: saveQuestionInState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Create your quiz\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    inputName: \"title\",\n    onChangeFunction: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    inputName: \"backgroundImageUrl\",\n    onChangeFunction: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Do you want to keep the quiz private?\".toUpperCase()), /*#__PURE__*/React.createElement(RadioButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RadioContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"yes\",\n    name: \"isPrivate\",\n    value: \"yes\",\n    onChange: e => handleRadioButtonChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"YES\")), /*#__PURE__*/React.createElement(RadioContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"no\",\n    name: \"isPrivate\",\n    value: \"no\",\n    onChange: e => handleRadioButtonChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"NO\")))), /*#__PURE__*/React.createElement(Input, {\n    inputName: \"questions\",\n    onChangeFunction: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"SUBMIT\"), /*#__PURE__*/React.createElement(\"h4\", {\n    onClick: () => setIsAddingQuestions(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"ADD QUESTION\")));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuizCreationForm.tsx"],"names":["React","useReducer","useState","styled","QuizCreationReducer","QuizCreationStartingValues","Input","StyledLabel","Container","InputContainer","FormContainer","FormTitle","SubmitButton","Colors","Question","QuestionSubForm","ORANGE","RadioButtonsContainer","div","RadioContainer","QuizCreationForm","isAddingQuestions","setIsAddingQuestions","inputValues","dispatch","questionsUploaded","setQuestionsUploaded","handleChange","input","inputName","type","payload","handleRadioButtonChange","choice","actionToDispatch","handleSubmit","console","log","saveQuestionInState","question","testQuestion","addReply","insertRightReply","e","preventDefault","toUpperCase","target","value"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  QuizCreationReducer,\n  QuizCreationStartingValues,\n  QuizCreationAction,\n  InputName\n} from \"../../../reducers/QuizCreation\";\nimport {\n  Input,\n  StyledLabel,\n  Container as InputContainer\n} from \"../../UI/Input\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../../UI/Form\";\nimport { Colors } from \"../../../constants/colors\";\nimport { Question, PrivacyChoice } from \"../../../models/PrivateQuiz\";\nimport { QuestionSubForm } from \"./QuestionSubForm\";\n\nconst Container = styled(FormContainer)`\n  height: 500px;\n  /* background-color: ${Colors.ORANGE}; */\n`;\n\nconst RadioButtonsContainer = styled.div`\n  display: flex;\n  margin: 0.5rem 0 1rem 0;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  margin: 0 1rem;\n  background: white;\n  padding: 0.3rem 0.7rem;\n  border-radius: 40px;\n  cursor: pointer;\n\n  label {\n    padding-left: 6px;\n  }\n`;\n\nexport const QuizCreationForm: React.FC = () => {\n  const [isAddingQuestions, setIsAddingQuestions] = useState(false);\n  const [inputValues, dispatch] = useReducer(\n    QuizCreationReducer,\n    QuizCreationStartingValues\n  );\n  const [questionsUploaded, setQuestionsUploaded] = useState<Question[]>([]);\n\n  const handleChange = (input: string, inputName: InputName) => {\n    dispatch({ type: inputName, payload: input });\n  };\n\n  const handleRadioButtonChange = (choice: PrivacyChoice) => {\n    const actionToDispatch: QuizCreationAction = {\n      type: \"isPrivate\",\n      payload: false\n    };\n    if (choice === \"yes\") {\n      actionToDispatch.payload = true;\n    }\n    dispatch(actionToDispatch);\n  };\n\n  const handleSubmit = () => console.log(\"Submitted\", inputValues);\n\n  const saveQuestionInState = (question: Question) =>\n    setQuestionsUploaded([...questionsUploaded, question]);\n\n  const testQuestion = new Question(\"What is the capital?\");\n  testQuestion.addReply(\"Rome\");\n  testQuestion.addReply(\"Venice\");\n  testQuestion.insertRightReply(\"Brno\");\n\n  console.log(\"Question\", testQuestion);\n  console.log(\"INPUT VALUES\", inputValues);\n  return (\n    <Container>\n      {isAddingQuestions && (\n        <QuestionSubForm saveQuestionInState={saveQuestionInState} />\n      )}\n      <FormTitle>Create your quiz</FormTitle>\n      <form\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          handleSubmit();\n        }}\n      >\n        <Input inputName=\"title\" onChangeFunction={handleChange} />\n        <Input inputName=\"backgroundImageUrl\" onChangeFunction={handleChange} />\n\n        <InputContainer>\n          <StyledLabel>\n            {\"Do you want to keep the quiz private?\".toUpperCase()}\n          </StyledLabel>\n          <RadioButtonsContainer>\n            <RadioContainer>\n              <input\n                type=\"radio\"\n                id=\"yes\"\n                name=\"isPrivate\"\n                value=\"yes\"\n                onChange={e =>\n                  handleRadioButtonChange(e.target.value as PrivacyChoice)\n                }\n              />\n              <label htmlFor=\"yes\">YES</label>\n            </RadioContainer>\n            <RadioContainer>\n              <input\n                type=\"radio\"\n                id=\"no\"\n                name=\"isPrivate\"\n                value=\"no\"\n                onChange={e =>\n                  handleRadioButtonChange(e.target.value as PrivacyChoice)\n                }\n              />\n              <label htmlFor=\"no\">NO</label>\n            </RadioContainer>\n          </RadioButtonsContainer>\n        </InputContainer>\n\n        <Input inputName=\"questions\" onChangeFunction={handleChange} />\n        <SubmitButton type=\"submit\">SUBMIT</SubmitButton>\n        <h4 onClick={() => setIsAddingQuestions(true)}>ADD QUESTION</h4>\n      </form>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}