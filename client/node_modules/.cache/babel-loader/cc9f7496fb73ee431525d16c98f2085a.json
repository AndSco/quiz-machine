{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/optionSteps/FinalSummaryStep.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../../../constants/colors\";\nimport { StepTemplate } from \"./StepTemplate\";\nimport { MediumButton, SecondaryButton } from \"../../../UI/Buttons\";\nimport { ErrorMessage } from \"../../../UI/ErrorMessage\";\nimport { QuizzesContext } from \"../../../../contexts/quizzes/Quizzes\";\nimport { LoadingContext } from \"../../../../contexts/loading/Loading\";\nconst StyledFeature = styled.p`\n  color: white;\n  font-size: 1rem;\n  margin: 0.8rem 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    color: ${Colors.BLACK};\n    text-transform: uppercase;\n    font-weight: bold;\n    margin-top: 0.5rem;\n  }\n`;\nconst FeaturesContainer = styled.div`\n  width: 50vw;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  background-color: ${Colors.YELLOW};\n  justify-content: center;\n  align-items: center;\n`;\nconst StyledResetButton = styled(SecondaryButton)`\n  align-self: center;\n`;\n\nconst ResetButton = ({\n  reset\n}) => /*#__PURE__*/React.createElement(StyledResetButton, {\n  onClick: reset,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n}, \"RESET\");\n\nexport const FinalSummaryStep = () => {\n  const {\n    quizType,\n    numberOfQuestions,\n    difficultyLevel,\n    currentSubject,\n    uploadQuestions,\n    reset,\n    getPublicQuizQuestions,\n    quizUploadError\n  } = useContext(QuizzesContext);\n  const {\n    startLoading,\n    stopLoading\n  } = useContext(LoadingContext);\n  const [fetchError, setFetchError] = useState(null);\n  return /*#__PURE__*/React.createElement(StepTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FeaturesContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledFeature, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Quiz: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, quizType)), /*#__PURE__*/React.createElement(StyledFeature, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"No. of questions: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, numberOfQuestions)), /*#__PURE__*/React.createElement(StyledFeature, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Difficulty: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, difficultyLevel || \"Any\")), /*#__PURE__*/React.createElement(StyledFeature, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Subject: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }\n  }, currentSubject || \"Random\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, !quizUploadError ? /*#__PURE__*/React.createElement(MediumButton, {\n    onClick: async () => {\n      try {\n        getPublicQuizQuestions();\n      } catch (err) {\n        console.error(err); // setFetchError(err.message);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"START QUIZ\") : /*#__PURE__*/React.createElement(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, fetchError), /*#__PURE__*/React.createElement(ResetButton, {\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/optionSteps/FinalSummaryStep.tsx"],"names":["React","useContext","useState","styled","Colors","StepTemplate","MediumButton","SecondaryButton","ErrorMessage","QuizzesContext","LoadingContext","StyledFeature","p","BLACK","FeaturesContainer","div","YELLOW","StyledResetButton","ResetButton","reset","FinalSummaryStep","quizType","numberOfQuestions","difficultyLevel","currentSubject","uploadQuestions","getPublicQuizQuestions","quizUploadError","startLoading","stopLoading","fetchError","setFetchError","display","flexDirection","marginTop","err","console","error"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../../../constants/colors\";\nimport { getQuestions } from \"../../../../utils/functions\";\nimport { StepTemplate } from \"./StepTemplate\";\nimport { MediumButton, SecondaryButton } from \"../../../UI/Buttons\";\nimport { ErrorMessage } from \"../../../UI/ErrorMessage\";\nimport { QuizzesContext } from \"../../../../contexts/quizzes/Quizzes\";\nimport { LoadingContext } from \"../../../../contexts/loading/Loading\";\n\nconst StyledFeature = styled.p`\n  color: white;\n  font-size: 1rem;\n  margin: 0.8rem 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    color: ${Colors.BLACK};\n    text-transform: uppercase;\n    font-weight: bold;\n    margin-top: 0.5rem;\n  }\n`;\n\nconst FeaturesContainer = styled.div`\n  width: 50vw;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  background-color: ${Colors.YELLOW};\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledResetButton = styled(SecondaryButton)`\n  align-self: center;\n`;\n\nconst ResetButton: React.FC<{ reset: () => void }> = ({ reset }) => (\n  <StyledResetButton onClick={reset}>RESET</StyledResetButton>\n);\n\nexport const FinalSummaryStep: React.FC = () => {\n  const {\n    quizType,\n    numberOfQuestions,\n    difficultyLevel,\n    currentSubject,\n    uploadQuestions,\n    reset,\n    getPublicQuizQuestions,\n    quizUploadError\n  } = useContext(QuizzesContext);\n  const { startLoading, stopLoading } = useContext(LoadingContext);\n\n  const [fetchError, setFetchError] = useState<string | null>(null);\n\n  return (\n    <StepTemplate>\n      <FeaturesContainer>\n        <StyledFeature>\n          Quiz: <span>{quizType}</span>\n        </StyledFeature>\n        <StyledFeature>\n          No. of questions: <span>{numberOfQuestions}</span>\n        </StyledFeature>\n        <StyledFeature>\n          Difficulty: <span>{difficultyLevel || \"Any\"}</span>\n        </StyledFeature>\n        <StyledFeature>\n          Subject: <span>{currentSubject || \"Random\"}</span>\n        </StyledFeature>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: \"1rem\"\n          }}\n        >\n          {!quizUploadError ? (\n            <MediumButton\n              onClick={async () => {\n                try {\n                  getPublicQuizQuestions();\n                } catch (err) {\n                  console.error(err);\n                  // setFetchError(err.message);\n                }\n              }}\n            >\n              START QUIZ\n            </MediumButton>\n          ) : (\n            <ErrorMessage>{fetchError}</ErrorMessage>\n          )}\n          <ResetButton reset={reset} />\n        </div>\n      </FeaturesContainer>\n    </StepTemplate>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}