{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuestionSubForm.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FormContainer, FormTitle } from \"../../UI/Form\";\nimport { StyledInput, Container as InputContainer, StyledLabel } from \"../../UI/Input\";\nimport { SmallButton } from \"../../UI/Buttons\";\nconst Modal = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color: red;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst ComplexInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\nconst StyledUploadedReplies = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem;\n  text-align: left;\n`;\n\nconst QuestionInput = ({\n  label,\n  handleChangeFunction,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(StyledInput, {\n    type: \"text\",\n    onChange: handleChangeFunction,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst UploadedReplies = ({\n  replies\n}) => {\n  return /*#__PURE__*/React.createElement(StyledUploadedReplies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, replies.map((reply, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"R: \", reply)));\n};\n\nexport const QuestionSubForm = ({\n  saveQuestionInState\n}) => {\n  const [question, setQuestion] = useState(\"\");\n  const [hasEnteredQuestion, setHasEnteredQuestion] = useState(false);\n  const [hasEnteredRightReply, setHasEnteredRightReply] = useState(false);\n  const [currentReply, setCurrentReply] = useState(\"\");\n  const [allReplies, setAllReplies] = useState([]);\n  const [rightReply, setRightReply] = useState(\"\");\n  console.log(question);\n  console.log(currentReply);\n  console.log(allReplies);\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Add a question to your quiz\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault(); // saveQuestionInState();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, hasEnteredQuestion ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Q: \", question) : /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    label: \"Question\",\n    value: question,\n    handleChangeFunction: e => setQuestion(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => setHasEnteredQuestion(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Load\")), allReplies.length > 0 && /*#__PURE__*/React.createElement(UploadedReplies, {\n    replies: allReplies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    value: currentReply,\n    label: \"Add a (wrong) reply\",\n    handleChangeFunction: e => setCurrentReply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => {\n      setAllReplies(prevReplies => [...prevReplies, currentReply]);\n      setCurrentReply(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    value: rightReply,\n    label: \"Add the right reply\",\n    handleChangeFunction: e => setRightReply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => {\n      setHasEnteredRightReply(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Load\")))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuestionSubForm.tsx"],"names":["React","useState","styled","FormContainer","FormTitle","StyledInput","Container","InputContainer","StyledLabel","SmallButton","Modal","div","ComplexInputContainer","StyledUploadedReplies","ul","QuestionInput","label","handleChangeFunction","value","UploadedReplies","replies","map","reply","index","QuestionSubForm","saveQuestionInState","question","setQuestion","hasEnteredQuestion","setHasEnteredQuestion","hasEnteredRightReply","setHasEnteredRightReply","currentReply","setCurrentReply","allReplies","setAllReplies","rightReply","setRightReply","console","log","e","preventDefault","target","length","prevReplies"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Question } from \"../../../models/PrivateQuiz\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../../UI/Form\";\nimport {\n  StyledInput,\n  Container as InputContainer,\n  StyledLabel\n} from \"../../UI/Input\";\nimport { SmallButton } from \"../../UI/Buttons\";\n\nconst Modal = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color: red;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ComplexInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst StyledUploadedReplies = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem;\n  text-align: left;\n`;\n\nconst QuestionInput: React.FC<{\n  label: string;\n  handleChangeFunction: any;\n  value: string;\n}> = ({ label, handleChangeFunction, value }) => {\n  return (\n    <InputContainer>\n      <StyledLabel>{label}</StyledLabel>\n      <StyledInput type=\"text\" onChange={handleChangeFunction} value={value} />\n    </InputContainer>\n  );\n};\n\nconst UploadedReplies: React.FC<{ replies: string[] }> = ({ replies }) => {\n  return (\n    <StyledUploadedReplies>\n      {replies.map((reply, index) => (\n        <li key={index}>R: {reply}</li>\n      ))}\n    </StyledUploadedReplies>\n  );\n};\n\ninterface Props {\n  saveQuestionInState: (question: Question) => void;\n}\n\nexport const QuestionSubForm: React.FC<Props> = ({ saveQuestionInState }) => {\n  const [question, setQuestion] = useState(\"\");\n  const [hasEnteredQuestion, setHasEnteredQuestion] = useState(false);\n  const [hasEnteredRightReply, setHasEnteredRightReply] = useState(false);\n  const [currentReply, setCurrentReply] = useState(\"\");\n  const [allReplies, setAllReplies] = useState<string[]>([]);\n  const [rightReply, setRightReply] = useState(\"\");\n\n  console.log(question);\n  console.log(currentReply);\n  console.log(allReplies);\n\n  return (\n    <Modal>\n      <FormContainer>\n        <FormTitle>Add a question to your quiz</FormTitle>\n        <form\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            // saveQuestionInState();\n          }}\n        >\n          {hasEnteredQuestion ? (\n            <h3>Q: {question}</h3>\n          ) : (\n            <ComplexInputContainer>\n              <QuestionInput\n                label=\"Question\"\n                value={question}\n                handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                  setQuestion(e.target.value)\n                }\n              />\n              <SmallButton onClick={() => setHasEnteredQuestion(true)}>\n                Load\n              </SmallButton>\n            </ComplexInputContainer>\n          )}\n\n          {allReplies.length > 0 && <UploadedReplies replies={allReplies} />}\n\n          <ComplexInputContainer>\n            <QuestionInput\n              value={currentReply}\n              label=\"Add a (wrong) reply\"\n              handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                setCurrentReply(e.target.value)\n              }\n            />\n\n            <SmallButton\n              onClick={() => {\n                setAllReplies(prevReplies => [...prevReplies, currentReply]);\n                setCurrentReply(\"\");\n              }}\n            >\n              Add\n            </SmallButton>\n          </ComplexInputContainer>\n\n          <ComplexInputContainer>\n            <QuestionInput\n              value={rightReply}\n              label=\"Add the right reply\"\n              handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                setRightReply(e.target.value)\n              }\n            />\n\n            <SmallButton\n              onClick={() => {\n                setHasEnteredRightReply(true);\n              }}\n            >\n              Load\n            </SmallButton>\n          </ComplexInputContainer>\n        </form>\n      </FormContainer>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}