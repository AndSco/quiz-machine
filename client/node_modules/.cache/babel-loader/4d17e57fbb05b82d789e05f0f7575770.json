{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/UI/QuestionCard.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { StyledButton } from \"../QuizChoiceButton\";\nimport { Colors } from \"../../constants/colors\";\nconst StyledCard = styled.div`\n  width: 600px;\n  padding: 2rem;\n  background-color: white;\n  align-items: flex-start;\n  position: relative;\n  border-radius: 20px;\n`;\nconst NextButton = styled(StyledButton)`\n  background-color: ${Colors.VIOLET};\n`;\nconst RepliesContainer = styled.div`\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: column;\n`;\nconst QuestionNumber = styled.h4`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #cccccc;\n  color: #696969;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Reply = styled.p`\n  text-align: left;\n  line-height: 24px;\n`;\nexport const QuestionCard = ({\n  question,\n  next,\n  numberOfQuestions,\n  currentNumberOfQuestion\n}) => {\n  return /*#__PURE__*/React.createElement(StyledCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, question.question), /*#__PURE__*/React.createElement(RepliesContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, question.allReplies.filter(reply => reply !== null).map((reply, index) => /*#__PURE__*/React.createElement(Reply, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, `${index + 1}. ${reply}`))), /*#__PURE__*/React.createElement(NextButton, {\n    onClick: next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"NEXT\"), /*#__PURE__*/React.createElement(QuestionNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, `${currentNumberOfQuestion}/${numberOfQuestions}`));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/UI/QuestionCard.tsx"],"names":["React","styled","StyledButton","Colors","StyledCard","div","NextButton","VIOLET","RepliesContainer","QuestionNumber","h4","Reply","p","QuestionCard","question","next","numberOfQuestions","currentNumberOfQuestion","allReplies","filter","reply","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,MAAMC,UAAU,GAAGH,MAAM,CAACI,GAAI;;;;;;;CAA9B;AASA,MAAMC,UAAU,GAAGL,MAAM,CAACC,YAAD,CAAe;sBAClBC,MAAM,CAACI,MAAO;CADpC;AAIA,MAAMC,gBAAgB,GAAGP,MAAM,CAACI,GAAI;;;;CAApC;AAMA,MAAMI,cAAc,GAAGR,MAAM,CAACS,EAAG;;;;;;;;;CAAjC;AAWA,MAAMC,KAAK,GAAGV,MAAM,CAACW,CAAE;;;CAAvB;AAYA,OAAO,MAAMC,YAAyC,GAAG,CAAC;AACxDC,EAAAA,QADwD;AAExDC,EAAAA,IAFwD;AAGxDC,EAAAA,iBAHwD;AAIxDC,EAAAA;AAJwD,CAAD,KAKnD;AACJ,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,QAAQ,CAACA,QAAd,CADF,eAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACI,UAAT,CACEC,MADF,CACSC,KAAK,IAAIA,KAAK,KAAK,IAD5B,EAEEC,GAFF,CAEM,CAACD,KAAD,EAAQE,KAAR,kBACH,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB,GAAEA,KAAK,GAAG,CAAE,KAAIF,KAAM,EAA3C,CAHH,CADH,CAFF,eASE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEL,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkB,GAAEE,uBAAwB,IAAGD,iBAAkB,EAAjE,CAVF,CADF;AAcD,CApBM","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Question } from \"../../models/Question\";\nimport { StyledButton } from \"../QuizChoiceButton\";\nimport { Colors } from \"../../constants/colors\";\n\nconst StyledCard = styled.div`\n  width: 600px;\n  padding: 2rem;\n  background-color: white;\n  align-items: flex-start;\n  position: relative;\n  border-radius: 20px;\n`;\n\nconst NextButton = styled(StyledButton)`\n  background-color: ${Colors.VIOLET};\n`;\n\nconst RepliesContainer = styled.div`\n  margin: 1rem 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst QuestionNumber = styled.h4`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #cccccc;\n  color: #696969;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Reply = styled.p`\n  text-align: left;\n  line-height: 24px;\n`;\n\ninterface QuestionCardProps {\n  question: Question;\n  numberOfQuestions: number;\n  currentNumberOfQuestion: number;\n  next: () => void;\n}\n\nexport const QuestionCard: React.FC<QuestionCardProps> = ({\n  question,\n  next,\n  numberOfQuestions,\n  currentNumberOfQuestion\n}) => {\n  return (\n    <StyledCard>\n      <h4>{question.question}</h4>\n      <RepliesContainer>\n        {question.allReplies\n          .filter(reply => reply !== null)\n          .map((reply, index) => (\n            <Reply key={index}>{`${index + 1}. ${reply}`}</Reply>\n          ))}\n      </RepliesContainer>\n      <NextButton onClick={next}>NEXT</NextButton>\n      <QuestionNumber>{`${currentNumberOfQuestion}/${numberOfQuestions}`}</QuestionNumber>\n    </StyledCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}