{"ast":null,"code":"import { getCategoryId } from \"../models/TriviaApi\";\nimport { TriviaBaseUrl } from \"../constants/urls\";\nexport const getProgrammingQuizApiQuestions = async (questionsAmount = 5, category, difficulty = \"medium\") => {};\nexport const getTriviaApiQuestions = async (questionsAmount = 5, category, difficulty = \"medium\") => {\n  const endpoint = `${TriviaBaseUrl}?amount=${questionsAmount}&category=${getCategoryId(category)}&difficulty=${difficulty}&type=multiple`;\n  console.log(endpoint);\n  const {\n    results: questions\n  } = await (await fetch(endpoint)).json();\n  return questions;\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/utils/APIFunctions.ts"],"names":["getCategoryId","TriviaBaseUrl","getProgrammingQuizApiQuestions","questionsAmount","category","difficulty","getTriviaApiQuestions","endpoint","console","log","results","questions","fetch","json"],"mappings":"AAAA,SAEEA,aAFF,QAKO,qBALP;AAOA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,8BAA8B,GAAG,OAC5CC,eAAuB,GAAG,CADkB,EAE5CC,QAF4C,EAG5CC,UAAsB,GAAG,QAHmB,KAIzC,CAAE,CAJA;AAMP,OAAO,MAAMC,qBAAqB,GAAG,OACnCH,eAAuB,GAAG,CADS,EAEnCC,QAFmC,EAGnCC,UAAsB,GAAG,QAHU,KAIJ;AAC/B,QAAME,QAAQ,GAAI,GAAEN,aAAc,WAAUE,eAAgB,aAAYH,aAAa,CACnFI,QADmF,CAEnF,eAAcC,UAAW,gBAF3B;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAM;AAAEG,IAAAA,OAAO,EAAEC;AAAX,MAAyB,MAAM,CAAC,MAAMC,KAAK,CAACL,QAAD,CAAZ,EAAwBM,IAAxB,EAArC;AAEA,SAAOF,SAAP;AACD,CAbM","sourcesContent":["import {\n  TriviaCategory,\n  getCategoryId,\n  Difficulty,\n  TriviaApiResponse\n} from \"../models/TriviaApi\";\nimport { ProgrammingQuizCategory } from \"../models/ProgrammingQuizApi\";\nimport { TriviaBaseUrl } from \"../constants/urls\";\n\nexport const getProgrammingQuizApiQuestions = async (\n  questionsAmount: number = 5,\n  category: TriviaCategory,\n  difficulty: Difficulty = \"medium\"\n) => {};\n\nexport const getTriviaApiQuestions = async (\n  questionsAmount: number = 5,\n  category: TriviaCategory,\n  difficulty: Difficulty = \"medium\"\n): Promise<TriviaApiResponse> => {\n  const endpoint = `${TriviaBaseUrl}?amount=${questionsAmount}&category=${getCategoryId(\n    category\n  )}&difficulty=${difficulty}&type=multiple`;\n\n  console.log(endpoint);\n  const { results: questions } = await (await fetch(endpoint)).json();\n\n  return questions;\n};\n"]},"metadata":{},"sourceType":"module"}