{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/ActualPublicQuiz.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport { QuestionCard } from \"../../replies/QuestionCard\";\nimport { getSubjectBackgroundPic } from \"../../../utils/functions\";\nimport { Ending } from \"../../Ending\";\nimport { QuizBackground } from \"../../UI/QuizBackground\";\nimport { QuizzesContext } from \"../../../contexts/quizzes/Quizzes\";\nexport const ActualQuiz = ({\n  subject,\n  allQuestions,\n  reset\n}) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const {\n    stopPlayingQuiz\n  } = useContext(QuizzesContext);\n\n  const goToNextQuestion = () => setCurrentQuestionIndex(prev => prev + 1);\n\n  const givePoint = () => setScore(prevScore => prevScore + 1);\n\n  const thereAreStillQuestions = () => allQuestions.length >= currentQuestionIndex + 1;\n\n  return /*#__PURE__*/React.createElement(QuizBackground, {\n    imageUrl: getSubjectBackgroundPic(subject),\n    stopPlaying: stopPlayingQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, thereAreStillQuestions() ? /*#__PURE__*/React.createElement(QuestionCard, {\n    question: allQuestions[currentQuestionIndex],\n    next: goToNextQuestion,\n    numberOfQuestions: allQuestions.length,\n    currentNumberOfQuestion: currentQuestionIndex + 1,\n    givePoint: givePoint,\n    quizType: \"public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Ending, {\n    score: score,\n    totalQuestions: allQuestions.length,\n    playAgain: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/ActualPublicQuiz.tsx"],"names":["React","useState","useContext","QuestionCard","getSubjectBackgroundPic","Ending","QuizBackground","QuizzesContext","ActualQuiz","subject","allQuestions","reset","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","stopPlayingQuiz","goToNextQuestion","prev","givePoint","prevScore","thereAreStillQuestions","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,uBAAT,QAAwC,0BAAxC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,cAAT,QAA+B,mCAA/B;AAQA,OAAO,MAAMC,UAAqC,GAAG,CAAC;AACpDC,EAAAA,OADoD;AAEpDC,EAAAA,YAFoD;AAGpDC,EAAAA;AAHoD,CAAD,KAI/C;AACJ,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDZ,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAsBd,UAAU,CAACK,cAAD,CAAtC;;AACA,QAAMU,gBAAgB,GAAG,MAAMJ,uBAAuB,CAACK,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAtD;;AACA,QAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAhC;;AACA,QAAMC,sBAAsB,GAAG,MAC7BX,YAAY,CAACY,MAAb,IAAuBV,oBAAoB,GAAG,CADhD;;AAGA,sBACE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAER,uBAAuB,CAACK,OAAD,CADnC;AAEE,IAAA,WAAW,EAAEO,eAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGK,sBAAsB,kBACrB,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAEX,YAAY,CAACE,oBAAD,CADxB;AAEE,IAAA,IAAI,EAAEK,gBAFR;AAGE,IAAA,iBAAiB,EAAEP,YAAY,CAACY,MAHlC;AAIE,IAAA,uBAAuB,EAAEV,oBAAoB,GAAG,CAJlD;AAKE,IAAA,SAAS,EAAEO,SALb;AAME,IAAA,QAAQ,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqB,gBAUrB,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEL,KADT;AAEE,IAAA,cAAc,EAAEJ,YAAY,CAACY,MAF/B;AAGE,IAAA,SAAS,EAAEX,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADF;AAuBD,CApCM","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Question, Subject } from \"../../../models/PublicQuizQuestion\";\nimport { QuestionCard } from \"../../replies/QuestionCard\";\nimport { getSubjectBackgroundPic } from \"../../../utils/functions\";\nimport { Ending } from \"../../Ending\";\nimport { QuizBackground } from \"../../UI/QuizBackground\";\nimport { QuizzesContext } from \"../../../contexts/quizzes/Quizzes\";\n\ninterface ActualQuizProps {\n  allQuestions: Question[];\n  subject: Subject;\n  reset: () => void;\n}\n\nexport const ActualQuiz: React.FC<ActualQuizProps> = ({\n  subject,\n  allQuestions,\n  reset\n}) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const { stopPlayingQuiz } = useContext(QuizzesContext);\n  const goToNextQuestion = () => setCurrentQuestionIndex(prev => prev + 1);\n  const givePoint = () => setScore(prevScore => prevScore + 1);\n  const thereAreStillQuestions = () =>\n    allQuestions.length >= currentQuestionIndex + 1;\n\n  return (\n    <QuizBackground\n      imageUrl={getSubjectBackgroundPic(subject)}\n      stopPlaying={stopPlayingQuiz}\n    >\n      {thereAreStillQuestions() ? (\n        <QuestionCard\n          question={allQuestions[currentQuestionIndex]}\n          next={goToNextQuestion}\n          numberOfQuestions={allQuestions.length}\n          currentNumberOfQuestion={currentQuestionIndex + 1}\n          givePoint={givePoint}\n          quizType=\"public\"\n        />\n      ) : (\n        <Ending\n          score={score}\n          totalQuestions={allQuestions.length}\n          playAgain={reset}\n        />\n      )}\n    </QuizBackground>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}