{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/MyQuizCard.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../../constants/colors\";\nimport { GridCard } from \"../../UI/GridCard\";\nimport { Link } from \"react-router-dom\";\nimport { copyToCipboard } from \"../../../utils/functions\";\nconst MyStyledQuizCard = styled(GridCard)`\n  width: 500px;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2rem 0;\n  background-image: ${props => `url(\"${props.imageUrl}\")`};\n  cursor: inherit;\n\n  h3 {\n    background-color: ${Colors.YELLOW};\n    padding: 0.2rem 0.5rem;\n    color: ${Colors.BLACK};\n    font-size: 1.5rem;\n  }\n`;\nconst ActionButtonsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\nconst ActionButton = styled.h5`\n  background-color: white;\n  border-radius: 30px;\n  font-size: 0.7rem;\n  padding: 0.4rem 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${Colors.BLACK};\n  opacity: 0.9;\n  cursor: pointer;\n`;\nexport const MyQuizCard = ({\n  quiz\n}) => {\n  console.log(\"QUIZ is \", quiz);\n  const quizUrl = `/quiz/${quiz._id}`;\n  return /*#__PURE__*/React.createElement(MyStyledQuizCard, {\n    imageUrl: quiz.backgroundImageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, quiz.title), /*#__PURE__*/React.createElement(ActionButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: quizUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Play\")), /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => copyToCipboard(quizUrl, quizUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Copy url\"), /*#__PURE__*/React.createElement(ActionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(ActionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Delete\")));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/MyQuizCard.tsx"],"names":["React","styled","Colors","GridCard","Link","copyToCipboard","MyStyledQuizCard","props","imageUrl","YELLOW","BLACK","ActionButtonsContainer","div","ActionButton","h5","MyQuizCard","quiz","console","log","quizUrl","_id","backgroundImageUrl","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,MAAMC,gBAAgB,GAAGL,MAAM,CAACE,QAAD,CAAW;;;;;;sBAMnBI,KAAD,IACjB,QAAOA,KAAK,CAACC,QAAS,IAAI;;;;wBAIPN,MAAM,CAACO,MAAO;;aAEzBP,MAAM,CAACQ,KAAM;;;CAb1B;AAkBA,MAAMC,sBAAsB,GAAGV,MAAM,CAACW,GAAI;;;;CAA1C;AAMA,MAAMC,YAAY,GAAGZ,MAAM,CAACa,EAAG;;;;;;;;WAQpBZ,MAAM,CAACQ,KAAM;;;CARxB;AAaA,OAAO,MAAMK,UAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACvEC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACA,QAAMG,OAAO,GAAI,SAAQH,IAAI,CAACI,GAAI,EAAlC;AACA,sBACE,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEJ,IAAI,CAACK,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAI,CAACM,KAAV,CADF,eAEE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEH,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAIE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMd,cAAc,CAACc,OAAD,EAAUA,OAAV,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CAFF,CADF;AAeD,CAlBM","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { Colors } from \"../../../constants/colors\";\nimport { GridCard } from \"../../UI/GridCard\";\nimport { Link } from \"react-router-dom\";\nimport { copyToCipboard } from \"../../../utils/functions\";\n\nconst MyStyledQuizCard = styled(GridCard)`\n  width: 500px;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2rem 0;\n  background-image: ${(props: { imageUrl: string }) =>\n    `url(\"${props.imageUrl}\")`};\n  cursor: inherit;\n\n  h3 {\n    background-color: ${Colors.YELLOW};\n    padding: 0.2rem 0.5rem;\n    color: ${Colors.BLACK};\n    font-size: 1.5rem;\n  }\n`;\n\nconst ActionButtonsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ActionButton = styled.h5`\n  background-color: white;\n  border-radius: 30px;\n  font-size: 0.7rem;\n  padding: 0.4rem 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${Colors.BLACK};\n  opacity: 0.9;\n  cursor: pointer;\n`;\n\nexport const MyQuizCard: React.FC<{ quiz: PrivateQuiz }> = ({ quiz }) => {\n  console.log(\"QUIZ is \", quiz);\n  const quizUrl = `/quiz/${quiz._id}`;\n  return (\n    <MyStyledQuizCard imageUrl={quiz.backgroundImageUrl as string}>\n      <h3>{quiz.title}</h3>\n      <ActionButtonsContainer>\n        <Link to={quizUrl}>\n          <ActionButton>Play</ActionButton>\n        </Link>\n        <ActionButton onClick={() => copyToCipboard(quizUrl, quizUrl)}>\n          Copy url\n        </ActionButton>\n        <ActionButton>Edit</ActionButton>\n        <ActionButton>Delete</ActionButton>\n      </ActionButtonsContainer>\n    </MyStyledQuizCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}