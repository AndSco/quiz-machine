{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuizOverview.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { BigTitle } from \"../../UI/Titles\";\nimport { GridWrapper } from \"../../UI/GridWrapper\";\nimport { MyQuizCard } from \"./MyQuizCard\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { Modal } from \"../../UI/Modal\";\nconst Wrapper = styled(GridWrapper)`\n  flex-wrap: nowrap;\n  flex-direction: column;\n`;\nexport const QuizOverview = ({\n  myQuizzes\n}) => {\n  const [isEditingQuiz, setIsEditingQuiz] = useState(false);\n  const [quizNowEditing, setQuizNowEditing] = useState(null);\n  const [isAddingQuestion, setIsAddingQuestion] = useState(false);\n\n  const startAddingQuestion = () => setIsAddingQuestion(true);\n\n  const startEditingQuiz = quiz => {\n    setQuizNowEditing(quiz);\n    setIsEditingQuiz(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isEditingQuiz ? /*#__PURE__*/React.createElement(Modal, {\n    handleClose: () => setIsEditingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuizCreationOrEditForm, {\n    usage: \"editing\",\n    currentQuiz: quizNowEditing,\n    onFormClose: () => setIsEditingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BigTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Your quizzes\"), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, myQuizzes.map((quiz, index) => /*#__PURE__*/React.createElement(MyQuizCard, {\n    quiz: quiz,\n    key: index,\n    editQuiz: startEditingQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  })))));\n}; // import React, { useState } from \"react\";\n// import styled from \"styled-components\";\n// import { PrivateQuiz } from \"../../../models/PrivateQuiz\";\n// import { BigTitle } from \"../../UI/Titles\";\n// import { GridWrapper } from \"../../UI/GridWrapper\";\n// import { MyQuizCard } from \"./MyQuizCard\";\n// import { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\n// import { Modal } from \"../../UI/Modal\";\n// interface Props {\n//   myQuizzes: PrivateQuiz[];\n// }\n// const Wrapper = styled(GridWrapper)`\n//   flex-wrap: nowrap;\n//   flex-direction: column;\n// `;\n// export const QuizOverview: React.FC<Props> = ({ myQuizzes }) => {\n//   const [isEditingQuiz, setIsEditingQuiz] = useState(false);\n//   const [quizNowEditing, setQuizNowEditing] = useState<PrivateQuiz | null>(\n//     null\n//   );\n//   const startEditingQuiz = (quiz: PrivateQuiz) => {\n//     setQuizNowEditing(quiz);\n//     setIsEditingQuiz(true);\n//   };\n//   return (\n//     <>\n//       {isEditingQuiz ? (\n//         <Modal handleClose={() => setIsEditingQuiz(false)}>\n//           <QuizCreationOrEditForm\n//             usage=\"editing\"\n//             currentQuiz={quizNowEditing as PrivateQuiz}\n//             onFormClose={() => setIsEditingQuiz(false)}\n//           />\n//         </Modal>\n//       ) : (\n//         <>\n//           <BigTitle>Your quizzes</BigTitle>\n//           <Wrapper>\n//             {myQuizzes.map((quiz, index) => (\n//               <MyQuizCard quiz={quiz} key={index} editQuiz={startEditingQuiz} />\n//             ))}\n//           </Wrapper>\n//         </>\n//       )}\n//     </>\n//   );\n// };","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuizOverview.tsx"],"names":["React","useState","styled","BigTitle","GridWrapper","MyQuizCard","QuizCreationOrEditForm","Modal","Wrapper","QuizOverview","myQuizzes","isEditingQuiz","setIsEditingQuiz","quizNowEditing","setQuizNowEditing","isAddingQuestion","setIsAddingQuestion","startAddingQuestion","startEditingQuiz","quiz","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAMA,MAAMC,OAAO,GAAGN,MAAM,CAACE,WAAD,CAAc;;;CAApC;AAKA,OAAO,MAAMK,YAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC9D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAClD,IADkD,CAApD;AAIA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,KAAD,CAAxD;;AACA,QAAMgB,mBAAmB,GAAG,MAAMD,mBAAmB,CAAC,IAAD,CAArD;;AAEA,QAAME,gBAAgB,GAAIC,IAAD,IAAuB;AAC9CL,IAAAA,iBAAiB,CAACK,IAAD,CAAjB;AACAP,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAHD;;AAKA,sBACE,0CACGD,aAAa,gBACZ,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAEC,cAFf;AAGE,IAAA,WAAW,EAAE,MAAMD,gBAAgB,CAAC,KAAD,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,gBASZ,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACU,GAAV,CAAc,CAACD,IAAD,EAAOE,KAAP,kBACb,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,IAAlB;AAAwB,IAAA,GAAG,EAAEE,KAA7B;AAAoC,IAAA,QAAQ,EAAEH,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CAVJ,CADF;AAsBD,CApCM,C,CAsCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { BigTitle } from \"../../UI/Titles\";\nimport { GridWrapper } from \"../../UI/GridWrapper\";\nimport { MyQuizCard } from \"./MyQuizCard\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { Modal } from \"../../UI/Modal\";\n\ninterface Props {\n  myQuizzes: PrivateQuiz[];\n}\n\nconst Wrapper = styled(GridWrapper)`\n  flex-wrap: nowrap;\n  flex-direction: column;\n`;\n\nexport const QuizOverview: React.FC<Props> = ({ myQuizzes }) => {\n  const [isEditingQuiz, setIsEditingQuiz] = useState(false);\n  const [quizNowEditing, setQuizNowEditing] = useState<PrivateQuiz | null>(\n    null\n  );\n\n  const [isAddingQuestion, setIsAddingQuestion] = useState(false);\n  const startAddingQuestion = () => setIsAddingQuestion(true);\n\n  const startEditingQuiz = (quiz: PrivateQuiz) => {\n    setQuizNowEditing(quiz);\n    setIsEditingQuiz(true);\n  };\n\n  return (\n    <>\n      {isEditingQuiz ? (\n        <Modal handleClose={() => setIsEditingQuiz(false)}>\n          <QuizCreationOrEditForm\n            usage=\"editing\"\n            currentQuiz={quizNowEditing as PrivateQuiz}\n            onFormClose={() => setIsEditingQuiz(false)}\n          />\n        </Modal>\n      ) : (\n        <>\n          <BigTitle>Your quizzes</BigTitle>\n          <Wrapper>\n            {myQuizzes.map((quiz, index) => (\n              <MyQuizCard quiz={quiz} key={index} editQuiz={startEditingQuiz} />\n            ))}\n          </Wrapper>\n        </>\n      )}\n    </>\n  );\n};\n\n// import React, { useState } from \"react\";\n// import styled from \"styled-components\";\n// import { PrivateQuiz } from \"../../../models/PrivateQuiz\";\n// import { BigTitle } from \"../../UI/Titles\";\n// import { GridWrapper } from \"../../UI/GridWrapper\";\n// import { MyQuizCard } from \"./MyQuizCard\";\n// import { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\n// import { Modal } from \"../../UI/Modal\";\n\n// interface Props {\n//   myQuizzes: PrivateQuiz[];\n// }\n\n// const Wrapper = styled(GridWrapper)`\n//   flex-wrap: nowrap;\n//   flex-direction: column;\n// `;\n\n// export const QuizOverview: React.FC<Props> = ({ myQuizzes }) => {\n//   const [isEditingQuiz, setIsEditingQuiz] = useState(false);\n//   const [quizNowEditing, setQuizNowEditing] = useState<PrivateQuiz | null>(\n//     null\n//   );\n\n//   const startEditingQuiz = (quiz: PrivateQuiz) => {\n//     setQuizNowEditing(quiz);\n//     setIsEditingQuiz(true);\n//   };\n\n//   return (\n//     <>\n//       {isEditingQuiz ? (\n//         <Modal handleClose={() => setIsEditingQuiz(false)}>\n//           <QuizCreationOrEditForm\n//             usage=\"editing\"\n//             currentQuiz={quizNowEditing as PrivateQuiz}\n//             onFormClose={() => setIsEditingQuiz(false)}\n//           />\n//         </Modal>\n//       ) : (\n//         <>\n//           <BigTitle>Your quizzes</BigTitle>\n//           <Wrapper>\n//             {myQuizzes.map((quiz, index) => (\n//               <MyQuizCard quiz={quiz} key={index} editQuiz={startEditingQuiz} />\n//             ))}\n//           </Wrapper>\n//         </>\n//       )}\n//     </>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}