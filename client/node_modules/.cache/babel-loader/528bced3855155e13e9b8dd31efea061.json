{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { QuizType } from \"./models/Question\";\nimport { FirstStep } from \"./components/steps/FirstStep\";\nimport { SecondStep } from \"./components/steps/SecondStep\";\nimport { ThirdStep } from \"./components/steps/ThirdStep\";\nimport { FourthStep } from \"./components/steps/FourthStep\";\nimport { FifthStep } from \"./components/steps/FifthStep\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [quizType, setQuizType] = useState(QuizType.TRIVIA);\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\n  const [difficultyLevel, setDifficultyLevel] = useState(\"medium\");\n  const [currentSubject, setCurrentSubject] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const chooseQuiz = quizType => {\n    setQuizType(quizType);\n  };\n\n  const chooseAmountOfQuestions = num => {\n    setNumOfQuestions(num);\n  };\n\n  const changeLevel = level => setDifficultyLevel(level);\n\n  const chooseSubject = subject => {\n    setCurrentSubject(subject);\n  };\n\n  const goForward = () => setCurrentStep(prev => prev + 1);\n\n  const uploadQuestions = questions => setQuestions(questions);\n\n  const AllTogether = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FirstStep, {\n      chooseQuiz: chooseQuiz,\n      goForward: goForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), \";\", /*#__PURE__*/React.createElement(SecondStep, {\n      chooseAmountOfQuestions: chooseAmountOfQuestions,\n      currentAmount: numOfQuestions,\n      goForward: goForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ThirdStep, {\n      currentLevel: difficultyLevel,\n      changeLevel: changeLevel,\n      goForward: goForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FourthStep, {\n      quizType: quizType,\n      goForward: goForward,\n      updateSubject: chooseSubject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FifthStep, {\n      quizType: quizType,\n      numberOfQuestions: numOfQuestions,\n      difficulty: difficultyLevel,\n      subject: currentSubject,\n      uploadQuestions: uploadQuestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  console.log(\"QST\", questions);\n\n  const renderContent = () => {\n    switch (currentStep) {\n      case 1:\n        return /*#__PURE__*/React.createElement(FirstStep, {\n          chooseQuiz: chooseQuiz,\n          goForward: goForward,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(SecondStep, {\n          chooseAmountOfQuestions: chooseAmountOfQuestions,\n          currentAmount: numOfQuestions,\n          goForward: goForward,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(ThirdStep, {\n          currentLevel: difficultyLevel,\n          changeLevel: changeLevel,\n          goForward: goForward,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(FourthStep, {\n          quizType: quizType,\n          goForward: goForward,\n          updateSubject: chooseSubject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }\n        });\n\n      case 5:\n        return /*#__PURE__*/React.createElement(FifthStep, {\n          quizType: quizType,\n          numberOfQuestions: numOfQuestions,\n          difficulty: difficultyLevel,\n          subject: currentSubject,\n          uploadQuestions: uploadQuestions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 16\n          }\n        }, \"NOTHING\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AllTogether, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/App.tsx"],"names":["React","useState","QuizType","FirstStep","SecondStep","ThirdStep","FourthStep","FifthStep","App","questions","setQuestions","quizType","setQuizType","TRIVIA","numOfQuestions","setNumOfQuestions","difficultyLevel","setDifficultyLevel","currentSubject","setCurrentSubject","currentStep","setCurrentStep","chooseQuiz","chooseAmountOfQuestions","num","changeLevel","level","chooseSubject","subject","goForward","prev","uploadQuestions","AllTogether","display","flexDirection","alignContent","justifyContent","console","log","renderContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { getTriviaApiQuestions } from \"./utils/triviaAPI\";\nimport { getProgrammingQuizApiQuestions } from \"./utils/programmingQuizAPI\";\nimport { QuizType, Question, Subject } from \"./models/Question\";\nimport { normalizeQuestions } from \"./utils/functions\";\nimport { QuizChoiceButton } from \"./components/QuizChoiceButton\";\nimport { FirstStep } from \"./components/steps/FirstStep\";\nimport { SecondStep } from \"./components/steps/SecondStep\";\nimport { ThirdStep } from \"./components/steps/ThirdStep\";\nimport { Difficulty } from \"./models/TriviaApi\";\nimport { FourthStep } from \"./components/steps/FourthStep\";\nimport { FifthStep } from \"./components/steps/FifthStep\";\n\nconst App: React.FC = () => {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [quizType, setQuizType] = useState<QuizType>(QuizType.TRIVIA);\n  const [numOfQuestions, setNumOfQuestions] = useState<number>(5);\n  const [difficultyLevel, setDifficultyLevel] = useState<Difficulty>(\"medium\");\n  const [currentSubject, setCurrentSubject] = useState<Subject | \"\">(\"\");\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const chooseQuiz = (quizType: QuizType) => {\n    setQuizType(quizType);\n  };\n\n  const chooseAmountOfQuestions = (num: number) => {\n    setNumOfQuestions(num);\n  };\n\n  const changeLevel = (level: Difficulty) => setDifficultyLevel(level);\n\n  const chooseSubject = (subject: Subject) => {\n    setCurrentSubject(subject);\n  };\n\n  const goForward = () => setCurrentStep(prev => prev + 1);\n\n  const uploadQuestions = (questions: Question[]) => setQuestions(questions);\n\n  const AllTogether: React.FC = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <FirstStep chooseQuiz={chooseQuiz} goForward={goForward} />;\n        <SecondStep\n          chooseAmountOfQuestions={chooseAmountOfQuestions}\n          currentAmount={numOfQuestions}\n          goForward={goForward}\n        />\n        <ThirdStep\n          currentLevel={difficultyLevel}\n          changeLevel={changeLevel}\n          goForward={goForward}\n        />\n        <FourthStep\n          quizType={quizType}\n          goForward={goForward}\n          updateSubject={chooseSubject}\n        />\n        <FifthStep\n          quizType={quizType}\n          numberOfQuestions={numOfQuestions}\n          difficulty={difficultyLevel}\n          subject={currentSubject as Subject}\n          uploadQuestions={uploadQuestions}\n        />\n      </div>\n    );\n  };\n\n  console.log(\"QST\", questions);\n\n  const renderContent = () => {\n    switch (currentStep) {\n      case 1:\n        return <FirstStep chooseQuiz={chooseQuiz} goForward={goForward} />;\n\n      case 2:\n        return (\n          <SecondStep\n            chooseAmountOfQuestions={chooseAmountOfQuestions}\n            currentAmount={numOfQuestions}\n            goForward={goForward}\n          />\n        );\n\n      case 3:\n        return (\n          <ThirdStep\n            currentLevel={difficultyLevel}\n            changeLevel={changeLevel}\n            goForward={goForward}\n          />\n        );\n\n      case 4:\n        return (\n          <FourthStep\n            quizType={quizType}\n            goForward={goForward}\n            updateSubject={chooseSubject}\n          />\n        );\n\n      case 5:\n        return (\n          <FifthStep\n            quizType={quizType}\n            numberOfQuestions={numOfQuestions}\n            difficulty={difficultyLevel}\n            subject={currentSubject as Subject}\n            uploadQuestions={uploadQuestions}\n          />\n        );\n\n      default:\n        return <h1>NOTHING</h1>;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* {renderContent()} */}\n        <AllTogether />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}