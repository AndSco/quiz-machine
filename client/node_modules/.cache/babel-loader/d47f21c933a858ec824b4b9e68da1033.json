{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/UserDashboard.tsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { MediumButton } from \"../../UI/Buttons\";\nimport { QuizCreationForm } from \"./QuizCreationForm\";\nimport { QuizOverview } from \"./QuizOverview\";\nimport { getUserQuizzes } from \"../../../utils/dbFunctions\";\nconst StyledDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const UserDashboard = () => {\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  console.log(\"current user\", currentUser);\n  const history = useHistory();\n  const [sectionVisiting, setSectionVisiting] = useState(\"home\");\n  const [myQuizzes, setMyQuizzes] = useState([]);\n\n  const getMyQuizzes = async () => {\n    const quizzes = await getUserQuizzes(currentUser._id);\n    setMyQuizzes(quizzes);\n  };\n\n  useEffect(() => {\n    getMyQuizzes();\n  }, []);\n  useEffect(() => {\n    history.push(\"/myDashboard\");\n  }, [history]);\n\n  const changeSection = section => setSectionVisiting(section);\n\n  if (!currentUser) return null;\n  return /*#__PURE__*/React.createElement(StyledDashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, sectionVisiting === \"home\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Welcome \", currentUser.username.toUpperCase()), /*#__PURE__*/React.createElement(MediumButton, {\n    onClick: () => changeSection(\"quizCreation\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Create new quiz\"), /*#__PURE__*/React.createElement(MediumButton, {\n    onClick: () => changeSection(\"quizOverview\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"See your quizzes\")) : sectionVisiting === \"quizCreation\" ? /*#__PURE__*/React.createElement(QuizCreationForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(QuizOverview, {\n    myQuizzes: currentUser.quizzes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/UserDashboard.tsx"],"names":["React","useContext","useEffect","useState","styled","AuthContext","useHistory","MediumButton","QuizCreationForm","QuizOverview","getUserQuizzes","StyledDashboard","div","UserDashboard","currentUser","console","log","history","sectionVisiting","setSectionVisiting","myQuizzes","setMyQuizzes","getMyQuizzes","quizzes","_id","push","changeSection","section","username","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,MAAMC,eAAe,GAAGP,MAAM,CAACQ,GAAI;;;;CAAnC;AAQA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAkBb,UAAU,CAACI,WAAD,CAAlC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,WAA5B;AACA,QAAMG,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CACpD,MADoD,CAAtD;AAGA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAgB,EAAhB,CAA1C;;AAEA,QAAMmB,YAAY,GAAG,YAAY;AAC/B,UAAMC,OAAO,GAAG,MAAMb,cAAc,CAACI,WAAW,CAAEU,GAAd,CAApC;AACAH,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAHD;;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACQ,IAAR,CAAa,cAAb;AACD,GAFQ,EAEN,CAACR,OAAD,CAFM,CAAT;;AAIA,QAAMS,aAAa,GAAIC,OAAD,IACpBR,kBAAkB,CAACQ,OAAD,CADpB;;AAGA,MAAI,CAACb,WAAL,EAAkB,OAAO,IAAP;AAElB,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,eAAe,KAAK,MAApB,gBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaJ,WAAW,CAAEc,QAAb,CAAsBC,WAAtB,EAAb,CADF,eAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMH,aAAa,CAAC,cAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAKE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,cAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CADD,GAUGR,eAAe,KAAK,cAApB,gBACF,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,gBAGF,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEJ,WAAW,CAACS,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADF;AAmBD,CA9CM","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { MediumButton } from \"../../UI/Buttons\";\nimport { QuizCreationForm } from \"./QuizCreationForm\";\nimport { QuizOverview } from \"./QuizOverview\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { getUserQuizzes } from \"../../../utils/dbFunctions\";\n\nconst StyledDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\ntype SectionsToVisit = \"quizCreation\" | \"quizOverview\" | \"home\";\n\nexport const UserDashboard: React.FC = () => {\n  const { currentUser } = useContext(AuthContext);\n  console.log(\"current user\", currentUser);\n  const history = useHistory();\n  const [sectionVisiting, setSectionVisiting] = useState<SectionsToVisit>(\n    \"home\"\n  );\n  const [myQuizzes, setMyQuizzes] = useState<PrivateQuiz[]>([]);\n\n  const getMyQuizzes = async () => {\n    const quizzes = await getUserQuizzes(currentUser!._id);\n    setMyQuizzes(quizzes);\n  };\n\n  useEffect(() => {\n    getMyQuizzes();\n  }, []);\n\n  useEffect(() => {\n    history.push(\"/myDashboard\");\n  }, [history]);\n\n  const changeSection = (section: SectionsToVisit) =>\n    setSectionVisiting(section);\n\n  if (!currentUser) return null;\n\n  return (\n    <StyledDashboard>\n      {sectionVisiting === \"home\" ? (\n        <>\n          <h1>Welcome {currentUser!.username.toUpperCase()}</h1>\n          <MediumButton onClick={() => changeSection(\"quizCreation\")}>\n            Create new quiz\n          </MediumButton>\n          <MediumButton onClick={() => changeSection(\"quizOverview\")}>\n            See your quizzes\n          </MediumButton>\n        </>\n      ) : sectionVisiting === \"quizCreation\" ? (\n        <QuizCreationForm />\n      ) : (\n        <QuizOverview myQuizzes={currentUser.quizzes as PrivateQuiz[]} />\n      )}\n    </StyledDashboard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}