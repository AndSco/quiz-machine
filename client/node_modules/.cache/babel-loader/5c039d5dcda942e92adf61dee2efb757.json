{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuestionSubForm.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuizQuestion } from \"../../../models/PrivateQuiz\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../../UI/Form\";\nimport { StyledInput, Container as InputContainer, StyledLabel } from \"../../UI/Input\";\nimport { SmallButton } from \"../../UI/Buttons\";\nimport { Modal } from \"../../UI/Modal\";\nimport { shuffleArray } from \"../../../utils/functions\";\nimport { Colors } from \"../../../constants/colors\";\nconst ComplexInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\nconst StyledUploadedReplies = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem;\n  text-align: left;\n`;\n\nconst QuestionInput = ({\n  label,\n  handleChangeFunction,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(StyledInput, {\n    type: \"text\",\n    onChange: handleChangeFunction,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst PinkSubmitButton = styled(SubmitButton)`\n  color: ${Colors.STEEL_PINK};\n`;\n\nconst UploadedReplies = ({\n  replies\n}) => {\n  return /*#__PURE__*/React.createElement(StyledUploadedReplies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, replies.map((reply, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"R: \", reply)));\n};\n\nexport const QuestionSubForm = ({\n  saveQuestionInState,\n  closeItself\n}) => {\n  const [question, setQuestion] = useState(\"\");\n  const [hasEnteredQuestion, setHasEnteredQuestion] = useState(false);\n  const [hasEnteredRightReply, setHasEnteredRightReply] = useState(false);\n  const [currentReply, setCurrentReply] = useState(\"\");\n  const [allReplies, setAllReplies] = useState([]);\n  const [rightReply, setRightReply] = useState(\"\");\n\n  const handleSubmit = () => {\n    const wrongAndRightReplies = shuffleArray([...allReplies, rightReply]);\n    const questionToSave = new PrivateQuizQuestion(question, wrongAndRightReplies, rightReply);\n    console.log(\"Now saving\", questionToSave);\n    saveQuestionInState(questionToSave);\n    closeItself();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    handleClose: closeItself,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Add a question to your quiz\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, hasEnteredQuestion ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Q: \", question) : /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    label: \"Question\",\n    value: question,\n    handleChangeFunction: e => setQuestion(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => setHasEnteredQuestion(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Load\")), !hasEnteredRightReply && /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    value: rightReply,\n    label: \"Add the right reply\",\n    handleChangeFunction: e => setRightReply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => {\n      setHasEnteredRightReply(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Load\")), allReplies.length > 0 && /*#__PURE__*/React.createElement(UploadedReplies, {\n    replies: allReplies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }), hasEnteredRightReply && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 36\n    }\n  }, \"Right reply: \", rightReply), /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    value: currentReply,\n    label: \"Add a (wrong) reply\",\n    handleChangeFunction: e => setCurrentReply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => {\n      setAllReplies(prevReplies => [...prevReplies, currentReply]);\n      setCurrentReply(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(PinkSubmitButton, {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"SAVE QUESTION\"))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuestionSubForm.tsx"],"names":["React","useState","styled","PrivateQuizQuestion","FormContainer","FormTitle","SubmitButton","StyledInput","Container","InputContainer","StyledLabel","SmallButton","Modal","shuffleArray","Colors","ComplexInputContainer","div","StyledUploadedReplies","ul","QuestionInput","label","handleChangeFunction","value","PinkSubmitButton","STEEL_PINK","UploadedReplies","replies","map","reply","index","QuestionSubForm","saveQuestionInState","closeItself","question","setQuestion","hasEnteredQuestion","setHasEnteredQuestion","hasEnteredRightReply","setHasEnteredRightReply","currentReply","setCurrentReply","allReplies","setAllReplies","rightReply","setRightReply","handleSubmit","wrongAndRightReplies","questionToSave","console","log","e","preventDefault","target","length","prevReplies"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuizQuestion } from \"../../../models/PrivateQuiz\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../../UI/Form\";\nimport {\n  StyledInput,\n  Container as InputContainer,\n  StyledLabel\n} from \"../../UI/Input\";\nimport { SmallButton } from \"../../UI/Buttons\";\nimport { Modal } from \"../../UI/Modal\";\nimport { shuffleArray } from \"../../../utils/functions\";\nimport { Colors } from \"../../../constants/colors\";\n\nconst ComplexInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst StyledUploadedReplies = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem;\n  text-align: left;\n`;\n\nconst QuestionInput: React.FC<{\n  label: string;\n  handleChangeFunction: any;\n  value: string;\n}> = ({ label, handleChangeFunction, value }) => {\n  return (\n    <InputContainer>\n      <StyledLabel>{label}</StyledLabel>\n      <StyledInput type=\"text\" onChange={handleChangeFunction} value={value} />\n    </InputContainer>\n  );\n};\n\nconst PinkSubmitButton = styled(SubmitButton)`\n  color: ${Colors.STEEL_PINK};\n`;\n\nconst UploadedReplies: React.FC<{ replies: string[] }> = ({ replies }) => {\n  return (\n    <StyledUploadedReplies>\n      {replies.map((reply, index) => (\n        <li key={index}>R: {reply}</li>\n      ))}\n    </StyledUploadedReplies>\n  );\n};\n\ninterface Props {\n  saveQuestionInState: (question: PrivateQuizQuestion) => void;\n  closeItself: () => void;\n}\n\nexport const QuestionSubForm: React.FC<Props> = ({\n  saveQuestionInState,\n  closeItself\n}) => {\n  const [question, setQuestion] = useState(\"\");\n  const [hasEnteredQuestion, setHasEnteredQuestion] = useState(false);\n  const [hasEnteredRightReply, setHasEnteredRightReply] = useState(false);\n  const [currentReply, setCurrentReply] = useState(\"\");\n  const [allReplies, setAllReplies] = useState<string[]>([]);\n  const [rightReply, setRightReply] = useState(\"\");\n\n  const handleSubmit = () => {\n    const wrongAndRightReplies = shuffleArray<string>([\n      ...allReplies,\n      rightReply\n    ]);\n    const questionToSave = new PrivateQuizQuestion(\n      question,\n      wrongAndRightReplies,\n      rightReply\n    );\n    console.log(\"Now saving\", questionToSave);\n    saveQuestionInState(questionToSave);\n    closeItself();\n  };\n\n  return (\n    <Modal handleClose={closeItself}>\n      <FormContainer>\n        <FormTitle>Add a question to your quiz</FormTitle>\n        <form\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n          }}\n        >\n          {hasEnteredQuestion ? (\n            <h3>Q: {question}</h3>\n          ) : (\n            <ComplexInputContainer>\n              <QuestionInput\n                label=\"Question\"\n                value={question}\n                handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                  setQuestion(e.target.value)\n                }\n              />\n              <SmallButton onClick={() => setHasEnteredQuestion(true)}>\n                Load\n              </SmallButton>\n            </ComplexInputContainer>\n          )}\n\n          {!hasEnteredRightReply && (\n            <ComplexInputContainer>\n              <QuestionInput\n                value={rightReply}\n                label=\"Add the right reply\"\n                handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                  setRightReply(e.target.value)\n                }\n              />\n\n              <SmallButton\n                onClick={() => {\n                  setHasEnteredRightReply(true);\n                }}\n              >\n                Load\n              </SmallButton>\n            </ComplexInputContainer>\n          )}\n\n          {allReplies.length > 0 && <UploadedReplies replies={allReplies} />}\n          {hasEnteredRightReply && <h5>Right reply: {rightReply}</h5>}\n\n          <ComplexInputContainer>\n            <QuestionInput\n              value={currentReply}\n              label=\"Add a (wrong) reply\"\n              handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                setCurrentReply(e.target.value)\n              }\n            />\n\n            <SmallButton\n              onClick={() => {\n                setAllReplies(prevReplies => [...prevReplies, currentReply]);\n                setCurrentReply(\"\");\n              }}\n            >\n              Add\n            </SmallButton>\n          </ComplexInputContainer>\n          <PinkSubmitButton type=\"submit\" onClick={handleSubmit}>\n            SAVE QUESTION\n          </PinkSubmitButton>\n        </form>\n      </FormContainer>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}