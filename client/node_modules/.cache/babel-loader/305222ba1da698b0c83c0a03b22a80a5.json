{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar.tsx\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Logo } from \"./Logo\";\nimport { Colors } from \"../constants/colors\";\nimport { QuizType } from \"../models/Question\";\nimport { Link } from \"react-router-dom\";\nimport { LoginButton, RegisterButton } from \"./UI/Buttons\";\nimport { AuthContext } from \"../contexts/auth/Auth\";\nimport { QuizzesContext } from \"../contexts/quizzes/Quizzes\";\nexport const NavbarContainer = styled.div`\n  max-width: 100vw;\n  display: flex;\n  height: 70px;\n  -webkit-box-shadow: 0px 0px 3px -1px rgba(87, 84, 87, 1);\n  -moz-box-shadow: 0px 0px 3px -1px rgba(87, 84, 87, 1);\n  box-shadow: 0px 0px 3px -1px rgba(87, 84, 87, 1);\n  padding: 0 2.5rem 0 1.5rem;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst MenuItems = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 80%;\n  font-family: \"Fredoka One\", cursive;\n  cursor: pointer;\n  font-size: 0.9rem;\n`;\nconst MenuItemsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex: ${props => props.flex};\n`;\nconst MenuItem = styled.li`\n  color: ${props => props.selectedNow === props.value ? Colors.BLACK : Colors.LIGHTER_GREY};\n  /* border-bottom: ${props => props.selectedNow === props.value ? \"4px solid #ffcf10\" : \"4px solid white\"}; */\n\n  padding: 0 1.5rem 4px 1.5rem;\n  margin: 0 1rem;\n\n  /* :hover {\n    border-bottom: ${props => props.selectedNow === props.value ? \"4px solid #ffcf10\" : \"4px solid #b9b5b5\"};\n  } */\n\n  ::after {\n        content: \"\";\n    display: block;\n    margin: 0px auto;\n    width: 65%;\n    padding-top: 0.1875rem;\n    border-bottom: 3px solid black;\n  }\n`;\nconst BackButton = styled(LoginButton)`\n  width: 160px;\n`;\n\nconst AuthButtons = () => {\n  return /*#__PURE__*/React.createElement(MenuItemsContainer, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoginButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RegisterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nexport const Navbar = () => {\n  const {\n    quizType,\n    configQuiz,\n    reset\n  } = useContext(QuizzesContext);\n  const {\n    currentUser,\n    isInPrivateSection\n  } = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(NavbarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), !isInPrivateSection && /*#__PURE__*/React.createElement(MenuItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItemsContainer, {\n    flex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: QuizType.TRIVIA,\n    selectedNow: quizType,\n    onClick: () => configQuiz(\"quizType\", QuizType.TRIVIA),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"TRIVIA QUIZ\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: QuizType.PROGRAMMING,\n    selectedNow: quizType,\n    onClick: () => configQuiz(\"quizType\", QuizType.PROGRAMMING),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"PROGRAMMING QUIZ\"))), !isInPrivateSection && !currentUser ? /*#__PURE__*/React.createElement(AuthButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }) : isInPrivateSection ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Back to quizzes\")) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/myDashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"My dashboard\")));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar.tsx"],"names":["React","useContext","styled","Logo","Colors","QuizType","Link","LoginButton","RegisterButton","AuthContext","QuizzesContext","NavbarContainer","div","MenuItems","ul","MenuItemsContainer","props","flex","MenuItem","li","selectedNow","value","BLACK","LIGHTER_GREY","BackButton","AuthButtons","Navbar","quizType","configQuiz","reset","currentUser","isInPrivateSection","TRIVIA","PROGRAMMING"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Logo } from \"./Logo\";\nimport { Colors } from \"../constants/colors\";\nimport { QuizType } from \"../models/Question\";\nimport { Link } from \"react-router-dom\";\nimport { LoginButton, RegisterButton } from \"./UI/Buttons\";\nimport { AuthContext } from \"../contexts/auth/Auth\";\nimport { QuizzesContext } from \"../contexts/quizzes/Quizzes\";\n\nexport const NavbarContainer = styled.div`\n  max-width: 100vw;\n  display: flex;\n  height: 70px;\n  -webkit-box-shadow: 0px 0px 3px -1px rgba(87, 84, 87, 1);\n  -moz-box-shadow: 0px 0px 3px -1px rgba(87, 84, 87, 1);\n  box-shadow: 0px 0px 3px -1px rgba(87, 84, 87, 1);\n  padding: 0 2.5rem 0 1.5rem;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst MenuItems = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 80%;\n  font-family: \"Fredoka One\", cursive;\n  cursor: pointer;\n  font-size: 0.9rem;\n`;\n\nconst MenuItemsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex: ${(props: { flex: number }) => props.flex};\n`;\n\nconst MenuItem = styled.li`\n  color: ${(props: { value: QuizType; selectedNow: QuizType }) =>\n    props.selectedNow === props.value ? Colors.BLACK : Colors.LIGHTER_GREY};\n  /* border-bottom: ${(props: { value: QuizType; selectedNow: QuizType }) =>\n    props.selectedNow === props.value\n      ? \"4px solid #ffcf10\"\n      : \"4px solid white\"}; */\n\n  padding: 0 1.5rem 4px 1.5rem;\n  margin: 0 1rem;\n\n  /* :hover {\n    border-bottom: ${(props: { value: QuizType; selectedNow: QuizType }) =>\n      props.selectedNow === props.value\n        ? \"4px solid #ffcf10\"\n        : \"4px solid #b9b5b5\"};\n  } */\n\n  ::after {\n        content: \"\";\n    display: block;\n    margin: 0px auto;\n    width: 65%;\n    padding-top: 0.1875rem;\n    border-bottom: 3px solid black;\n  }\n`;\n\nconst BackButton = styled(LoginButton)`\n  width: 160px;\n`;\n\nconst AuthButtons: React.FC = () => {\n  return (\n    <MenuItemsContainer flex={1}>\n      <Link to=\"/login\">\n        <LoginButton>Login</LoginButton>\n      </Link>\n      <Link to=\"/register\">\n        <RegisterButton>Register</RegisterButton>\n      </Link>\n    </MenuItemsContainer>\n  );\n};\n\nexport const Navbar: React.FC = () => {\n  const { quizType, configQuiz, reset } = useContext(QuizzesContext);\n  const { currentUser, isInPrivateSection } = useContext(AuthContext);\n\n  return (\n    <NavbarContainer>\n      <Link to=\"\">\n        <Logo reset={reset} />\n      </Link>\n      {!isInPrivateSection && (\n        <MenuItems>\n          <MenuItemsContainer flex={2}>\n            <MenuItem\n              value={QuizType.TRIVIA}\n              selectedNow={quizType}\n              onClick={() => configQuiz(\"quizType\", QuizType.TRIVIA)}\n            >\n              TRIVIA QUIZ\n            </MenuItem>\n            <MenuItem\n              value={QuizType.PROGRAMMING}\n              selectedNow={quizType}\n              onClick={() => configQuiz(\"quizType\", QuizType.PROGRAMMING)}\n            >\n              PROGRAMMING QUIZ\n            </MenuItem>\n          </MenuItemsContainer>\n        </MenuItems>\n      )}\n\n      {!isInPrivateSection && !currentUser ? (\n        <AuthButtons />\n      ) : isInPrivateSection ? (\n        <Link to=\"/\">\n          <BackButton>Back to quizzes</BackButton>\n        </Link>\n      ) : (\n        <Link to=\"/myDashboard\">\n          <BackButton>My dashboard</BackButton>\n        </Link>\n      )}\n    </NavbarContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}