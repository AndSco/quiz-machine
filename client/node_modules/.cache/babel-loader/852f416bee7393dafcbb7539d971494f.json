{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/ActualPublicQuiz.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { QuestionCard } from \"../../replies/QuestionCard\";\nimport { getSubjectBackgroundPic } from \"../../../utils/functions\";\nimport { Ending } from \"../../Ending\";\nconst Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: ${props => `url(\"${getSubjectBackgroundPic(props.subject)}\")`};\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const ActualQuiz = ({\n  subject,\n  allQuestions,\n  reset\n}) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const goToNextQuestion = () => setCurrentQuestionIndex(prev => prev + 1);\n\n  const givePoint = () => setScore(prevScore => prevScore + 1);\n\n  const thereAreStillQuestions = () => allQuestions.length >= currentQuestionIndex + 1;\n\n  return /*#__PURE__*/React.createElement(Background, {\n    subject: subject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, thereAreStillQuestions() ? /*#__PURE__*/React.createElement(QuestionCard, {\n    question: allQuestions[currentQuestionIndex],\n    next: goToNextQuestion,\n    numberOfQuestions: allQuestions.length,\n    currentNumberOfQuestion: currentQuestionIndex + 1,\n    givePoint: givePoint,\n    quizType: \"public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Ending, {\n    score: score,\n    totalQuestions: allQuestions.length,\n    playAgain: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/ActualPublicQuiz.tsx"],"names":["React","useState","styled","QuestionCard","getSubjectBackgroundPic","Ending","Background","div","props","subject","ActualQuiz","allQuestions","reset","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","goToNextQuestion","prev","givePoint","prevScore","thereAreStillQuestions","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,uBAAT,QAAwC,0BAAxC;AACA,SAASC,MAAT,QAAuB,cAAvB;AAGA,MAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAI;;;sBAGPC,KAAD,IACjB,QAAOJ,uBAAuB,CAACI,KAAK,CAACC,OAAP,CAAgB,IAAI;;;;;;CAJvD;AAkBA,OAAO,MAAMC,UAAqC,GAAG,CAAC;AACpDD,EAAAA,OADoD;AAEpDE,EAAAA,YAFoD;AAGpDC,EAAAA;AAHoD,CAAD,KAI/C;AACJ,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMgB,gBAAgB,GAAG,MAAMH,uBAAuB,CAACI,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAtD;;AACA,QAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAhC;;AACA,QAAMC,sBAAsB,GAAG,MAC7BV,YAAY,CAACW,MAAb,IAAuBT,oBAAoB,GAAG,CADhD;;AAGA,sBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEJ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,sBAAsB,kBACrB,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAEV,YAAY,CAACE,oBAAD,CADxB;AAEE,IAAA,IAAI,EAAEI,gBAFR;AAGE,IAAA,iBAAiB,EAAEN,YAAY,CAACW,MAHlC;AAIE,IAAA,uBAAuB,EAAET,oBAAoB,GAAG,CAJlD;AAKE,IAAA,SAAS,EAAEM,SALb;AAME,IAAA,QAAQ,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqB,gBAUrB,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,cAAc,EAAEJ,YAAY,CAACW,MAF/B;AAGE,IAAA,SAAS,EAAEV,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF;AAoBD,CAhCM","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Question, Subject } from \"../../../models/PublicQuizQuestion\";\nimport { QuestionCard } from \"../../replies/QuestionCard\";\nimport { getSubjectBackgroundPic } from \"../../../utils/functions\";\nimport { Ending } from \"../../Ending\";\nimport { QuizBackground } from \"../../UI/QuizBackground\";\n\nconst Background = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: ${(props: { subject: Subject }) =>\n    `url(\"${getSubjectBackgroundPic(props.subject)}\")`};\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface ActualQuizProps {\n  allQuestions: Question[];\n  subject: Subject;\n  reset: () => void;\n}\n\nexport const ActualQuiz: React.FC<ActualQuizProps> = ({\n  subject,\n  allQuestions,\n  reset\n}) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const goToNextQuestion = () => setCurrentQuestionIndex(prev => prev + 1);\n  const givePoint = () => setScore(prevScore => prevScore + 1);\n  const thereAreStillQuestions = () =>\n    allQuestions.length >= currentQuestionIndex + 1;\n\n  return (\n    <Background subject={subject}>\n      {thereAreStillQuestions() ? (\n        <QuestionCard\n          question={allQuestions[currentQuestionIndex]}\n          next={goToNextQuestion}\n          numberOfQuestions={allQuestions.length}\n          currentNumberOfQuestion={currentQuestionIndex + 1}\n          givePoint={givePoint}\n          quizType=\"public\"\n        />\n      ) : (\n        <Ending\n          score={score}\n          totalQuestions={allQuestions.length}\n          playAgain={reset}\n        />\n      )}\n    </Background>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}