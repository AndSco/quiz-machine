{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/PublicQuizzes.tsx\";\nimport React, { useContext, useEffect } from \"react\";\nimport { NumQuestionsStep } from \"./optionSteps/NumQuestionsStep\";\nimport { DifficultyStep } from \"./optionSteps/DifficultyStep\";\nimport { SubjectsStep } from \"./optionSteps/SubjectsStep\";\nimport { FinalSummaryStep } from \"./optionSteps/FinalSummaryStep\";\nimport { ActualPublicQuiz } from \"./ActualPublicQuiz\";\nimport { QuizzesContext } from \"../../../contexts/quizzes/Quizzes\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nimport { Wrapper } from \"../../UI/Wrapper\";\nexport const PublicQuizzes = () => {\n  const {\n    quizType,\n    currentSubject,\n    numberOfQuestions,\n    difficultyLevel,\n    quizConfigurationStep,\n    startedQuiz,\n    questions,\n    reset\n  } = useContext(QuizzesContext);\n  const {\n    goToPublicSection\n  } = useContext(AuthContext);\n  useEffect(() => {\n    goToPublicSection();\n  }, [goToPublicSection]);\n\n  const renderInstruction = () => {\n    switch (quizConfigurationStep) {\n      case 1:\n        return /*#__PURE__*/React.createElement(SubjectsStep, {\n          quizType: quizType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 16\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(NumQuestionsStep, {\n          currentAmount: numberOfQuestions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 16\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(DifficultyStep, {\n          currentLevel: difficultyLevel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 16\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(FinalSummaryStep, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }\n        }, \"SOMETHING WENT WRONG...\");\n    }\n  };\n\n  return !startedQuiz ? /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, renderInstruction()) : /*#__PURE__*/React.createElement(ActualPublicQuiz, {\n    subject: currentSubject,\n    allQuestions: questions,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/PublicQuizzes.tsx"],"names":["React","useContext","useEffect","NumQuestionsStep","DifficultyStep","SubjectsStep","FinalSummaryStep","ActualPublicQuiz","QuizzesContext","AuthContext","Wrapper","PublicQuizzes","quizType","currentSubject","numberOfQuestions","difficultyLevel","quizConfigurationStep","startedQuiz","questions","reset","goToPublicSection","renderInstruction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAC3C,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,qBALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA;AARI,MASFlB,UAAU,CAACO,cAAD,CATd;AAWA,QAAM;AAAEY,IAAAA;AAAF,MAAwBnB,UAAU,CAACQ,WAAD,CAAxC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,YAAQL,qBAAR;AACE,WAAK,CAAL;AACE,4BAAO,oBAAC,YAAD;AAAc,UAAA,QAAQ,EAAEJ,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEF,WAAK,CAAL;AACE,4BAAO,oBAAC,gBAAD;AAAkB,UAAA,aAAa,EAAEE,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEF,WAAK,CAAL;AACE,4BAAO,oBAAC,cAAD;AAAgB,UAAA,YAAY,EAAEC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEF,WAAK,CAAL;AACE,4BAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEF;AACE,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AAdJ;AAgBD,GAjBD;;AAmBA,SAAO,CAACE,WAAD,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUI,iBAAiB,EAA3B,CADK,gBAGL,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAER,cADX;AAEE,IAAA,YAAY,EAAEK,SAFhB;AAGE,IAAA,KAAK,EAAEC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AASD,CA9CM","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Subject } from \"../../../models/PublicQuizQuestion\";\nimport { NumQuestionsStep } from \"./optionSteps/NumQuestionsStep\";\nimport { DifficultyStep } from \"./optionSteps/DifficultyStep\";\nimport { SubjectsStep } from \"./optionSteps/SubjectsStep\";\nimport { FinalSummaryStep } from \"./optionSteps/FinalSummaryStep\";\nimport { ActualPublicQuiz } from \"./ActualPublicQuiz\";\nimport { QuizzesContext } from \"../../../contexts/quizzes/Quizzes\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nimport { LoadingContext } from \"../../../contexts/loading/Loading\";\nimport { Wrapper } from \"../../UI/Wrapper\";\n\nexport const PublicQuizzes: React.FC = () => {\n  const {\n    quizType,\n    currentSubject,\n    numberOfQuestions,\n    difficultyLevel,\n    quizConfigurationStep,\n    startedQuiz,\n    questions,\n    reset\n  } = useContext(QuizzesContext);\n\n  const { goToPublicSection } = useContext(AuthContext);\n\n  useEffect(() => {\n    goToPublicSection();\n  }, [goToPublicSection]);\n\n  const renderInstruction = () => {\n    switch (quizConfigurationStep) {\n      case 1:\n        return <SubjectsStep quizType={quizType} />;\n\n      case 2:\n        return <NumQuestionsStep currentAmount={numberOfQuestions} />;\n\n      case 3:\n        return <DifficultyStep currentLevel={difficultyLevel} />;\n\n      case 4:\n        return <FinalSummaryStep />;\n\n      default:\n        return <h1>SOMETHING WENT WRONG...</h1>;\n    }\n  };\n\n  return !startedQuiz ? (\n    <Wrapper>{renderInstruction()}</Wrapper>\n  ) : (\n    <ActualPublicQuiz\n      subject={currentSubject as Subject}\n      allQuestions={questions}\n      reset={reset}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}