{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/Navbar.tsx\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Logo } from \"./Logo\";\nimport { QuizType } from \"../../models/PublicQuizQuestion\";\nimport { LoginButton, RegisterButton, LogoutButton } from \"../UI/Buttons\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport { NavbarContainer, MenuItemsContainer, MenuItems, NavbarMenuItem, BackButton } from \"./NavbarComponents\";\nconst AllLinkWrapper = styled.div`\n  display: flex;\n  justify-content: flexend;\n  align-items: center;\n`;\n\nconst AuthButtons = () => {\n  return /*#__PURE__*/React.createElement(MenuItemsContainer, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoginButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RegisterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nexport const Navbar = () => {\n  const {\n    quizType,\n    configQuiz,\n    reset\n  } = useContext(QuizzesContext);\n  const {\n    currentUser,\n    isInPrivateSection\n  } = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(NavbarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AllLinkWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, !isInPrivateSection && /*#__PURE__*/React.createElement(MenuItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItemsContainer, {\n    flex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavbarMenuItem, {\n    value: QuizType.TRIVIA,\n    selectedNow: quizType,\n    onClick: () => configQuiz(\"quizType\", QuizType.TRIVIA),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"TRIVIA QUIZ\"), /*#__PURE__*/React.createElement(NavbarMenuItem, {\n    value: QuizType.PROGRAMMING,\n    selectedNow: quizType,\n    onClick: () => configQuiz(\"quizType\", QuizType.PROGRAMMING),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"PROGRAMMING QUIZ\"), /*#__PURE__*/React.createElement(NavbarMenuItem, {\n    value: QuizType.USERS_QUIZZES,\n    selectedNow: quizType,\n    onClick: () => configQuiz(\"quizType\", QuizType.USERS_QUIZZES),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"USERS' QUIZZES\"))), !isInPrivateSection && !currentUser ? /*#__PURE__*/React.createElement(AuthButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }) : isInPrivateSection ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Back to quiz section\")) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/myDashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Your dashboard\")), currentUser && /*#__PURE__*/React.createElement(LogoutButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Log out\")));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/Navbar.tsx"],"names":["React","useContext","styled","Link","Logo","QuizType","LoginButton","RegisterButton","LogoutButton","AuthContext","QuizzesContext","NavbarContainer","MenuItemsContainer","MenuItems","NavbarMenuItem","BackButton","AllLinkWrapper","div","AuthButtons","Navbar","quizType","configQuiz","reset","currentUser","isInPrivateSection","TRIVIA","PROGRAMMING","USERS_QUIZZES"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Logo } from \"./Logo\";\nimport { QuizType } from \"../../models/PublicQuizQuestion\";\n\nimport { LoginButton, RegisterButton, LogoutButton } from \"../UI/Buttons\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport {\n  NavbarContainer,\n  MenuItemsContainer,\n  MenuItems,\n  NavbarMenuItem,\n  BackButton\n} from \"./NavbarComponents\";\n\nconst AllLinkWrapper = styled.div`\n  display: flex;\n  justify-content: flexend;\n  align-items: center;\n`;\n\nconst AuthButtons: React.FC = () => {\n  return (\n    <MenuItemsContainer flex={1}>\n      <Link to=\"/login\">\n        <LoginButton>Login</LoginButton>\n      </Link>\n      <Link to=\"/register\">\n        <RegisterButton>Register</RegisterButton>\n      </Link>\n    </MenuItemsContainer>\n  );\n};\n\nexport const Navbar: React.FC = () => {\n  const { quizType, configQuiz, reset } = useContext(QuizzesContext);\n  const { currentUser, isInPrivateSection } = useContext(AuthContext);\n\n  return (\n    <NavbarContainer>\n      <Link to=\"\">\n        <Logo reset={reset} />\n      </Link>\n\n      <AllLinkWrapper>\n        {!isInPrivateSection && (\n          <MenuItems>\n            <MenuItemsContainer flex={2}>\n              <NavbarMenuItem\n                value={QuizType.TRIVIA}\n                selectedNow={quizType}\n                onClick={() => configQuiz(\"quizType\", QuizType.TRIVIA)}\n              >\n                TRIVIA QUIZ\n              </NavbarMenuItem>\n\n              <NavbarMenuItem\n                value={QuizType.PROGRAMMING}\n                selectedNow={quizType}\n                onClick={() => configQuiz(\"quizType\", QuizType.PROGRAMMING)}\n              >\n                PROGRAMMING QUIZ\n              </NavbarMenuItem>\n\n              <NavbarMenuItem\n                value={QuizType.USERS_QUIZZES}\n                selectedNow={quizType}\n                onClick={() => configQuiz(\"quizType\", QuizType.USERS_QUIZZES)}\n              >\n                USERS' QUIZZES\n              </NavbarMenuItem>\n            </MenuItemsContainer>\n          </MenuItems>\n        )}\n\n        {!isInPrivateSection && !currentUser ? (\n          <AuthButtons />\n        ) : isInPrivateSection ? (\n          <Link to=\"/\">\n            <BackButton>Back to quiz section</BackButton>\n          </Link>\n        ) : (\n          <Link to=\"/myDashboard\">\n            <BackButton>Your dashboard</BackButton>\n          </Link>\n        )}\n\n        {currentUser && <LogoutButton>Log out</LogoutButton>}\n      </AllLinkWrapper>\n    </NavbarContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}