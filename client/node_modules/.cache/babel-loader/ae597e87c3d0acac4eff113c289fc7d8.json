{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuestionSubForm.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuizQuestion } from \"../../../models/PrivateQuiz\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../../UI/Form\";\nimport { StyledInput, Container as InputContainer, StyledLabel } from \"../../UI/Input\";\nimport { SmallButton } from \"../../UI/Buttons\";\nimport { Modal } from \"../../UI/Modal\";\nimport { shuffleArray } from \"../../../utils/functions\";\nimport { Colors } from \"../../../constants/colors\";\nimport { Icon } from \"../../UI/Icon\";\nconst ComplexInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  margin-top: 1rem;\n`;\nconst StyledUploadedReplies = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem;\n  text-align: left;\n`;\nconst PinkSubmitButton = styled(SubmitButton)`\n  background-color: ${Colors.STEEL_PINK};\n`;\nconst StyledAnswer = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 0 1rem;\n  border-radius: 40px;\n  font-size: 0.8rem;\n  text-align: left;\n  margin: 0.6rem 0;\n`;\n\nconst Answer = ({\n  label,\n  value,\n  isRight\n}) => {\n  return /*#__PURE__*/React.createElement(StyledAnswer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: isRight ? \"check-circle\" : \"times-circle\",\n    color: isRight ? Colors.GREEN : Colors.RED,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: Colors.LIGHTEST_GREY,\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, label), value));\n};\n\nconst QuestionInput = ({\n  label,\n  handleChangeFunction,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(StyledInput, {\n    type: \"text\",\n    onChange: handleChangeFunction,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst UploadedReplies = ({\n  replies\n}) => {\n  return /*#__PURE__*/React.createElement(StyledUploadedReplies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, replies.map((reply, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Answer, {\n    label: \"A: \",\n    isRight: false,\n    value: reply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport const QuestionSubForm = ({\n  saveQuestionInState,\n  closeItself\n}) => {\n  const [question, setQuestion] = useState(\"\");\n  const [hasEnteredQuestion, setHasEnteredQuestion] = useState(false);\n  const [hasEnteredRightReply, setHasEnteredRightReply] = useState(false);\n  const [currentReply, setCurrentReply] = useState(\"\");\n  const [allReplies, setAllReplies] = useState([]);\n  const [rightReply, setRightReply] = useState(\"\");\n\n  const handleSubmit = () => {\n    const wrongAndRightReplies = shuffleArray([...allReplies, rightReply]);\n    const questionToSave = new PrivateQuizQuestion(question, wrongAndRightReplies, rightReply);\n    console.log(\"Now saving\", questionToSave);\n    saveQuestionInState(questionToSave);\n    closeItself();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    handleClose: closeItself,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Add a question to your quiz\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, hasEnteredQuestion ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Q: \", question) : /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    label: \"Question\",\n    value: question,\n    handleChangeFunction: e => setQuestion(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => setHasEnteredQuestion(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Load\")), !hasEnteredRightReply && hasEnteredQuestion && /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    value: rightReply,\n    label: \"Add the right reply\",\n    handleChangeFunction: e => setRightReply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => {\n      setHasEnteredRightReply(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Load\")), hasEnteredRightReply && /*#__PURE__*/React.createElement(Answer, {\n    label: \"Correct answer: \",\n    value: rightReply,\n    isRight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), allReplies.length > 0 && /*#__PURE__*/React.createElement(UploadedReplies, {\n    replies: allReplies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }), hasEnteredQuestion && hasEnteredRightReply && /*#__PURE__*/React.createElement(ComplexInputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInput, {\n    value: currentReply,\n    label: \"Add a (wrong) answer\",\n    handleChangeFunction: e => setCurrentReply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SmallButton, {\n    onClick: () => {\n      setAllReplies(prevReplies => [...prevReplies, currentReply]);\n      setCurrentReply(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(PinkSubmitButton, {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"SAVE QUESTION\"))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuestionSubForm.tsx"],"names":["React","useState","styled","PrivateQuizQuestion","FormContainer","FormTitle","SubmitButton","StyledInput","Container","InputContainer","StyledLabel","SmallButton","Modal","shuffleArray","Colors","Icon","ComplexInputContainer","div","StyledUploadedReplies","ul","PinkSubmitButton","STEEL_PINK","StyledAnswer","Answer","label","value","isRight","GREEN","RED","color","LIGHTEST_GREY","marginRight","QuestionInput","handleChangeFunction","UploadedReplies","replies","map","reply","index","QuestionSubForm","saveQuestionInState","closeItself","question","setQuestion","hasEnteredQuestion","setHasEnteredQuestion","hasEnteredRightReply","setHasEnteredRightReply","currentReply","setCurrentReply","allReplies","setAllReplies","rightReply","setRightReply","handleSubmit","wrongAndRightReplies","questionToSave","console","log","e","preventDefault","target","length","prevReplies"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuizQuestion } from \"../../../models/PrivateQuiz\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../../UI/Form\";\nimport {\n  StyledInput,\n  Container as InputContainer,\n  StyledLabel\n} from \"../../UI/Input\";\nimport { SmallButton } from \"../../UI/Buttons\";\nimport { Modal } from \"../../UI/Modal\";\nimport { shuffleArray } from \"../../../utils/functions\";\nimport { Colors } from \"../../../constants/colors\";\nimport { Icon } from \"../../UI/Icon\";\n\nconst ComplexInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  margin-top: 1rem;\n`;\n\nconst StyledUploadedReplies = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem;\n  text-align: left;\n`;\n\nconst PinkSubmitButton = styled(SubmitButton)`\n  background-color: ${Colors.STEEL_PINK};\n`;\n\nconst StyledAnswer = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 0 1rem;\n  border-radius: 40px;\n  font-size: 0.8rem;\n  text-align: left;\n  margin: 0.6rem 0;\n`;\n\nconst Answer: React.FC<{ label: string; value: string; isRight: boolean }> = ({\n  label,\n  value,\n  isRight\n}) => {\n  return (\n    <StyledAnswer>\n      <Icon\n        icon={isRight ? \"check-circle\" : \"times-circle\"}\n        color={isRight ? Colors.GREEN : Colors.RED}\n      />{\" \"}\n      <h5>\n        <span style={{ color: Colors.LIGHTEST_GREY, marginRight: 5 }}>\n          {label}\n        </span>\n        {value}\n      </h5>\n    </StyledAnswer>\n  );\n};\n\nconst QuestionInput: React.FC<{\n  label: string;\n  handleChangeFunction: any;\n  value: string;\n}> = ({ label, handleChangeFunction, value }) => {\n  return (\n    <InputContainer>\n      <StyledLabel>{label}</StyledLabel>\n      <StyledInput type=\"text\" onChange={handleChangeFunction} value={value} />\n    </InputContainer>\n  );\n};\n\nconst UploadedReplies: React.FC<{ replies: string[] }> = ({ replies }) => {\n  return (\n    <StyledUploadedReplies>\n      {replies.map((reply, index) => (\n        <li key={index}>\n          <Answer label=\"A: \" isRight={false} value={reply} />\n        </li>\n      ))}\n    </StyledUploadedReplies>\n  );\n};\n\ninterface Props {\n  saveQuestionInState: (question: PrivateQuizQuestion) => void;\n  closeItself: () => void;\n}\n\nexport const QuestionSubForm: React.FC<Props> = ({\n  saveQuestionInState,\n  closeItself\n}) => {\n  const [question, setQuestion] = useState(\"\");\n  const [hasEnteredQuestion, setHasEnteredQuestion] = useState(false);\n  const [hasEnteredRightReply, setHasEnteredRightReply] = useState(false);\n  const [currentReply, setCurrentReply] = useState(\"\");\n  const [allReplies, setAllReplies] = useState<string[]>([]);\n  const [rightReply, setRightReply] = useState(\"\");\n\n  const handleSubmit = () => {\n    const wrongAndRightReplies = shuffleArray<string>([\n      ...allReplies,\n      rightReply\n    ]);\n    const questionToSave = new PrivateQuizQuestion(\n      question,\n      wrongAndRightReplies,\n      rightReply\n    );\n    console.log(\"Now saving\", questionToSave);\n    saveQuestionInState(questionToSave);\n    closeItself();\n  };\n\n  return (\n    <Modal handleClose={closeItself}>\n      <FormContainer>\n        <FormTitle>Add a question to your quiz</FormTitle>\n        <form\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n          }}\n        >\n          {hasEnteredQuestion ? (\n            <h3>Q: {question}</h3>\n          ) : (\n            <ComplexInputContainer>\n              <QuestionInput\n                label=\"Question\"\n                value={question}\n                handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                  setQuestion(e.target.value)\n                }\n              />\n              <SmallButton onClick={() => setHasEnteredQuestion(true)}>\n                Load\n              </SmallButton>\n            </ComplexInputContainer>\n          )}\n\n          {!hasEnteredRightReply && hasEnteredQuestion && (\n            <ComplexInputContainer>\n              <QuestionInput\n                value={rightReply}\n                label=\"Add the right reply\"\n                handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                  setRightReply(e.target.value)\n                }\n              />\n\n              <SmallButton\n                onClick={() => {\n                  setHasEnteredRightReply(true);\n                }}\n              >\n                Load\n              </SmallButton>\n            </ComplexInputContainer>\n          )}\n\n          {hasEnteredRightReply && (\n            <Answer\n              label=\"Correct answer: \"\n              value={rightReply}\n              isRight={true}\n            />\n          )}\n          {allReplies.length > 0 && <UploadedReplies replies={allReplies} />}\n\n          {hasEnteredQuestion && hasEnteredRightReply && (\n            <ComplexInputContainer>\n              <QuestionInput\n                value={currentReply}\n                label=\"Add a (wrong) answer\"\n                handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n                  setCurrentReply(e.target.value)\n                }\n              />\n\n              <SmallButton\n                onClick={() => {\n                  setAllReplies(prevReplies => [...prevReplies, currentReply]);\n                  setCurrentReply(\"\");\n                }}\n              >\n                Add\n              </SmallButton>\n            </ComplexInputContainer>\n          )}\n\n          <PinkSubmitButton type=\"submit\" onClick={handleSubmit}>\n            SAVE QUESTION\n          </PinkSubmitButton>\n        </form>\n      </FormContainer>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}