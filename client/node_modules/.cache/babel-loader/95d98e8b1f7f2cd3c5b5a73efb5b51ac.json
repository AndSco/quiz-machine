{"ast":null,"code":"// LOGIN\nconst LoginReducer = (state, action) => {\n  const newState = { ...state,\n    [action.type]: action.payload\n  };\n  return newState;\n};\n\nconst LoginStartingValues = {\n  username: \"\",\n  password: \"\"\n}; // REGISTRATION\n\nconst RegisterReducer = (state, action) => {\n  const newState = { ...state,\n    [action.type]: action.payload\n  };\n  return newState;\n};\n\nconst RegisterStartingValues = {\n  username: \"\",\n  password: \"\",\n  passwordConfirmation: \"\"\n}; // ALL REDUCERS EXPORT\n\nexport const AuthReducers = {\n  login: {\n    reducer: LoginReducer,\n    startingValues: LoginStartingValues\n  },\n  register: {\n    reducer: RegisterReducer,\n    startingValues: RegisterStartingValues\n  }\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/reducers/AuthReducers.ts"],"names":["LoginReducer","state","action","newState","type","payload","LoginStartingValues","username","password","RegisterReducer","RegisterStartingValues","passwordConfirmation","AuthReducers","login","reducer","startingValues","register"],"mappings":"AASA;AAMA,MAAMA,YAAwD,GAAG,CAC/DC,KAD+D,EAE/DC,MAF+D,KAG3C;AACpB,QAAMC,QAAQ,GAAG,EACf,GAAGF,KADY;AAEf,KAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFP,GAAjB;AAIA,SAAOF,QAAP;AACD,CATD;;AAWA,MAAMG,mBAAoC,GAAG;AAC3CC,EAAAA,QAAQ,EAAE,EADiC;AAE3CC,EAAAA,QAAQ,EAAE;AAFiC,CAA7C,C,CAKA;;AAOA,MAAMC,eAAkE,GAAG,CACzER,KADyE,EAEzEC,MAFyE,KAG9C;AAC3B,QAAMC,QAAQ,GAAG,EACf,GAAGF,KADY;AAEf,KAACC,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFP,GAAjB;AAIA,SAAOF,QAAP;AACD,CATD;;AAWA,MAAMO,sBAA8C,GAAG;AACrDH,EAAAA,QAAQ,EAAE,EAD2C;AAErDC,EAAAA,QAAQ,EAAE,EAF2C;AAGrDG,EAAAA,oBAAoB,EAAE;AAH+B,CAAvD,C,CAMA;;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEd,YADJ;AAELe,IAAAA,cAAc,EAAET;AAFX,GADmB;AAK1BU,EAAAA,QAAQ,EAAE;AACRF,IAAAA,OAAO,EAAEL,eADD;AAERM,IAAAA,cAAc,EAAEL;AAFR;AALgB,CAArB","sourcesContent":["import React from \"react\";\n\nexport type InputName = \"login\" | \"password\" | \"confirm password\";\n\nexport interface AuthAction {\n  type: InputName;\n  payload?: string;\n}\n\n// LOGIN\nexport interface LoginFormInputs {\n  username: string;\n  password: string;\n}\n\nconst LoginReducer: React.Reducer<LoginFormInputs, AuthAction> = (\n  state: LoginFormInputs,\n  action: AuthAction\n): LoginFormInputs => {\n  const newState = {\n    ...state,\n    [action.type]: action.payload\n  };\n  return newState;\n};\n\nconst LoginStartingValues: LoginFormInputs = {\n  username: \"\",\n  password: \"\"\n};\n\n// REGISTRATION\nexport interface RegistrationFormInputs {\n  username: string;\n  password: string;\n  \"confirm password\": string;\n}\n\nconst RegisterReducer: React.Reducer<RegistrationFormInputs, AuthAction> = (\n  state: RegistrationFormInputs,\n  action: AuthAction\n): RegistrationFormInputs => {\n  const newState = {\n    ...state,\n    [action.type]: action.payload\n  };\n  return newState;\n};\n\nconst RegisterStartingValues: RegistrationFormInputs = {\n  username: \"\",\n  password: \"\",\n  passwordConfirmation: \"\"\n};\n\n// ALL REDUCERS EXPORT\nexport const AuthReducers = {\n  login: {\n    reducer: LoginReducer,\n    startingValues: LoginStartingValues\n  },\n  register: {\n    reducer: RegisterReducer,\n    startingValues: RegisterStartingValues\n  }\n};\n"]},"metadata":{},"sourceType":"module"}