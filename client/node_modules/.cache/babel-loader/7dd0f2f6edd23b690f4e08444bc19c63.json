{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/optionSteps/SubjectsStep.tsx\";\nimport React from \"react\";\nimport { BigTitle, SubTitle } from \"../../../UI/Titles\";\nimport { QuizType } from \"../../../../models/PublicQuizQuestion\";\nimport { shortenLengthySubjects } from \"../../../../utils/functions\";\nimport { ProgrammingCategories, TriviaCategories } from \"../../../../constants/questionCategories\";\nimport { GridWrapper } from \"../../../UI/GridWrapper\";\nimport { FingerDown } from \"../../../UI/FingerDown\";\nimport { UsersCustomQuizzes } from \"../UsersCustomQuizzes\";\nimport { Thumbnail } from \"../../../UI/Thumbnail\";\nexport const SubjectsStep = ({\n  quizType\n}) => {\n  if (quizType === QuizType.USERS_QUIZZES) return /*#__PURE__*/React.createElement(UsersCustomQuizzes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 51\n    }\n  });\n  const availableSubjects = quizType === QuizType.TRIVIA ? TriviaCategories : ProgrammingCategories;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BigTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, quizType.toUpperCase(), \" QUIZ\"), /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Choose a topic \", /*#__PURE__*/React.createElement(FingerDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(GridWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, availableSubjects.sort((a, b) => {\n    if (a < b) {\n      return -1;\n    }\n\n    if (a > b) {\n      return 1;\n    }\n\n    return 0;\n  }).map(subject => /*#__PURE__*/React.createElement(Thumbnail, {\n    purpose: \"apiQuizzes\",\n    key: subject,\n    title: shortenLengthySubjects(subject),\n    value: subject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Thumbnail, {\n    purpose: \"apiQuizzes\",\n    title: \"Random\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/optionSteps/SubjectsStep.tsx"],"names":["React","BigTitle","SubTitle","QuizType","shortenLengthySubjects","ProgrammingCategories","TriviaCategories","GridWrapper","FingerDown","UsersCustomQuizzes","Thumbnail","SubjectsStep","quizType","USERS_QUIZZES","availableSubjects","TRIVIA","toUpperCase","sort","a","b","map","subject"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SAASC,QAAT,EAA0BC,QAA1B,QAA0C,oBAA1C;AACA,SAASC,QAAT,QAAkC,uCAAlC;AACA,SACEC,sBADF,QAGO,6BAHP;AAIA,SACEC,qBADF,EAEEC,gBAFF,QAGO,0CAHP;AAKA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAMA,OAAO,MAAMC,YAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7D,MAAIA,QAAQ,KAAKT,QAAQ,CAACU,aAA1B,EAAyC,oBAAO,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEzC,QAAMC,iBAAiB,GACrBF,QAAQ,KAAKT,QAAQ,CAACY,MAAtB,GAA+BT,gBAA/B,GAAkDD,qBADpD;AAEA,sBACE,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWO,QAAQ,CAACI,WAAT,EAAX,UADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACiB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,CAFF,eAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,iBAAiB,CACfG,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,QAAID,CAAC,GAAIC,CAAT,EAAa;AACX,aAAO,CAAC,CAAR;AACD;;AACD,QAAID,CAAC,GAAIC,CAAT,EAAa;AACX,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GATF,EAUEC,GAVF,CAUMC,OAAO,iBACV,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,YADV;AAEE,IAAA,GAAG,EAAEA,OAFP;AAGE,IAAA,KAAK,EAAEjB,sBAAsB,CAACiB,OAAD,CAH/B;AAIE,IAAA,KAAK,EAAEA,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CADH,eAmBE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,YAAnB;AAAgC,IAAA,KAAK,EAAC,QAAtC;AAA+C,IAAA,KAAK,EAAC,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CALF,CADF;AA6BD,CAlCM","sourcesContent":["import React, { useContext } from \"react\";\nimport { BigTitle, Title, SubTitle } from \"../../../UI/Titles\";\nimport { QuizType, Subject } from \"../../../../models/PublicQuizQuestion\";\nimport {\n  shortenLengthySubjects,\n  getSubjectBackgroundPic\n} from \"../../../../utils/functions\";\nimport {\n  ProgrammingCategories,\n  TriviaCategories\n} from \"../../../../constants/questionCategories\";\nimport { QuizzesContext } from \"../../../../contexts/quizzes/Quizzes\";\nimport { GridWrapper } from \"../../../UI/GridWrapper\";\nimport { GridCard } from \"../../../UI/GridCard\";\nimport { FingerDown } from \"../../../UI/FingerDown\";\nimport { UsersCustomQuizzes } from \"../UsersCustomQuizzes\";\nimport { Thumbnail } from \"../../../UI/Thumbnail\";\n\ninterface Props {\n  quizType: QuizType;\n}\n\nexport const SubjectsStep: React.FC<Props> = ({ quizType }) => {\n  if (quizType === QuizType.USERS_QUIZZES) return <UsersCustomQuizzes />;\n\n  const availableSubjects =\n    quizType === QuizType.TRIVIA ? TriviaCategories : ProgrammingCategories;\n  return (\n    <>\n      <BigTitle>{quizType.toUpperCase()} QUIZ</BigTitle>\n      <SubTitle>\n        Choose a topic <FingerDown />\n      </SubTitle>\n      <GridWrapper>\n        {availableSubjects\n          .sort((a, b) => {\n            if (a! < b!) {\n              return -1;\n            }\n            if (a! > b!) {\n              return 1;\n            }\n            return 0;\n          })\n          .map(subject => (\n            <Thumbnail\n              purpose=\"apiQuizzes\"\n              key={subject}\n              title={shortenLengthySubjects(subject as string)!}\n              value={subject as Subject}\n            />\n          ))}\n        <Thumbnail purpose=\"apiQuizzes\" title=\"Random\" value=\"\" />\n      </GridWrapper>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}