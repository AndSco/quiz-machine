{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/Navbar.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Logo } from \"./Logo\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport { NavbarContainer } from \"./NavbarComponents\";\nimport { NavbarLinks } from \"./NavbarLinks\";\nimport { BurgerIcon } from \"./BurgerIcon\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport \"../../utils/hooks/useDeviceDetect\";\nexport const Navbar = () => {\n  const {\n    reset\n  } = useContext(QuizzesContext);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const openMenu = () => setIsMobileMenuOpen(true);\n\n  const closeMenu = () => setIsMobileMenuOpen(false);\n\n  return /*#__PURE__*/React.createElement(NavbarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BurgerIcon, {\n    isMenuOpen: isMobileMenuOpen,\n    openMenu: openMenu,\n    closeMenu: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), isMobileMenuOpen && /*#__PURE__*/React.createElement(MobileMenu, {\n    isVisible: isMobileMenuOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(NavbarLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/Navbar.tsx"],"names":["React","useContext","useState","Link","Logo","QuizzesContext","NavbarContainer","NavbarLinks","BurgerIcon","MobileMenu","Navbar","reset","isMobileMenuOpen","setIsMobileMenuOpen","openMenu","closeMenu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAe,mCAAf;AAEA,OAAO,MAAMC,MAAgB,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAYV,UAAU,CAACI,cAAD,CAA5B;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,KAAD,CAAxD;;AACA,QAAMY,QAAQ,GAAG,MAAMD,mBAAmB,CAAC,IAAD,CAA1C;;AACA,QAAME,SAAS,GAAG,MAAMF,mBAAmB,CAAC,KAAD,CAA3C;;AAEA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,UAAD;AACE,IAAA,UAAU,EAAEC,gBADd;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,SAAS,EAAEC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASGH,gBAAgB,iBAAI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEA,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATvB,eAUE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CApBM","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Logo } from \"./Logo\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport { NavbarContainer } from \"./NavbarComponents\";\nimport { NavbarLinks } from \"./NavbarLinks\";\nimport { BurgerIcon } from \"./BurgerIcon\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport {} from \"../../utils/hooks/useDeviceDetect\";\n\nexport const Navbar: React.FC = () => {\n  const { reset } = useContext(QuizzesContext);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const openMenu = () => setIsMobileMenuOpen(true);\n  const closeMenu = () => setIsMobileMenuOpen(false);\n\n  return (\n    <NavbarContainer>\n      <Link to=\"\">\n        <Logo reset={reset} />\n      </Link>\n      <BurgerIcon\n        isMenuOpen={isMobileMenuOpen}\n        openMenu={openMenu}\n        closeMenu={closeMenu}\n      />\n      {isMobileMenuOpen && <MobileMenu isVisible={isMobileMenuOpen} />}\n      <NavbarLinks />\n    </NavbarContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}