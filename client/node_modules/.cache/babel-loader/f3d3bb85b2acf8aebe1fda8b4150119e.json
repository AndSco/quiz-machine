{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuizOverview.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { BigTitle } from \"../../UI/Titles\";\nimport { GridWrapper } from \"../../UI/GridWrapper\";\nimport { MyQuizCard } from \"./MyQuizCard\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { Modal } from \"../../UI/Modal\";\nconst Wrapper = styled(GridWrapper)`\n  flex-wrap: nowrap;\n  flex-direction: column;\n`;\nexport const QuizOverview = ({\n  myQuizzes\n}) => {\n  const [isEditingQuiz, setIsEditingQuiz] = useState(false);\n  const [quizNowEditing, setQuizNowEditing] = useState(null);\n\n  const startEditingQuiz = quiz => {\n    setQuizNowEditing(quiz);\n    setIsEditingQuiz(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isEditingQuiz ? /*#__PURE__*/React.createElement(Modal, {\n    handleClose: () => setIsEditingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuizCreationOrEditForm, {\n    usage: \"editing\",\n    currentQuiz: quizNowEditing,\n    onFormClose: () => setIsEditingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"80%\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BigTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Your quizzes\"), /*#__PURE__*/React.createElement(BigTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Create a new quiz\")), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, myQuizzes.map((quiz, index) => /*#__PURE__*/React.createElement(MyQuizCard, {\n    quiz: quiz,\n    key: index,\n    editQuiz: startEditingQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuizOverview.tsx"],"names":["React","useState","styled","BigTitle","GridWrapper","MyQuizCard","QuizCreationOrEditForm","Modal","Wrapper","QuizOverview","myQuizzes","isEditingQuiz","setIsEditingQuiz","quizNowEditing","setQuizNowEditing","startEditingQuiz","quiz","display","width","justifyContent","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAMA,MAAMC,OAAO,GAAGN,MAAM,CAACE,WAAD,CAAc;;;CAApC;AAKA,OAAO,MAAMK,YAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC9D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAClD,IADkD,CAApD;;AAIA,QAAMc,gBAAgB,GAAIC,IAAD,IAAuB;AAC9CF,IAAAA,iBAAiB,CAACE,IAAD,CAAjB;AACAJ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAHD;;AAKA,sBACE,0CACGD,aAAa,gBACZ,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAEC,cAFf;AAGE,IAAA,WAAW,EAAE,MAAMD,gBAAgB,CAAC,KAAD,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,gBASZ,uDACE;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,KAAK,EAAE,KAFF;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,CADF,eAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,SAAS,CAACU,GAAV,CAAc,CAACJ,IAAD,EAAOK,KAAP,kBACb,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEL,IAAlB;AAAwB,IAAA,GAAG,EAAEK,KAA7B;AAAoC,IAAA,QAAQ,EAAEN,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAZF,CAVJ,CADF;AAgCD,CA3CM","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { BigTitle } from \"../../UI/Titles\";\nimport { GridWrapper } from \"../../UI/GridWrapper\";\nimport { MyQuizCard } from \"./MyQuizCard\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { Modal } from \"../../UI/Modal\";\n\ninterface Props {\n  myQuizzes: PrivateQuiz[];\n}\n\nconst Wrapper = styled(GridWrapper)`\n  flex-wrap: nowrap;\n  flex-direction: column;\n`;\n\nexport const QuizOverview: React.FC<Props> = ({ myQuizzes }) => {\n  const [isEditingQuiz, setIsEditingQuiz] = useState(false);\n  const [quizNowEditing, setQuizNowEditing] = useState<PrivateQuiz | null>(\n    null\n  );\n\n  const startEditingQuiz = (quiz: PrivateQuiz) => {\n    setQuizNowEditing(quiz);\n    setIsEditingQuiz(true);\n  };\n\n  return (\n    <>\n      {isEditingQuiz ? (\n        <Modal handleClose={() => setIsEditingQuiz(false)}>\n          <QuizCreationOrEditForm\n            usage=\"editing\"\n            currentQuiz={quizNowEditing as PrivateQuiz}\n            onFormClose={() => setIsEditingQuiz(false)}\n          />\n        </Modal>\n      ) : (\n        <>\n          <div\n            style={{\n              display: \"flex\",\n              width: \"80%\",\n              justifyContent: \"space-around\"\n            }}\n          >\n            <BigTitle>Your quizzes</BigTitle>\n            <BigTitle>Create a new quiz</BigTitle>\n          </div>\n\n          <Wrapper>\n            {myQuizzes.map((quiz, index) => (\n              <MyQuizCard quiz={quiz} key={index} editQuiz={startEditingQuiz} />\n            ))}\n          </Wrapper>\n        </>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}