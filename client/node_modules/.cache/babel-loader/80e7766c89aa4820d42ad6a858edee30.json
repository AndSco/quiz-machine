{"ast":null,"code":"import axios from \"axios\";\nimport { apiEndPoints } from \"../constants/apiEndpoints\";\n// Auth\nexport const loginUser = async inputValues => {\n  try {\n    const {\n      username,\n      password\n    } = inputValues;\n    const response = await axios.post(apiEndPoints.LOGIN, {\n      username,\n      password\n    });\n    console.log(\"RES\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const registerUser = async inputValues => {\n  try {\n    const {\n      username,\n      password\n    } = inputValues;\n    const response = await axios.post(apiEndPoints.REGISTER, {\n      username,\n      password\n    });\n    console.log(\"RES\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const logoutUser = async () => {\n  try {} catch (err) {\n    console.error(err);\n  }\n}; // Quizzes\n\nexport const createQuiz = async (quiz, userId) => {\n  try {\n    const response = await axios.post(apiEndPoints.QUIZ, {\n      quiz,\n      createdBy: userId\n    });\n    console.log(\"QUIZ CREATION RESPONSE\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const getSingleQuiz = async quizId => {\n  try {\n    const response = await axios.get(`${apiEndPoints.QUIZ}/${quizId}`);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const getCustomUsersQuizzes = async () => {\n  try {\n    const response = await axios.get(`${apiEndPoints.QUIZ}`);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteQuiz = async quizId => {\n  try {\n    const response = await axios.delete(`${apiEndPoints.QUIZ}/${quizId}`);\n    console.log(\"DELETED?\", response.data);\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editQuiz = async (quizId, updatedQuiz) => {\n  try {\n    const response = await axios.patch(`${apiEndPoints.QUIZ}/${quizId}`, {\n      updatedQuiz\n    });\n    console.log(\"EDITED?\", response.data);\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const getUserQuizzes = async userId => {\n  try {\n    const response = await axios.get(`${apiEndPoints.USER}/${userId}`);\n    const userQuizzes = response.data.payload;\n    console.log(\"USER QUIZZES\", userQuizzes);\n    return userQuizzes;\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/utils/dbFunctions.ts"],"names":["axios","apiEndPoints","loginUser","inputValues","username","password","response","post","LOGIN","console","log","data","err","error","registerUser","REGISTER","logoutUser","createQuiz","quiz","userId","QUIZ","createdBy","getSingleQuiz","quizId","get","getCustomUsersQuizzes","deleteQuiz","delete","editQuiz","updatedQuiz","patch","getUserQuizzes","USER","userQuizzes","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,SAASC,YAAT,QAA6B,2BAA7B;AAGA;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAP,IAAwC;AAC/D,MAAI;AACF,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBF,WAA/B;AACA,UAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,YAAY,CAACO,KAAxB,EAA+B;AACpDJ,MAAAA,QADoD;AAEpDC,MAAAA;AAFoD,KAA/B,CAAvB;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,QAAQ,CAACK,IAA5B;AACA,WAAOL,QAAQ,CAACK,IAAhB;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAZM;AAcP,OAAO,MAAME,YAAY,GAAG,MAAOX,WAAP,IAA+C;AACzE,MAAI;AACF,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBF,WAA/B;AACA,UAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,YAAY,CAACc,QAAxB,EAAkC;AACvDX,MAAAA,QADuD;AAEvDC,MAAAA;AAFuD,KAAlC,CAAvB;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,QAAQ,CAACK,IAA5B;AACA,WAAOL,QAAQ,CAACK,IAAhB;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAZM;AAcP,OAAO,MAAMI,UAAU,GAAG,YAAY;AACpC,MAAI,CACH,CADD,CACE,OAAOJ,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CALM,C,CAOP;;AACA,OAAO,MAAMK,UAAU,GAAG,OAAOC,IAAP,EAA0BC,MAA1B,KAA6C;AACrE,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,YAAY,CAACmB,IAAxB,EAA8B;AACnDF,MAAAA,IADmD;AAEnDG,MAAAA,SAAS,EAAEF;AAFwC,KAA9B,CAAvB;AAIAV,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCJ,QAAQ,CAACK,IAA/C;AACA,WAAOL,QAAQ,CAACK,IAAhB;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAXM;AAaP,OAAO,MAAMU,aAAa,GAAG,MAAOC,MAAP,IAA0B;AACrD,MAAI;AACF,UAAMjB,QAAQ,GAAG,MAAMN,KAAK,CAACwB,GAAN,CAAW,GAAEvB,YAAY,CAACmB,IAAK,IAAGG,MAAO,EAAzC,CAAvB;AACA,WAAOjB,QAAQ,CAACK,IAAhB;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAPM;AASP,OAAO,MAAMa,qBAAqB,GAAG,YAAY;AAC/C,MAAI;AACF,UAAMnB,QAAQ,GAAG,MAAMN,KAAK,CAACwB,GAAN,CAAW,GAAEvB,YAAY,CAACmB,IAAK,EAA/B,CAAvB;AACA,WAAOd,QAAQ,CAACK,IAAhB;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAPM;AASP,OAAO,MAAMc,UAAU,GAAG,MAAOH,MAAP,IAA0B;AAClD,MAAI;AACF,UAAMjB,QAAQ,GAAG,MAAMN,KAAK,CAAC2B,MAAN,CAAc,GAAE1B,YAAY,CAACmB,IAAK,IAAGG,MAAO,EAA5C,CAAvB;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAQ,CAACK,IAAjC;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAPM;AASP,OAAO,MAAMgB,QAAQ,GAAG,OAAOL,MAAP,EAAuBM,WAAvB,KAAoD;AAC1E,MAAI;AACF,UAAMvB,QAAQ,GAAG,MAAMN,KAAK,CAAC8B,KAAN,CAAa,GAAE7B,YAAY,CAACmB,IAAK,IAAGG,MAAO,EAA3C,EAA8C;AACnEM,MAAAA;AADmE,KAA9C,CAAvB;AAGApB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,QAAQ,CAACK,IAAhC;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CATM;AAWP,OAAO,MAAMmB,cAAc,GAAG,MAAOZ,MAAP,IAA0B;AACtD,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMN,KAAK,CAACwB,GAAN,CAAW,GAAEvB,YAAY,CAAC+B,IAAK,IAAGb,MAAO,EAAzC,CAAvB;AACA,UAAMc,WAAW,GAAG3B,QAAQ,CAACK,IAAT,CAAcuB,OAAlC;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BuB,WAA5B;AACA,WAAOA,WAAP;AACD,GALD,CAKE,OAAOrB,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CATM","sourcesContent":["import axios from \"axios\";\nimport {\n  LoginFormInputs,\n  RegistrationFormInputs\n} from \"../reducers/AuthReducers\";\nimport { apiEndPoints } from \"../constants/apiEndpoints\";\nimport { PrivateQuiz } from \"../models/PrivateQuiz\";\n\n// Auth\nexport const loginUser = async (inputValues: LoginFormInputs) => {\n  try {\n    const { username, password } = inputValues;\n    const response = await axios.post(apiEndPoints.LOGIN, {\n      username,\n      password\n    });\n    console.log(\"RES\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const registerUser = async (inputValues: RegistrationFormInputs) => {\n  try {\n    const { username, password } = inputValues;\n    const response = await axios.post(apiEndPoints.REGISTER, {\n      username,\n      password\n    });\n    console.log(\"RES\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const logoutUser = async () => {\n  try {\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Quizzes\nexport const createQuiz = async (quiz: PrivateQuiz, userId: string) => {\n  try {\n    const response = await axios.post(apiEndPoints.QUIZ, {\n      quiz,\n      createdBy: userId\n    });\n    console.log(\"QUIZ CREATION RESPONSE\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getSingleQuiz = async (quizId: string) => {\n  try {\n    const response = await axios.get(`${apiEndPoints.QUIZ}/${quizId}`);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getCustomUsersQuizzes = async () => {\n  try {\n    const response = await axios.get(`${apiEndPoints.QUIZ}`);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const deleteQuiz = async (quizId: string) => {\n  try {\n    const response = await axios.delete(`${apiEndPoints.QUIZ}/${quizId}`);\n    console.log(\"DELETED?\", response.data);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const editQuiz = async (quizId: string, updatedQuiz: PrivateQuiz) => {\n  try {\n    const response = await axios.patch(`${apiEndPoints.QUIZ}/${quizId}`, {\n      updatedQuiz\n    });\n    console.log(\"EDITED?\", response.data);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getUserQuizzes = async (userId: string) => {\n  try {\n    const response = await axios.get(`${apiEndPoints.USER}/${userId}`);\n    const userQuizzes = response.data.payload;\n    console.log(\"USER QUIZZES\", userQuizzes);\n    return userQuizzes;\n  } catch (err) {\n    console.error(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}