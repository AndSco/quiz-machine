{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/UI/Input.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../constants/colors\";\nexport const StyledInput = styled.input`\n  padding: 1rem;\n  background-color: white;\n  width: 300px;\n  box-sizing: border-box;\n  margin: 0.7rem 0 1.5rem 0;\n  border: 0;\n`;\nexport const StyledLabel = styled.label`\n  font-size: 0.7rem;\n  color: ${Colors.DARK_BLUE};\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nexport const Input = ({\n  inputName,\n  onChangeFunction,\n  resetError,\n  inputType,\n  value,\n  isRequired = false\n}) => {\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: inputName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, label.toUpperCase()), /*#__PURE__*/React.createElement(StyledInput, {\n    type: inputType,\n    value: value,\n    required: isRequired,\n    onClick: resetError,\n    onChange: e => onChangeFunction(e.target.value, inputName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}; // import React from \"react\";\n// import styled from \"styled-components\";\n// import { InputName } from \"../../reducers/AuthReducers\";\n// import { Colors } from \"../../constants/colors\";\n// const StyledInput = styled.input`\n//   padding: 1rem;\n//   background-color: white;\n//   width: 300px;\n//   box-sizing: border-box;\n//   margin: 0.6rem 0 1rem 0;\n//   border: 0;\n// `;\n// const StyledLabel = styled.label`\n//   font-size: 0.7rem;\n//   color: ${Colors.DARK_BLUE};\n// `;\n// const Container = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n// `;\n// interface InputProps {\n//   inputName: InputName;\n//   onChangeFunction: (input: string, inputName: InputName) => void;\n//   resetError: () => void;\n//   inputType?: \"text\" | \"password\";\n// }\n// export const Input: React.FC<InputProps> = ({\n//   inputName,\n//   onChangeFunction,\n//   resetError,\n//   inputType\n// }) => {\n//   return (\n//     <Container>\n//       <StyledLabel htmlFor={inputName}>{inputName.toUpperCase()}</StyledLabel>\n//       <StyledInput\n//         type={inputType}\n//         required\n//         onClick={resetError}\n//         onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n//           onChangeFunction(e.target.value, inputName)\n//         }\n//       />\n//     </Container>\n//   );\n// };","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/UI/Input.tsx"],"names":["React","styled","Colors","StyledInput","input","StyledLabel","label","DARK_BLUE","Container","div","Input","inputName","onChangeFunction","resetError","inputType","value","isRequired","toUpperCase","e","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,OAAO,MAAMC,WAAW,GAAGF,MAAM,CAACG,KAAM;;;;;;;CAAjC;AASP,OAAO,MAAMC,WAAW,GAAGJ,MAAM,CAACK,KAAM;;WAE7BJ,MAAM,CAACK,SAAU;CAFrB;AAKP,OAAO,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI;;;;;CAA7B;AAmBP,OAAO,MAAMC,KAA2B,GAAG,CAAC;AAC1CC,EAAAA,SAD0C;AAE1CC,EAAAA,gBAF0C;AAG1CC,EAAAA,UAH0C;AAI1CC,EAAAA,SAJ0C;AAK1CC,EAAAA,KAL0C;AAM1CC,EAAAA,UAAU,GAAG;AAN6B,CAAD,KAOrC;AACJ,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEL,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,KAAK,CAACW,WAAN,EAAlC,CADF,eAEE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEH,SADR;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,QAAQ,EAAEC,UAHZ;AAIE,IAAA,OAAO,EAAEH,UAJX;AAKE,IAAA,QAAQ,EAAGK,CAAD,IACRN,gBAAgB,CAACM,CAAC,CAACC,MAAF,CAASJ,KAAV,EAAiBJ,SAAjB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAcD,CAtBM,C,CAwBP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { InputName as AuthInputName } from \"../../reducers/AuthReducers\";\nimport { InputName as QuizInputName } from \"../../reducers/QuizCreation\";\nimport { Colors } from \"../../constants/colors\";\n\nexport const StyledInput = styled.input`\n  padding: 1rem;\n  background-color: white;\n  width: 300px;\n  box-sizing: border-box;\n  margin: 0.7rem 0 1.5rem 0;\n  border: 0;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 0.7rem;\n  color: ${Colors.DARK_BLUE};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\ntype InputName = AuthInputName | QuizInputName;\n\ninterface InputProps {\n  inputName: InputName;\n  onChangeFunction: (input: string, inputName: any) => void;\n  resetError?: () => void;\n  inputType?: \"text\" | \"password\";\n  value: string;\n  isRequired?: boolean;\n  label: string;\n}\n\nexport const Input: React.FC<InputProps> = ({\n  inputName,\n  onChangeFunction,\n  resetError,\n  inputType,\n  value,\n  isRequired = false\n}) => {\n  return (\n    <Container>\n      <StyledLabel htmlFor={inputName}>{label.toUpperCase()}</StyledLabel>\n      <StyledInput\n        type={inputType}\n        value={value}\n        required={isRequired}\n        onClick={resetError}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          onChangeFunction(e.target.value, inputName)\n        }\n      />\n    </Container>\n  );\n};\n\n// import React from \"react\";\n// import styled from \"styled-components\";\n// import { InputName } from \"../../reducers/AuthReducers\";\n// import { Colors } from \"../../constants/colors\";\n\n// const StyledInput = styled.input`\n//   padding: 1rem;\n//   background-color: white;\n//   width: 300px;\n//   box-sizing: border-box;\n//   margin: 0.6rem 0 1rem 0;\n//   border: 0;\n// `;\n\n// const StyledLabel = styled.label`\n//   font-size: 0.7rem;\n//   color: ${Colors.DARK_BLUE};\n// `;\n\n// const Container = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n// `;\n\n// interface InputProps {\n//   inputName: InputName;\n//   onChangeFunction: (input: string, inputName: InputName) => void;\n//   resetError: () => void;\n//   inputType?: \"text\" | \"password\";\n// }\n\n// export const Input: React.FC<InputProps> = ({\n//   inputName,\n//   onChangeFunction,\n//   resetError,\n//   inputType\n// }) => {\n//   return (\n//     <Container>\n//       <StyledLabel htmlFor={inputName}>{inputName.toUpperCase()}</StyledLabel>\n//       <StyledInput\n//         type={inputType}\n//         required\n//         onClick={resetError}\n//         onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n//           onChangeFunction(e.target.value, inputName)\n//         }\n//       />\n//     </Container>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}