{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/UsersCustomQuizzes.tsx\";\nimport React, { useContext } from \"react\";\nimport { BigTitle, SubTitle } from \"../../UI/Titles\";\nimport { QuizzesContext } from \"../../../contexts/quizzes/Quizzes\";\nimport { GridWrapper } from \"../../UI/GridWrapper\";\nimport { FingerDown } from \"../../UI/FingerDown\";\nimport { Thumbnail } from \"../../UI/Thumbnail\";\nexport const UsersCustomQuizzes = () => {\n  const {\n    usersCustomQuizzes\n  } = useContext(QuizzesContext);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BigTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"USERS' QUIZZES\"), /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Choose a quiz created by a user \", /*#__PURE__*/React.createElement(FingerDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(GridWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, usersCustomQuizzes.sort((a, b) => {\n    if (a < b) {\n      return -1;\n    }\n\n    if (a > b) {\n      return 1;\n    }\n\n    return 0;\n  }).map(quiz => /*#__PURE__*/React.createElement(Thumbnail, {\n    purpose: \"userQuizzes\",\n    title: quiz.title,\n    customQuiz: quiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }) // <SubjectElement\n  //   key={subject}\n  //   value={subject as Subject}\n  //   title={shortenLengthySubjects(subject as string)!}\n  // />\n  )));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/public/UsersCustomQuizzes.tsx"],"names":["React","useContext","BigTitle","SubTitle","QuizzesContext","GridWrapper","FingerDown","Thumbnail","UsersCustomQuizzes","usersCustomQuizzes","sort","a","b","map","quiz","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,QAAT,EAA0BC,QAA1B,QAA0C,iBAA1C;AAUA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAO,MAAMC,kBAA4B,GAAG,MAAM;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAyBR,UAAU,CAACG,cAAD,CAAzC;AACA,sBACE,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACkC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,CAFF,eAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,kBAAkB,CAChBC,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,QAAID,CAAC,GAAIC,CAAT,EAAa;AACX,aAAO,CAAC,CAAR;AACD;;AACD,QAAID,CAAC,GAAIC,CAAT,EAAa;AACX,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GATF,EAUEC,GAVF,CAUMC,IAAI,iBACP,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,aADV;AAEE,IAAA,KAAK,EAAEA,IAAI,CAACC,KAFd;AAGE,IAAA,UAAU,EAAED,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAMP;AACA;AACA;AACA;AACA;AApBH,GADH,CALF,CADF;AAiCD,CAnCM","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { BigTitle, Title, SubTitle } from \"../../UI/Titles\";\nimport { QuizType, Subject } from \"../../../models/PublicQuizQuestion\";\nimport {\n  shortenLengthySubjects,\n  getSubjectBackgroundPic\n} from \"../../../utils/functions\";\nimport {\n  ProgrammingCategories,\n  TriviaCategories\n} from \"../../../constants/questionCategories\";\nimport { QuizzesContext } from \"../../../contexts/quizzes/Quizzes\";\nimport { GridWrapper } from \"../../UI/GridWrapper\";\nimport { GridCard } from \"../../UI/GridCard\";\nimport { FingerDown } from \"../../UI/FingerDown\";\nimport { Thumbnail } from \"../../UI/Thumbnail\";\n\nexport const UsersCustomQuizzes: React.FC = () => {\n  const { usersCustomQuizzes } = useContext(QuizzesContext);\n  return (\n    <>\n      <BigTitle>USERS' QUIZZES</BigTitle>\n      <SubTitle>\n        Choose a quiz created by a user <FingerDown />\n      </SubTitle>\n      <GridWrapper>\n        {usersCustomQuizzes\n          .sort((a, b) => {\n            if (a! < b!) {\n              return -1;\n            }\n            if (a! > b!) {\n              return 1;\n            }\n            return 0;\n          })\n          .map(quiz => (\n            <Thumbnail\n              purpose=\"userQuizzes\"\n              title={quiz.title}\n              customQuiz={quiz}\n            />\n            // <SubjectElement\n            //   key={subject}\n            //   value={subject as Subject}\n            //   title={shortenLengthySubjects(subject as string)!}\n            // />\n          ))}\n        {/* <SubjectElement value=\"\" title=\"Random\" /> */}\n      </GridWrapper>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}