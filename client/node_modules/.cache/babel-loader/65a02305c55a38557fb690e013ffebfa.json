{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/Navbar.tsx\";\nimport React, { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Logo } from \"./Logo\";\nimport { LoginButton, RegisterButton } from \"../UI/Buttons\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport { NavbarContainer, MenuItemsContainer } from \"./NavbarComponents\";\nimport { NavbarLinks } from \"./NavbarLinks\";\nexport const AuthButtons = () => {\n  return /*#__PURE__*/React.createElement(MenuItemsContainer, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoginButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RegisterButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\nexport const Navbar = () => {\n  const {\n    quizType,\n    configQuiz,\n    reset\n  } = useContext(QuizzesContext);\n  const {\n    currentUser,\n    isInPrivateSection,\n    logout\n  } = useContext(AuthContext);\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(NavbarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(NavbarLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/Navbar.tsx"],"names":["React","useContext","Link","useHistory","Logo","LoginButton","RegisterButton","AuthContext","QuizzesContext","NavbarContainer","MenuItemsContainer","NavbarLinks","AuthButtons","Navbar","quizType","configQuiz","reset","currentUser","isInPrivateSection","logout","history"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,SAASC,WAAT,EAAsBC,cAAtB,QAA0D,eAA1D;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SACEC,eADF,EAEEC,kBAFF,QAOO,oBAPP;AASA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,MAAMC,WAAqB,GAAG,MAAM;AACzC,sBACE,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAE,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAJF,CADF;AAUD,CAXM;AAaP,OAAO,MAAMC,MAAgB,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA;AAAxB,MAAkCf,UAAU,CAACO,cAAD,CAAlD;AACA,QAAM;AAAES,IAAAA,WAAF;AAAeC,IAAAA,kBAAf;AAAmCC,IAAAA;AAAnC,MAA8ClB,UAAU,CAACM,WAAD,CAA9D;AACA,QAAMa,OAAO,GAAGjB,UAAU,EAA1B;AAEA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eA4DE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5DF,CADF;AAgED,CArEM","sourcesContent":["import React, { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Logo } from \"./Logo\";\nimport { QuizType } from \"../../models/PublicQuizQuestion\";\nimport { LoginButton, RegisterButton, LogoutButton } from \"../UI/Buttons\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport {\n  NavbarContainer,\n  MenuItemsContainer,\n  MenuItems,\n  NavbarMenuItem,\n  BackButton,\n  AllLinkWrapper\n} from \"./NavbarComponents\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { NavbarLinks } from \"./NavbarLinks\";\n\nexport const AuthButtons: React.FC = () => {\n  return (\n    <MenuItemsContainer flex={1}>\n      <Link to=\"/login\">\n        <LoginButton>Login</LoginButton>\n      </Link>\n      <Link to=\"/register\">\n        <RegisterButton>Register</RegisterButton>\n      </Link>\n    </MenuItemsContainer>\n  );\n};\n\nexport const Navbar: React.FC = () => {\n  const { quizType, configQuiz, reset } = useContext(QuizzesContext);\n  const { currentUser, isInPrivateSection, logout } = useContext(AuthContext);\n  const history = useHistory();\n\n  return (\n    <NavbarContainer>\n      {/* <MobileMenu /> */}\n      <Link to=\"\">\n        <Logo reset={reset} />\n      </Link>\n\n      {/* <AllLinkWrapper>\n        {!isInPrivateSection && (\n          <MenuItems>\n            <MenuItemsContainer flex={2}>\n              <NavbarMenuItem\n                value={QuizType.TRIVIA}\n                selectedNow={quizType}\n                onClick={() => configQuiz(\"quizType\", QuizType.TRIVIA)}\n              >\n                TRIVIA QUIZ\n              </NavbarMenuItem>\n\n              <NavbarMenuItem\n                value={QuizType.PROGRAMMING}\n                selectedNow={quizType}\n                onClick={() => configQuiz(\"quizType\", QuizType.PROGRAMMING)}\n              >\n                PROGRAMMING QUIZ\n              </NavbarMenuItem>\n\n              <NavbarMenuItem\n                value={QuizType.USERS_QUIZZES}\n                selectedNow={quizType}\n                onClick={() => configQuiz(\"quizType\", QuizType.USERS_QUIZZES)}\n              >\n                USERS' QUIZZES\n              </NavbarMenuItem>\n            </MenuItemsContainer>\n          </MenuItems>\n        )}\n\n        {!isInPrivateSection && !currentUser ? (\n          <AuthButtons />\n        ) : isInPrivateSection ? (\n          <Link to=\"/\">\n            <BackButton>Back to quiz section</BackButton>\n          </Link>\n        ) : (\n          <Link to=\"/myDashboard\">\n            <BackButton>Your dashboard</BackButton>\n          </Link>\n        )}\n\n        {currentUser && (\n          <LogoutButton\n            onClick={() => {\n              logout();\n              history.push(\"/\");\n            }}\n          >\n            Log out\n          </LogoutButton>\n        )}\n      </AllLinkWrapper> */}\n      <NavbarLinks />\n    </NavbarContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}