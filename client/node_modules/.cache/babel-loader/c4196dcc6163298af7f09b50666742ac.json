{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/replies/QuestionCard.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { StyledButton } from \"../QuizChoiceButton\";\nimport { Colors } from \"../../constants/colors\";\nimport { Reply } from \"./Reply\";\nimport { Icon } from \"../UI/Icon\";\nexport const StyledCard = styled.div`\n  width: 600px;\n  padding: 2rem;\n  background-color: white;\n  background-color: rgba(255, 255, 255, 0.95);\n  align-items: flex-start;\n  position: relative;\n  border-radius: 20px;\n  border: 3px solid;\n`;\nconst NextButton = styled(StyledButton)`\n  background-color: ${Colors.VIOLET};\n  background-color: ${props => props.hasReplied ? Colors.VIOLET : Colors.LIGHTER_GREY};\n  cursor: ${props => props.hasReplied ? \"pointer\" : \"auto\"};\n\n  :hover {\n    background-color: ${props => props.hasReplied ? Colors.VIOLET : Colors.LIGHTER_GREY};\n  }\n`;\nconst RepliesContainer = styled.div`\n  margin: 1.5rem 0;\n  display: flex;\n  flex-direction: column;\n`;\nconst CardBottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst CardBottomItem = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\nconst QuestionNumber = styled.h4`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #cccccc;\n  color: #696969;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst StyledQuestion = styled.h4`\n  font-size: 1.4rem;\n  line-height: 30px;\n`;\nexport const QuestionCard = ({\n  question,\n  next,\n  numberOfQuestions,\n  currentNumberOfQuestion,\n  givePoint\n}) => {\n  console.log(\"QUESTION\", question);\n  const [hasReplied, setHasReplied] = useState(false);\n\n  const replyQuestion = () => setHasReplied(true);\n\n  const isRightReply = reply => reply === question.rightReply;\n\n  const goToNextQuestion = () => {\n    setHasReplied(false);\n    next();\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledQuestion, {\n    dangerouslySetInnerHTML: {\n      __html: question.question\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RepliesContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, question.allReplies.filter(reply => reply !== null).map((reply, index) => /*#__PURE__*/React.createElement(Reply, {\n    key: index,\n    isRight: isRightReply(reply),\n    hasReplied: hasReplied,\n    replyText: reply,\n    replyQuestion: replyQuestion,\n    givePoint: givePoint,\n    replyNumber: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(NextButton, {\n    hasReplied: hasReplied,\n    disabled: !hasReplied,\n    onClick: goToNextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"NEXT\"), /*#__PURE__*/React.createElement(CardBottom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBottomItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"book-open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), question.subject), /*#__PURE__*/React.createElement(QuestionNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, `${currentNumberOfQuestion}/${numberOfQuestions}`)));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/replies/QuestionCard.tsx"],"names":["React","useState","styled","StyledButton","Colors","Reply","Icon","StyledCard","div","NextButton","VIOLET","props","hasReplied","LIGHTER_GREY","RepliesContainer","CardBottom","CardBottomItem","QuestionNumber","h4","StyledQuestion","QuestionCard","question","next","numberOfQuestions","currentNumberOfQuestion","givePoint","console","log","setHasReplied","replyQuestion","isRightReply","reply","rightReply","goToNextQuestion","__html","allReplies","filter","map","index","subject"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Question } from \"../../models/Question\";\nimport { StyledButton } from \"../QuizChoiceButton\";\nimport { Colors } from \"../../constants/colors\";\nimport { Reply } from \"./Reply\";\nimport { Icon } from \"../UI/Icon\";\n\nexport const StyledCard = styled.div`\n  width: 600px;\n  padding: 2rem;\n  background-color: white;\n  background-color: rgba(255, 255, 255, 0.95);\n  align-items: flex-start;\n  position: relative;\n  border-radius: 20px;\n  border: 3px solid;\n`;\n\nconst NextButton = styled(StyledButton)`\n  background-color: ${Colors.VIOLET};\n  background-color: ${(props: { hasReplied: boolean }) =>\n    props.hasReplied ? Colors.VIOLET : Colors.LIGHTER_GREY};\n  cursor: ${(props: { hasReplied: boolean }) =>\n    props.hasReplied ? \"pointer\" : \"auto\"};\n\n  :hover {\n    background-color: ${(props: { hasReplied: boolean }) =>\n      props.hasReplied ? Colors.VIOLET : Colors.LIGHTER_GREY};\n  }\n`;\n\nconst RepliesContainer = styled.div`\n  margin: 1.5rem 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CardBottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst CardBottomItem = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst QuestionNumber = styled.h4`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #cccccc;\n  color: #696969;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledQuestion = styled.h4`\n  font-size: 1.4rem;\n  line-height: 30px;\n`;\n\ninterface QuestionCardProps {\n  question: Question;\n  numberOfQuestions: number;\n  currentNumberOfQuestion: number;\n  next: () => void;\n  givePoint: () => void;\n}\n\nexport const QuestionCard: React.FC<QuestionCardProps> = ({\n  question,\n  next,\n  numberOfQuestions,\n  currentNumberOfQuestion,\n  givePoint\n}) => {\n  console.log(\"QUESTION\", question);\n  const [hasReplied, setHasReplied] = useState(false);\n\n  const replyQuestion = () => setHasReplied(true);\n  const isRightReply = (reply: string) => reply === question.rightReply;\n\n  const goToNextQuestion = () => {\n    setHasReplied(false);\n    next();\n  };\n\n  return (\n    <StyledCard>\n      <StyledQuestion dangerouslySetInnerHTML={{ __html: question.question }} />\n      <RepliesContainer>\n        {question.allReplies\n          .filter(reply => reply !== null)\n          .map((reply, index) => (\n            <Reply\n              key={index}\n              isRight={isRightReply(reply)}\n              hasReplied={hasReplied}\n              replyText={reply}\n              replyQuestion={replyQuestion}\n              givePoint={givePoint}\n              replyNumber={index}\n            />\n          ))}\n      </RepliesContainer>\n      <NextButton\n        hasReplied={hasReplied}\n        disabled={!hasReplied}\n        onClick={goToNextQuestion}\n      >\n        NEXT\n      </NextButton>\n      <CardBottom>\n        <CardBottomItem>\n          <Icon icon={\"book-open\"} />\n          {question.subject}\n        </CardBottomItem>\n        <QuestionNumber>{`${currentNumberOfQuestion}/${numberOfQuestions}`}</QuestionNumber>\n      </CardBottom>\n    </StyledCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}