{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { QuizType } from \"./models/Question\";\nimport { SecondStep } from \"./components/steps/SecondStep\";\nimport { ThirdStep } from \"./components/steps/ThirdStep\";\nimport { SubjectsStep } from \"./components/steps/SubjectsStep\";\nimport { FifthStep } from \"./components/steps/FifthStep\";\nimport { ActualQuiz } from \"./components/ActualQuiz\";\nimport { Navbar } from \"./components/Navbar\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [quizType, setQuizType] = useState(QuizType.TRIVIA);\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\n  const [difficultyLevel, setDifficultyLevel] = useState(\"medium\");\n  const [currentSubject, setCurrentSubject] = useState(\"\");\n  const [currentStep, setCurrentStep] = useState(1);\n  const [startedQuiz, setStartedQuiz] = useState(false);\n\n  const chooseQuiz = quizType => {\n    setCurrentStep(1);\n    setQuizType(quizType);\n  };\n\n  const chooseAmountOfQuestions = num => {\n    setNumOfQuestions(num);\n  };\n\n  const changeLevel = level => setDifficultyLevel(level);\n\n  const chooseSubject = subject => {\n    setCurrentSubject(subject);\n  };\n\n  const goForward = () => setCurrentStep(prev => prev + 1);\n\n  const uploadQuestions = questions => {\n    setQuestions(questions);\n    setStartedQuiz(true);\n  };\n\n  console.log(\"QST\", questions);\n\n  const renderInstruction = () => {\n    switch (currentStep) {\n      case 1:\n        return /*#__PURE__*/React.createElement(SubjectsStep, {\n          quizType: quizType,\n          goForward: goForward,\n          updateSubject: chooseSubject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        });\n      // return <FirstStep chooseQuiz={chooseQuiz} goForward={goForward} />;\n\n      case 2:\n        return /*#__PURE__*/React.createElement(SecondStep, {\n          chooseAmountOfQuestions: chooseAmountOfQuestions,\n          currentAmount: numOfQuestions,\n          goForward: goForward,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(ThirdStep, {\n          currentLevel: difficultyLevel,\n          changeLevel: changeLevel,\n          goForward: goForward,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(SubjectsStep, {\n          quizType: quizType,\n          goForward: goForward,\n          updateSubject: chooseSubject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }\n        });\n\n      case 5:\n        return /*#__PURE__*/React.createElement(FifthStep, {\n          quizType: quizType,\n          numberOfQuestions: numOfQuestions,\n          difficulty: difficultyLevel,\n          subject: currentSubject,\n          uploadQuestions: uploadQuestions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 16\n          }\n        }, \"NOTHING\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    selectedQuiz: quizType,\n    chooseQuiz: chooseQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), !startedQuiz ? /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, renderInstruction()) : /*#__PURE__*/React.createElement(ActualQuiz, {\n    quizType: quizType // currentQuestion={questions[0]}\n    ,\n    allQuestions: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/App.tsx"],"names":["React","useState","QuizType","SecondStep","ThirdStep","SubjectsStep","FifthStep","ActualQuiz","Navbar","App","questions","setQuestions","quizType","setQuizType","TRIVIA","numOfQuestions","setNumOfQuestions","difficultyLevel","setDifficultyLevel","currentSubject","setCurrentSubject","currentStep","setCurrentStep","startedQuiz","setStartedQuiz","chooseQuiz","chooseAmountOfQuestions","num","changeLevel","level","chooseSubject","subject","goForward","prev","uploadQuestions","console","log","renderInstruction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAA4C,mBAA5C;AAEA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAa,EAAb,CAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAWC,QAAQ,CAACY,MAApB,CAAxC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAS,CAAT,CAApD;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAa,QAAb,CAAtD;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAe,EAAf,CAApD;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMwB,UAAU,GAAIb,QAAD,IAAwB;AACzCU,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAT,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMc,uBAAuB,GAAIC,GAAD,IAAiB;AAC/CX,IAAAA,iBAAiB,CAACW,GAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIC,KAAD,IAAuBX,kBAAkB,CAACW,KAAD,CAA7D;;AAEA,QAAMC,aAAa,GAAIC,OAAD,IAAsB;AAC1CX,IAAAA,iBAAiB,CAACW,OAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAMV,cAAc,CAACW,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAtC;;AAEA,QAAMC,eAAe,GAAIxB,SAAD,IAA2B;AACjDC,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAc,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAKAW,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB1B,SAAnB;;AAEA,QAAM2B,iBAAiB,GAAG,MAAM;AAC9B,YAAQhB,WAAR;AACE,WAAK,CAAL;AACE,4BACE,oBAAC,YAAD;AACE,UAAA,QAAQ,EAAET,QADZ;AAEE,UAAA,SAAS,EAAEoB,SAFb;AAGE,UAAA,aAAa,EAAEF,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOF;;AAEA,WAAK,CAAL;AACE,4BACE,oBAAC,UAAD;AACE,UAAA,uBAAuB,EAAEJ,uBAD3B;AAEE,UAAA,aAAa,EAAEX,cAFjB;AAGE,UAAA,SAAS,EAAEiB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQF,WAAK,CAAL;AACE,4BACE,oBAAC,SAAD;AACE,UAAA,YAAY,EAAEf,eADhB;AAEE,UAAA,WAAW,EAAEW,WAFf;AAGE,UAAA,SAAS,EAAEI,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQF,WAAK,CAAL;AACE,4BACE,oBAAC,YAAD;AACE,UAAA,QAAQ,EAAEpB,QADZ;AAEE,UAAA,SAAS,EAAEoB,SAFb;AAGE,UAAA,aAAa,EAAEF,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQF,WAAK,CAAL;AACE,4BACE,oBAAC,SAAD;AACE,UAAA,QAAQ,EAAElB,QADZ;AAEE,UAAA,iBAAiB,EAAEG,cAFrB;AAGE,UAAA,UAAU,EAAEE,eAHd;AAIE,UAAA,OAAO,EAAEE,cAJX;AAKE,UAAA,eAAe,EAAEe,eALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAUF;AACE,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAlDJ;AAoDD,GArDD;;AAuDA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEtB,QAAtB;AAAgC,IAAA,UAAU,EAAEa,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,CAACF,WAAD,gBACC;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCc,iBAAiB,EAAjD,CADD,gBAGC,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEzB,QADZ,CAEE;AAFF;AAGE,IAAA,YAAY,EAAEF,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAcD,CAtGD;;AAwGA,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { QuizType, Question, Subject } from \"./models/Question\";\nimport { FirstStep } from \"./components/steps/FirstStep\";\nimport { SecondStep } from \"./components/steps/SecondStep\";\nimport { ThirdStep } from \"./components/steps/ThirdStep\";\nimport { Difficulty } from \"./models/TriviaApi\";\nimport { SubjectsStep } from \"./components/steps/SubjectsStep\";\nimport { FifthStep } from \"./components/steps/FifthStep\";\nimport { ActualQuiz } from \"./components/ActualQuiz\";\nimport { Navbar } from \"./components/Navbar\";\n\nconst App: React.FC = () => {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [quizType, setQuizType] = useState<QuizType>(QuizType.TRIVIA);\n  const [numOfQuestions, setNumOfQuestions] = useState<number>(5);\n  const [difficultyLevel, setDifficultyLevel] = useState<Difficulty>(\"medium\");\n  const [currentSubject, setCurrentSubject] = useState<Subject | \"\">(\"\");\n  const [currentStep, setCurrentStep] = useState(1);\n  const [startedQuiz, setStartedQuiz] = useState(false);\n\n  const chooseQuiz = (quizType: QuizType) => {\n    setCurrentStep(1);\n    setQuizType(quizType);\n  };\n\n  const chooseAmountOfQuestions = (num: number) => {\n    setNumOfQuestions(num);\n  };\n\n  const changeLevel = (level: Difficulty) => setDifficultyLevel(level);\n\n  const chooseSubject = (subject: Subject) => {\n    setCurrentSubject(subject);\n  };\n\n  const goForward = () => setCurrentStep(prev => prev + 1);\n\n  const uploadQuestions = (questions: Question[]) => {\n    setQuestions(questions);\n    setStartedQuiz(true);\n  };\n\n  console.log(\"QST\", questions);\n\n  const renderInstruction = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <SubjectsStep\n            quizType={quizType}\n            goForward={goForward}\n            updateSubject={chooseSubject}\n          />\n        );\n      // return <FirstStep chooseQuiz={chooseQuiz} goForward={goForward} />;\n\n      case 2:\n        return (\n          <SecondStep\n            chooseAmountOfQuestions={chooseAmountOfQuestions}\n            currentAmount={numOfQuestions}\n            goForward={goForward}\n          />\n        );\n\n      case 3:\n        return (\n          <ThirdStep\n            currentLevel={difficultyLevel}\n            changeLevel={changeLevel}\n            goForward={goForward}\n          />\n        );\n\n      case 4:\n        return (\n          <SubjectsStep\n            quizType={quizType}\n            goForward={goForward}\n            updateSubject={chooseSubject}\n          />\n        );\n\n      case 5:\n        return (\n          <FifthStep\n            quizType={quizType}\n            numberOfQuestions={numOfQuestions}\n            difficulty={difficultyLevel}\n            subject={currentSubject as Subject}\n            uploadQuestions={uploadQuestions}\n          />\n        );\n\n      default:\n        return <h1>NOTHING</h1>;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar selectedQuiz={quizType} chooseQuiz={chooseQuiz} />\n      {!startedQuiz ? (\n        <header className=\"App-header\">{renderInstruction()}</header>\n      ) : (\n        <ActualQuiz\n          quizType={quizType}\n          // currentQuestion={questions[0]}\n          allQuestions={questions}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}