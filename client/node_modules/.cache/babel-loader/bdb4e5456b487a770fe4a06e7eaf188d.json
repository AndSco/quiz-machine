{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/NavbarLinks.tsx\";\nimport React, { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { LoginButton, RegisterButton, LogoutButton } from \"../UI/Buttons\";\nimport { MenuItemsContainer, MenuItems, NavbarMenuItem, BackButton, AllLinkWrapper } from \"./NavbarComponents\";\nimport { QuizType } from \"../../models/PublicQuizQuestion\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport { useWindowWidth } from \"../../utils/hooks/useWindowWidth\";\nimport { breakpoints } from \"../../constants/breakpoints\";\nimport { extractNumberFromBreakpoint } from \"../../utils/functions\";\nexport const CreateYourQuiz = ({\n  closeMenu\n}) => {\n  return /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    className: \"buttons\",\n    onClick: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Create your own quiz\"));\n};\nexport const AuthButtons = ({\n  closeMenu\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Create your own quiz!\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoginButton, {\n    onClick: closeMenu,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RegisterButton, {\n    onClick: closeMenu,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\nexport const NavbarLinks = ({\n  closeMenu\n}) => {\n  const {\n    quizType,\n    configQuiz\n  } = useContext(QuizzesContext);\n  const {\n    currentUser,\n    isInPrivateSection,\n    logout\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const windowWidth = useWindowWidth();\n  return /*#__PURE__*/React.createElement(AllLinkWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, !isInPrivateSection && /*#__PURE__*/React.createElement(MenuItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItemsContainer, {\n    flex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavbarMenuItem, {\n    value: QuizType.TRIVIA,\n    selectedNow: quizType,\n    onClick: () => {\n      configQuiz(\"quizType\", QuizType.TRIVIA);\n      closeMenu();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"TRIVIA QUIZ\"), /*#__PURE__*/React.createElement(NavbarMenuItem, {\n    value: QuizType.PROGRAMMING,\n    selectedNow: quizType,\n    onClick: () => {\n      configQuiz(\"quizType\", QuizType.PROGRAMMING);\n      closeMenu();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"PROGRAMMING QUIZ\"), /*#__PURE__*/React.createElement(NavbarMenuItem, {\n    value: QuizType.USERS_QUIZZES,\n    selectedNow: quizType,\n    onClick: () => {\n      configQuiz(\"quizType\", QuizType.USERS_QUIZZES);\n      closeMenu();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"USERS' QUIZZES\"))), !isInPrivateSection && !currentUser ? windowWidth <= extractNumberFromBreakpoint(breakpoints.mediumScreens) ? /*#__PURE__*/React.createElement(AuthButtons, {\n    closeMenu: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(CreateYourQuiz, {\n    closeMenu: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }) : isInPrivateSection ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    className: \"back-button\",\n    onClick: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Back to quiz section\")) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/myDashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    className: \"back-button\",\n    onClick: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Your quizzes\")), currentUser && /*#__PURE__*/React.createElement(LogoutButton, {\n    className: \"logout-button\",\n    onClick: () => {\n      closeMenu();\n      logout();\n      history.push(\"/\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Log out\"));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/NavbarLinks.tsx"],"names":["React","useContext","Link","useHistory","LoginButton","RegisterButton","LogoutButton","MenuItemsContainer","MenuItems","NavbarMenuItem","BackButton","AllLinkWrapper","QuizType","AuthContext","QuizzesContext","useWindowWidth","breakpoints","extractNumberFromBreakpoint","CreateYourQuiz","closeMenu","AuthButtons","display","flexDirection","NavbarLinks","quizType","configQuiz","currentUser","isInPrivateSection","logout","history","windowWidth","TRIVIA","PROGRAMMING","USERS_QUIZZES","mediumScreens","push"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { LoginButton, RegisterButton, LogoutButton } from \"../UI/Buttons\";\nimport {\n  MenuItemsContainer,\n  MenuItems,\n  NavbarMenuItem,\n  BackButton,\n  AllLinkWrapper\n} from \"./NavbarComponents\";\nimport { QuizType } from \"../../models/PublicQuizQuestion\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport { useWindowWidth } from \"../../utils/hooks/useWindowWidth\";\nimport { breakpoints } from \"../../constants/breakpoints\";\nimport { extractNumberFromBreakpoint } from \"../../utils/functions\";\n\ntype MenuCloser = {\n  closeMenu: () => void;\n};\n\nexport const CreateYourQuiz: React.FC<MenuCloser> = ({ closeMenu }) => {\n  return (\n    <Link to=\"/login\">\n      <BackButton className=\"buttons\" onClick={closeMenu}>\n        Create your own quiz\n      </BackButton>\n    </Link>\n  );\n};\n\nexport const AuthButtons: React.FC<MenuCloser> = ({ closeMenu }) => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <h4>Create your own quiz!</h4>\n      <Link to=\"/login\">\n        <LoginButton onClick={closeMenu} className=\"buttons\">\n          Login\n        </LoginButton>\n      </Link>\n      <Link to=\"/register\">\n        <RegisterButton onClick={closeMenu} className=\"buttons\">\n          Register\n        </RegisterButton>\n      </Link>\n    </div>\n  );\n};\n\nexport const NavbarLinks: React.FC<MenuCloser> = ({ closeMenu }) => {\n  const { quizType, configQuiz } = useContext(QuizzesContext);\n  const { currentUser, isInPrivateSection, logout } = useContext(AuthContext);\n  const history = useHistory();\n  const windowWidth = useWindowWidth();\n\n  return (\n    <AllLinkWrapper>\n      {!isInPrivateSection && (\n        <MenuItems>\n          <MenuItemsContainer flex={2}>\n            <NavbarMenuItem\n              value={QuizType.TRIVIA}\n              selectedNow={quizType}\n              onClick={() => {\n                configQuiz(\"quizType\", QuizType.TRIVIA);\n                closeMenu();\n              }}\n            >\n              TRIVIA QUIZ\n            </NavbarMenuItem>\n\n            <NavbarMenuItem\n              value={QuizType.PROGRAMMING}\n              selectedNow={quizType}\n              onClick={() => {\n                configQuiz(\"quizType\", QuizType.PROGRAMMING);\n                closeMenu();\n              }}\n            >\n              PROGRAMMING QUIZ\n            </NavbarMenuItem>\n\n            <NavbarMenuItem\n              value={QuizType.USERS_QUIZZES}\n              selectedNow={quizType}\n              onClick={() => {\n                configQuiz(\"quizType\", QuizType.USERS_QUIZZES);\n                closeMenu();\n              }}\n            >\n              USERS' QUIZZES\n            </NavbarMenuItem>\n          </MenuItemsContainer>\n        </MenuItems>\n      )}\n\n      {!isInPrivateSection && !currentUser ? (\n        windowWidth <=\n        extractNumberFromBreakpoint(breakpoints.mediumScreens) ? (\n          <AuthButtons closeMenu={closeMenu} />\n        ) : (\n          <CreateYourQuiz closeMenu={closeMenu} />\n        )\n      ) : isInPrivateSection ? (\n        <Link to=\"/\">\n          <BackButton className=\"back-button\" onClick={closeMenu}>\n            Back to quiz section\n          </BackButton>\n        </Link>\n      ) : (\n        <Link to=\"/myDashboard\">\n          <BackButton className=\"back-button\" onClick={closeMenu}>\n            Your quizzes\n          </BackButton>\n        </Link>\n      )}\n\n      {currentUser && (\n        <LogoutButton\n          className=\"logout-button\"\n          onClick={() => {\n            closeMenu();\n            logout();\n            history.push(\"/\");\n          }}\n        >\n          Log out\n        </LogoutButton>\n      )}\n    </AllLinkWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}