{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/contexts/auth/Auth.tsx\";\nimport React, { createContext, useState, useEffect, useCallback, useContext } from \"react\";\nimport { getUserQuizzes, logoutUser } from \"../../utils/dbFunctions\";\nimport { LoadingContext } from \"../../contexts/loading/Loading\";\nconst startingValue = {\n  currentUser: null,\n  loadCurrentUser: user => {},\n  isInPrivateSection: false,\n  goToPrivateSection: () => {},\n  goToPublicSection: () => {},\n  userQuizzes: [],\n  refreshUserQuizzes: () => {},\n  logout: () => {}\n};\nexport const AuthContext = createContext(startingValue);\nexport const AuthContextProvider = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isInPrivateSection, setIsInPrivateSection] = useState(false);\n  const [userQuizzes, setUserQuizzes] = useState([]);\n  const {\n    startLoading,\n    stopLoading\n  } = useContext(LoadingContext);\n  const uploadUserQuizzes = useCallback(async () => {\n    startLoading();\n    const userQuizzesFromDB = await getUserQuizzes(currentUser._id);\n    setUserQuizzes(userQuizzesFromDB);\n  }, [currentUser]);\n\n  const refreshUserQuizzes = () => uploadUserQuizzes();\n\n  useEffect(() => {\n    if (currentUser) {\n      uploadUserQuizzes();\n    }\n  }, [currentUser, uploadUserQuizzes]);\n\n  const loadCurrentUser = user => {\n    setCurrentUser(user);\n  };\n\n  const goToPrivateSection = () => setIsInPrivateSection(true);\n\n  const goToPublicSection = () => setIsInPrivateSection(false);\n\n  const logout = () => {\n    logoutUser();\n    setCurrentUser(null);\n  };\n\n  const valuesToPass = {\n    currentUser,\n    loadCurrentUser,\n    isInPrivateSection,\n    goToPrivateSection,\n    goToPublicSection,\n    userQuizzes,\n    refreshUserQuizzes,\n    logout\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: { ...valuesToPass\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/contexts/auth/Auth.tsx"],"names":["React","createContext","useState","useEffect","useCallback","useContext","getUserQuizzes","logoutUser","LoadingContext","startingValue","currentUser","loadCurrentUser","user","isInPrivateSection","goToPrivateSection","goToPublicSection","userQuizzes","refreshUserQuizzes","logout","AuthContext","AuthContextProvider","children","setCurrentUser","setIsInPrivateSection","setUserQuizzes","startLoading","stopLoading","uploadUserQuizzes","userQuizzesFromDB","_id","valuesToPass"],"mappings":";AAAA,OAAOA,KAAP,IACEC,aADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,OANP;AASA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,yBAA3C;AACA,SAASC,cAAT,QAA+B,gCAA/B;AAeA,MAAMC,aAA2B,GAAG;AAClCC,EAAAA,WAAW,EAAE,IADqB;AAElCC,EAAAA,eAAe,EAAGC,IAAD,IAAgB,CAAE,CAFD;AAGlCC,EAAAA,kBAAkB,EAAE,KAHc;AAIlCC,EAAAA,kBAAkB,EAAE,MAAM,CAAE,CAJM;AAKlCC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CALO;AAMlCC,EAAAA,WAAW,EAAE,EANqB;AAOlCC,EAAAA,kBAAkB,EAAE,MAAM,CAAE,CAPM;AAQlCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AARkB,CAApC;AAWA,OAAO,MAAMC,WAAW,GAAGlB,aAAa,CAACQ,aAAD,CAAjC;AAEP,OAAO,MAAMW,mBAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7D,QAAM,CAACX,WAAD,EAAcY,cAAd,IAAgCpB,QAAQ,CAAe,IAAf,CAA9C;AACA,QAAM,CAACW,kBAAD,EAAqBU,qBAArB,IAA8CrB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACc,WAAD,EAAcQ,cAAd,IAAgCtB,QAAQ,CAAgB,EAAhB,CAA9C;AACA,QAAM;AAAEuB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAgCrB,UAAU,CAACG,cAAD,CAAhD;AAEA,QAAMmB,iBAAiB,GAAGvB,WAAW,CAAC,YAAY;AAChDqB,IAAAA,YAAY;AACZ,UAAMG,iBAAiB,GAAG,MAAMtB,cAAc,CAACI,WAAW,CAAEmB,GAAd,CAA9C;AACAL,IAAAA,cAAc,CAACI,iBAAD,CAAd;AACD,GAJoC,EAIlC,CAAClB,WAAD,CAJkC,CAArC;;AAMA,QAAMO,kBAAkB,GAAG,MAAMU,iBAAiB,EAAlD;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,WAAJ,EAAiB;AACfiB,MAAAA,iBAAiB;AAClB;AACF,GAJQ,EAIN,CAACjB,WAAD,EAAciB,iBAAd,CAJM,CAAT;;AAMA,QAAMhB,eAAe,GAAIC,IAAD,IAAgB;AACtCU,IAAAA,cAAc,CAACV,IAAD,CAAd;AACD,GAFD;;AAGA,QAAME,kBAAkB,GAAG,MAAMS,qBAAqB,CAAC,IAAD,CAAtD;;AACA,QAAMR,iBAAiB,GAAG,MAAMQ,qBAAqB,CAAC,KAAD,CAArD;;AAEA,QAAML,MAAM,GAAG,MAAM;AACnBX,IAAAA,UAAU;AACVe,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAKA,QAAMQ,YAA0B,GAAG;AACjCpB,IAAAA,WADiC;AAEjCC,IAAAA,eAFiC;AAGjCE,IAAAA,kBAHiC;AAIjCC,IAAAA,kBAJiC;AAKjCC,IAAAA,iBALiC;AAMjCC,IAAAA,WANiC;AAOjCC,IAAAA,kBAPiC;AAQjCC,IAAAA;AARiC,GAAnC;AAWA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAE,GAAGY;AAAL,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,CADF;AAKD,CA/CM","sourcesContent":["import React, {\n  createContext,\n  useState,\n  useEffect,\n  useCallback,\n  useContext\n} from \"react\";\nimport { User } from \"../../models/User\";\nimport { PrivateQuiz } from \"../../models/PrivateQuiz\";\nimport { getUserQuizzes, logoutUser } from \"../../utils/dbFunctions\";\nimport { LoadingContext } from \"../../contexts/loading/Loading\";\n\ntype PossibleUser = User | null;\n\ninterface iAuthContext {\n  currentUser: PossibleUser;\n  loadCurrentUser: (user: User) => void;\n  isInPrivateSection: boolean;\n  goToPrivateSection: () => void;\n  goToPublicSection: () => void;\n  userQuizzes: PrivateQuiz[] | [];\n  refreshUserQuizzes: () => void;\n  logout: () => void;\n}\n\nconst startingValue: iAuthContext = {\n  currentUser: null,\n  loadCurrentUser: (user: User) => {},\n  isInPrivateSection: false,\n  goToPrivateSection: () => {},\n  goToPublicSection: () => {},\n  userQuizzes: [],\n  refreshUserQuizzes: () => {},\n  logout: () => {}\n};\n\nexport const AuthContext = createContext(startingValue);\n\nexport const AuthContextProvider: React.FC = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<PossibleUser>(null);\n  const [isInPrivateSection, setIsInPrivateSection] = useState(false);\n  const [userQuizzes, setUserQuizzes] = useState<PrivateQuiz[]>([]);\n  const { startLoading, stopLoading } = useContext(LoadingContext);\n\n  const uploadUserQuizzes = useCallback(async () => {\n    startLoading();\n    const userQuizzesFromDB = await getUserQuizzes(currentUser!._id);\n    setUserQuizzes(userQuizzesFromDB);\n  }, [currentUser]);\n\n  const refreshUserQuizzes = () => uploadUserQuizzes();\n\n  useEffect(() => {\n    if (currentUser) {\n      uploadUserQuizzes();\n    }\n  }, [currentUser, uploadUserQuizzes]);\n\n  const loadCurrentUser = (user: User) => {\n    setCurrentUser(user);\n  };\n  const goToPrivateSection = () => setIsInPrivateSection(true);\n  const goToPublicSection = () => setIsInPrivateSection(false);\n\n  const logout = () => {\n    logoutUser();\n    setCurrentUser(null);\n  };\n\n  const valuesToPass: iAuthContext = {\n    currentUser,\n    loadCurrentUser,\n    isInPrivateSection,\n    goToPrivateSection,\n    goToPublicSection,\n    userQuizzes,\n    refreshUserQuizzes,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={{ ...valuesToPass }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}