{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/Navbar.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Logo } from \"./Logo\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport { NavbarContainer } from \"./NavbarComponents\";\nimport { NavbarLinks } from \"./NavbarLinks\";\nimport { BurgerIcon } from \"./BurgerIcon\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { useWindowWidth } from \"../../utils/hooks/useWindowWidth\";\nimport { breakpoints } from \"../../constants/breakpoints\";\nimport { extractNumberFromBreakpoint } from \"../../utils/functions\";\nexport const Navbar = () => {\n  const {\n    reset\n  } = useContext(QuizzesContext); // Mobile menu\n\n  const windowWidth = useWindowWidth();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const openMenu = () => setIsMobileMenuOpen(true);\n\n  const closeMenu = () => setIsMobileMenuOpen(false);\n\n  return /*#__PURE__*/React.createElement(NavbarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BurgerIcon, {\n    isMenuOpen: isMobileMenuOpen,\n    openMenu: openMenu,\n    closeMenu: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), windowWidth <= extractNumberFromBreakpoint(breakpoints.mediumScreens) ? isMobileMenuOpen && /*#__PURE__*/React.createElement(MobileMenu, {\n    isVisible: isMobileMenuOpen,\n    closeMenu: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(NavbarLinks, {\n    closeMenu: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/Navbar/Navbar.tsx"],"names":["React","useContext","useState","Link","Logo","QuizzesContext","NavbarContainer","NavbarLinks","BurgerIcon","MobileMenu","useWindowWidth","breakpoints","extractNumberFromBreakpoint","Navbar","reset","windowWidth","isMobileMenuOpen","setIsMobileMenuOpen","openMenu","closeMenu","mediumScreens"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,2BAAT,QAA4C,uBAA5C;AAEA,OAAO,MAAMC,MAAgB,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAYb,UAAU,CAACI,cAAD,CAA5B,CADoC,CAGpC;;AACA,QAAMU,WAAW,GAAGL,cAAc,EAAlC;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,KAAD,CAAxD;;AACA,QAAMgB,QAAQ,GAAG,MAAMD,mBAAmB,CAAC,IAAD,CAA1C;;AACA,QAAME,SAAS,GAAG,MAAMF,mBAAmB,CAAC,KAAD,CAA3C;;AAEA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,UAAD;AACE,IAAA,UAAU,EAAEE,gBADd;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,SAAS,EAAEC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASGJ,WAAW,IAAIH,2BAA2B,CAACD,WAAW,CAACS,aAAb,CAA1C,GACCJ,gBAAgB,iBACd,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEA,gBAAvB;AAAyC,IAAA,SAAS,EAAEG,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,gBAKC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEA,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADF;AAmBD,CA5BM","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Logo } from \"./Logo\";\nimport { QuizzesContext } from \"../../contexts/quizzes/Quizzes\";\nimport { NavbarContainer } from \"./NavbarComponents\";\nimport { NavbarLinks } from \"./NavbarLinks\";\nimport { BurgerIcon } from \"./BurgerIcon\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { useWindowWidth } from \"../../utils/hooks/useWindowWidth\";\nimport { breakpoints } from \"../../constants/breakpoints\";\nimport { extractNumberFromBreakpoint } from \"../../utils/functions\";\n\nexport const Navbar: React.FC = () => {\n  const { reset } = useContext(QuizzesContext);\n\n  // Mobile menu\n  const windowWidth = useWindowWidth();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const openMenu = () => setIsMobileMenuOpen(true);\n  const closeMenu = () => setIsMobileMenuOpen(false);\n\n  return (\n    <NavbarContainer>\n      <Link to=\"\">\n        <Logo reset={reset} />\n      </Link>\n      <BurgerIcon\n        isMenuOpen={isMobileMenuOpen}\n        openMenu={openMenu}\n        closeMenu={closeMenu}\n      />\n      {windowWidth <= extractNumberFromBreakpoint(breakpoints.mediumScreens) ? (\n        isMobileMenuOpen && (\n          <MobileMenu isVisible={isMobileMenuOpen} closeMenu={closeMenu} />\n        )\n      ) : (\n        <NavbarLinks closeMenu={closeMenu} />\n      )}\n    </NavbarContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}