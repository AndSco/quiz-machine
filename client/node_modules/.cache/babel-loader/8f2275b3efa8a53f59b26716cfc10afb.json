{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuizOverview.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { BigTitle } from \"../../UI/Titles\";\nimport { GridWrapper } from \"../../UI/GridWrapper\";\nimport { MyQuizCard } from \"./MyQuizCard\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { Modal } from \"../../UI/Modal\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nconst Wrapper = styled(GridWrapper)`\n  flex-wrap: nowrap;\n  flex-direction: column;\n`;\nexport const QuizOverview = ({\n  myQuizzes\n}) => {\n  const [isEditingQuiz, setIsEditingQuiz] = useState(false);\n  const [quizNowEditing, setQuizNowEditing] = useState(null);\n  const {\n    userQuizzes\n  } = useContext(AuthContext);\n  console.log(\"OVERVIEW USER QUIZZES\", userQuizzes);\n\n  const startEditingQuiz = quiz => {\n    setQuizNowEditing(quiz);\n    setIsEditingQuiz(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isEditingQuiz && /*#__PURE__*/React.createElement(Modal, {\n    handleClose: () => setIsEditingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuizCreationOrEditForm, {\n    usage: \"editing\",\n    currentQuiz: quizNowEditing,\n    onFormClose: () => setIsEditingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(BigTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Your quizzes\"), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, myQuizzes.map((quiz, index) => /*#__PURE__*/React.createElement(MyQuizCard, {\n    quiz: quiz,\n    key: index,\n    editQuiz: startEditingQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), userQuizzes.length > 0 ? userQuizzes.map((quiz, index) => /*#__PURE__*/React.createElement(MyQuizCard, {\n    quiz: quiz,\n    key: index,\n    editQuiz: startEditingQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"No quizzes yer. Create one now\")));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuizOverview.tsx"],"names":["React","useState","useContext","styled","BigTitle","GridWrapper","MyQuizCard","QuizCreationOrEditForm","Modal","AuthContext","Wrapper","QuizOverview","myQuizzes","isEditingQuiz","setIsEditingQuiz","quizNowEditing","setQuizNowEditing","userQuizzes","console","log","startEditingQuiz","quiz","map","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAMA,MAAMC,OAAO,GAAGP,MAAM,CAACE,WAAD,CAAc;;;CAApC;AAKA,OAAO,MAAMM,YAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC9D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAClD,IADkD,CAApD;AAGA,QAAM;AAAEgB,IAAAA;AAAF,MAAkBf,UAAU,CAACO,WAAD,CAAlC;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,WAArC;;AAEA,QAAMG,gBAAgB,GAAIC,IAAD,IAAuB;AAC9CL,IAAAA,iBAAiB,CAACK,IAAD,CAAjB;AACAP,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAHD;;AAKA,sBACE,0CACGD,aAAa,iBACZ,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAEC,cAFf;AAGE,IAAA,WAAW,EAAE,MAAMD,gBAAgB,CAAC,KAAD,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,eAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACU,GAAV,CAAc,CAACD,IAAD,EAAOE,KAAP,kBACb,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,IAAlB;AAAwB,IAAA,GAAG,EAAEE,KAA7B;AAAoC,IAAA,QAAQ,EAAEH,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAIGH,WAAW,CAACO,MAAZ,GAAqB,CAArB,GACEP,WAAD,CAA+BK,GAA/B,CAAmC,CAACD,IAAD,EAAoBE,KAApB,kBACjC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,IAAlB;AAAwB,IAAA,GAAG,EAAEE,KAA7B;AAAoC,IAAA,QAAQ,EAAEH,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCATJ,CAXF,CADF;AA0BD,CAxCM","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { BigTitle } from \"../../UI/Titles\";\nimport { GridWrapper } from \"../../UI/GridWrapper\";\nimport { MyQuizCard } from \"./MyQuizCard\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { Modal } from \"../../UI/Modal\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\n\ninterface Props {\n  myQuizzes: PrivateQuiz[];\n}\n\nconst Wrapper = styled(GridWrapper)`\n  flex-wrap: nowrap;\n  flex-direction: column;\n`;\n\nexport const QuizOverview: React.FC<Props> = ({ myQuizzes }) => {\n  const [isEditingQuiz, setIsEditingQuiz] = useState(false);\n  const [quizNowEditing, setQuizNowEditing] = useState<PrivateQuiz | null>(\n    null\n  );\n  const { userQuizzes } = useContext(AuthContext);\n\n  console.log(\"OVERVIEW USER QUIZZES\", userQuizzes);\n\n  const startEditingQuiz = (quiz: PrivateQuiz) => {\n    setQuizNowEditing(quiz);\n    setIsEditingQuiz(true);\n  };\n\n  return (\n    <>\n      {isEditingQuiz && (\n        <Modal handleClose={() => setIsEditingQuiz(false)}>\n          <QuizCreationOrEditForm\n            usage=\"editing\"\n            currentQuiz={quizNowEditing as PrivateQuiz}\n            onFormClose={() => setIsEditingQuiz(false)}\n          />\n        </Modal>\n      )}\n      <BigTitle>Your quizzes</BigTitle>\n      <Wrapper>\n        {myQuizzes.map((quiz, index) => (\n          <MyQuizCard quiz={quiz} key={index} editQuiz={startEditingQuiz} />\n        ))}\n        {userQuizzes.length > 0 ? (\n          (userQuizzes as PrivateQuiz[]).map((quiz: PrivateQuiz, index) => (\n            <MyQuizCard quiz={quiz} key={index} editQuiz={startEditingQuiz} />\n          ))\n        ) : (\n          <h2>No quizzes yer. Create one now</h2>\n        )}\n      </Wrapper>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}