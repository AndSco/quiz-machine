{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/UserDashboard.tsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { QuizOverview } from \"./QuizOverview\";\nimport { Wrapper } from \"../../UI/Wrapper\";\nimport { Colors } from \"../../../constants/colors\";\nimport { Modal } from \"../../UI/Modal\";\nimport { Clickable } from \"../../UI/Clickable\";\nimport { fadeIn } from \"../../../constants/animations\";\nimport { breakpoints } from \"../../../constants/breakpoints\";\nconst FadeInWrapper = styled(Wrapper)`\n  animation: ${fadeIn} 1.2s ease;\n`;\nconst WelcomeMessage = styled.h1`\n  color: ${Colors.BLACK};\n\n  @media (max-width: ${breakpoints.smallScreens}) {\n    margin-top: 4rem;\n  }\n`;\nexport const UserDashboard = () => {\n  const {\n    currentUser,\n    userQuizzes,\n    goToPrivateSection\n  } = useContext(AuthContext);\n  const [isCreatingQuiz, setIsCreatingQuiz] = useState(false);\n  const history = useHistory();\n  useEffect(() => goToPrivateSection(), [goToPrivateSection]);\n  useEffect(() => {\n    history.push(\"/myDashboard\");\n  }, [history]);\n  useEffect(() => {\n    if (!currentUser) {\n      history.push(\"/login\");\n    }\n  }, [history, currentUser]);\n\n  const startCreatingQuiz = () => setIsCreatingQuiz(true);\n\n  if (!currentUser) return null;\n  return /*#__PURE__*/React.createElement(FadeInWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, !isCreatingQuiz ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WelcomeMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Welcome \", currentUser.username.toUpperCase()), userQuizzes.length > 0 ? /*#__PURE__*/React.createElement(QuizOverview, {\n    myQuizzes: userQuizzes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => setIsCreatingQuiz(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      border: `2px solid ${Colors.STEEL_PINK}`,\n      color: Colors.STEEL_PINK,\n      padding: \".7rem 1.4rem\",\n      borderRadius: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"No personal quizzes yet. Click here to start creating one!\"))) : /*#__PURE__*/React.createElement(Modal, {\n    handleClose: () => setIsCreatingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuizCreationOrEditForm, {\n    usage: \"creation\",\n    onFormClose: () => setIsCreatingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/UserDashboard.tsx"],"names":["React","useContext","useEffect","useState","styled","AuthContext","useHistory","QuizCreationOrEditForm","QuizOverview","Wrapper","Colors","Modal","Clickable","fadeIn","breakpoints","FadeInWrapper","WelcomeMessage","h1","BLACK","smallScreens","UserDashboard","currentUser","userQuizzes","goToPrivateSection","isCreatingQuiz","setIsCreatingQuiz","history","push","startCreatingQuiz","username","toUpperCase","length","border","STEEL_PINK","color","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { SecondaryButton } from \"../../UI/Buttons\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { QuizOverview } from \"./QuizOverview\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { Wrapper } from \"../../UI/Wrapper\";\nimport { Icon } from \"../../UI/Icon\";\nimport { Colors } from \"../../../constants/colors\";\nimport { Modal } from \"../../UI/Modal\";\nimport { Clickable } from \"../../UI/Clickable\";\nimport { fadeIn } from \"../../../constants/animations\";\nimport { breakpoints } from \"../../../constants/breakpoints\";\n\nconst FadeInWrapper = styled(Wrapper)`\n  animation: ${fadeIn} 1.2s ease;\n`;\n\nconst WelcomeMessage = styled.h1`\n  color: ${Colors.BLACK};\n\n  @media (max-width: ${breakpoints.smallScreens}) {\n    margin-top: 4rem;\n  }\n`;\n\nexport const UserDashboard: React.FC = () => {\n  const { currentUser, userQuizzes, goToPrivateSection } = useContext(\n    AuthContext\n  );\n  const [isCreatingQuiz, setIsCreatingQuiz] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => goToPrivateSection(), [goToPrivateSection]);\n\n  useEffect(() => {\n    history.push(\"/myDashboard\");\n  }, [history]);\n\n  useEffect(() => {\n    if (!currentUser) {\n      history.push(\"/login\");\n    }\n  }, [history, currentUser]);\n\n  const startCreatingQuiz = () => setIsCreatingQuiz(true);\n\n  if (!currentUser) return null;\n\n  return (\n    <FadeInWrapper>\n      {!isCreatingQuiz ? (\n        <>\n          <WelcomeMessage>\n            Welcome {currentUser!.username.toUpperCase()}\n          </WelcomeMessage>\n          {userQuizzes.length > 0 ? (\n            <QuizOverview myQuizzes={userQuizzes as PrivateQuiz[]} />\n          ) : (\n            <Clickable onClick={() => setIsCreatingQuiz(true)}>\n              <h2\n                style={{\n                  border: `2px solid ${Colors.STEEL_PINK}`,\n                  color: Colors.STEEL_PINK,\n                  padding: \".7rem 1.4rem\",\n                  borderRadius: \"40px\"\n                }}\n              >\n                No personal quizzes yet. Click here to start creating one!\n              </h2>\n            </Clickable>\n          )}\n        </>\n      ) : (\n        <Modal handleClose={() => setIsCreatingQuiz(false)}>\n          <QuizCreationOrEditForm\n            usage=\"creation\"\n            onFormClose={() => setIsCreatingQuiz(false)}\n          />\n        </Modal>\n      )}\n    </FadeInWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}