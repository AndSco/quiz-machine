{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/MyQuizCard.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../../constants/colors\";\nimport { GridCard } from \"../../UI/GridCard\";\nimport { Link } from \"react-router-dom\";\nimport { copyQuizUrlToCipboard } from \"../../../utils/functions\";\nimport { Icon } from \"../../UI/Icon\";\nimport { WarningMessage } from \"./WarningMessage\";\nconst MyStyledQuizCard = styled(GridCard)`\n  width: 60vw;\n  padding: 0;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2rem 0;\n  background-image: ${props => `url(\"${props.imageUrl}\")`};\n  cursor: inherit;\n\n  h3 {\n    background-color: ${Colors.YELLOW};\n    padding: 0.2rem 1.5rem;\n    color: ${Colors.BLACK};\n    font-size: 1.5rem;\n  }\n`;\nconst ActionButtonsContainer = styled.div`\n  width: 90%;\n  align-self: center;\n  display: flex;\n  justify-content: space-between;\n`;\nconst ActionButton = styled.h5`\n  border-radius: 30px;\n  background-color: ${Colors.BLACK};\n  color: white;\n  font-size: 0.7rem;\n  padding: 0.4rem 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  opacity: 0.9;\n  cursor: pointer;\n\n  :hover {\n    background-color: white;\n    color: ${Colors.BLACK};\n  }\n`;\nexport const MyQuizCard = ({\n  quiz,\n  editQuiz\n}) => {\n  const quizUrl = `quiz/${quiz._id}`;\n  const [wantsToDeleteQuiz, setWantsToDeleteQuiz] = useState(false);\n  const [hasCopiedUrl, setHasCopiedUrl] = useState(false);\n  return /*#__PURE__*/React.createElement(MyStyledQuizCard, {\n    imageUrl: quiz.backgroundImageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, !wantsToDeleteQuiz ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, quiz.title), /*#__PURE__*/React.createElement(ActionButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: quizUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"puzzle-piece\",\n    color: \"lightgrey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), \"Take quiz\")), /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => copyQuizUrlToCipboard(quizUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"link\",\n    color: \"lightgrey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), \"Copy url\"), /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => editQuiz(quiz),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"edit\",\n    color: \"lightgrey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), \"Edit\"), /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => {\n      setWantsToDeleteQuiz(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"trash-alt\",\n    color: \"lightgrey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), \"Delete\"))) : /*#__PURE__*/React.createElement(WarningMessage, {\n    cancelDeletionProcess: () => setWantsToDeleteQuiz(false),\n    quizId: quiz._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/MyQuizCard.tsx"],"names":["React","useState","styled","Colors","GridCard","Link","copyQuizUrlToCipboard","Icon","WarningMessage","MyStyledQuizCard","props","imageUrl","YELLOW","BLACK","ActionButtonsContainer","div","ActionButton","h5","MyQuizCard","quiz","editQuiz","quizUrl","_id","wantsToDeleteQuiz","setWantsToDeleteQuiz","hasCopiedUrl","setHasCopiedUrl","backgroundImageUrl","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { Colors } from \"../../../constants/colors\";\nimport { GridCard } from \"../../UI/GridCard\";\nimport { Link } from \"react-router-dom\";\nimport { copyQuizUrlToCipboard } from \"../../../utils/functions\";\nimport { Icon } from \"../../UI/Icon\";\nimport { WarningMessage } from \"./WarningMessage\";\n\nconst MyStyledQuizCard = styled(GridCard)`\n  width: 60vw;\n  padding: 0;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2rem 0;\n  background-image: ${(props: { imageUrl: string }) =>\n    `url(\"${props.imageUrl}\")`};\n  cursor: inherit;\n\n  h3 {\n    background-color: ${Colors.YELLOW};\n    padding: 0.2rem 1.5rem;\n    color: ${Colors.BLACK};\n    font-size: 1.5rem;\n  }\n`;\n\nconst ActionButtonsContainer = styled.div`\n  width: 90%;\n  align-self: center;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ActionButton = styled.h5`\n  border-radius: 30px;\n  background-color: ${Colors.BLACK};\n  color: white;\n  font-size: 0.7rem;\n  padding: 0.4rem 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  opacity: 0.9;\n  cursor: pointer;\n\n  :hover {\n    background-color: white;\n    color: ${Colors.BLACK};\n  }\n`;\n\ninterface Props {\n  quiz: PrivateQuiz;\n  editQuiz: (quiz: PrivateQuiz) => void;\n}\n\nexport const MyQuizCard: React.FC<Props> = ({ quiz, editQuiz }) => {\n  const quizUrl = `quiz/${quiz._id}`;\n  const [wantsToDeleteQuiz, setWantsToDeleteQuiz] = useState(false);\n  const [hasCopiedUrl, setHasCopiedUrl] = useState(false);\n\n  return (\n    <MyStyledQuizCard imageUrl={quiz.backgroundImageUrl as string}>\n      {!wantsToDeleteQuiz ? (\n        <>\n          <h3>{quiz.title}</h3>\n          <ActionButtonsContainer>\n            <Link to={quizUrl}>\n              <ActionButton>\n                <Icon icon=\"puzzle-piece\" color=\"lightgrey\" />\n                Take quiz\n              </ActionButton>\n            </Link>\n            <ActionButton onClick={() => copyQuizUrlToCipboard(quizUrl)}>\n              <Icon icon=\"link\" color=\"lightgrey\" />\n              Copy url\n            </ActionButton>\n            <ActionButton onClick={() => editQuiz(quiz)}>\n              <Icon icon=\"edit\" color=\"lightgrey\" />\n              Edit\n            </ActionButton>\n            <ActionButton\n              onClick={() => {\n                setWantsToDeleteQuiz(true);\n              }}\n            >\n              <Icon icon=\"trash-alt\" color=\"lightgrey\" />\n              Delete\n            </ActionButton>\n          </ActionButtonsContainer>\n        </>\n      ) : (\n        <WarningMessage\n          cancelDeletionProcess={() => setWantsToDeleteQuiz(false)}\n          quizId={quiz._id as string}\n        />\n      )}\n    </MyStyledQuizCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}