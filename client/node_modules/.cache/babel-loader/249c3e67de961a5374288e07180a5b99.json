{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/steps/SubjectsStep.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { MainTitle } from \"../UI/MainTitle\";\nimport { QuizType } from \"../../models/Question\";\nimport { shortenLengthySubjects } from \"../../utils/functions\";\nimport { ProgrammingCategories, TriviaCategories } from \"../../constants/questionCategories\";\nimport { Colors } from \"../../constants/colors\";\nconst SubjectsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  padding: 0 3rem;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\nconst StyledSubject = styled.p`\n  padding: 1rem;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  border-radius: 10px;\n  border: 2px solid white;\n  text-transform: uppercase;\n  background-color: ${Colors.ORANGE};\n  font-size: 0.9rem;\n  margin: 1px;\n  width: 200px;\n  height: 200px;\n\n  :hover {\n    background-color: ${Colors.DARK_BLUE};\n  }\n`;\n\nconst SubjectElement = ({\n  title,\n  value,\n  updateSubject,\n  goForward\n}) => {\n  return /*#__PURE__*/React.createElement(StyledSubject, {\n    onClick: () => {\n      updateSubject(value);\n      goForward();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, title);\n};\n\nexport const SubjectsStep = ({\n  quizType,\n  updateSubject,\n  goForward\n}) => {\n  const availableSubjects = quizType === QuizType.TRIVIA ? TriviaCategories : ProgrammingCategories;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MainTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Choose a topic \\uD83D\\uDC47\"), /*#__PURE__*/React.createElement(SubjectsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, availableSubjects.sort((a, b) => {\n    if (a < b) {\n      return -1;\n    }\n\n    if (a > b) {\n      return 1;\n    }\n\n    return 0;\n  }).map(subject => /*#__PURE__*/React.createElement(SubjectElement, {\n    key: subject,\n    value: subject,\n    title: shortenLengthySubjects(subject),\n    updateSubject: updateSubject,\n    goForward: goForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/steps/SubjectsStep.tsx"],"names":["React","styled","MainTitle","QuizType","shortenLengthySubjects","ProgrammingCategories","TriviaCategories","Colors","SubjectsContainer","div","StyledSubject","p","ORANGE","DARK_BLUE","SubjectElement","title","value","updateSubject","goForward","SubjectsStep","quizType","availableSubjects","TRIVIA","sort","a","b","map","subject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,SAASC,QAAT,QAAkC,uBAAlC;AACA,SAASC,sBAAT,QAAuC,uBAAvC;AACA,SACEC,qBADF,EAEEC,gBAFF,QAGO,oCAHP;AAIA,SAASC,MAAT,QAAuB,wBAAvB;AAGA,MAAMC,iBAAiB,GAAGP,MAAM,CAACQ,GAAI;;;;;;CAArC;AAQA,MAAMC,aAAa,GAAGT,MAAM,CAACU,CAAE;;;;;;;sBAOTJ,MAAM,CAACK,MAAO;;;;;;;wBAOZL,MAAM,CAACM,SAAU;;CAdzC;;AAkBA,MAAMC,cACC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA;AAA/B,CAAD,KAAgD;AACxD,sBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,aAAa,CAACD,KAAD,CAAb;AACAE,MAAAA,SAAS;AACV,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,KANH,CADF;AAUD,CAZD;;AAsBA,OAAO,MAAMI,YAAgD,GAAG,CAAC;AAC/DC,EAAAA,QAD+D;AAE/DH,EAAAA,aAF+D;AAG/DC,EAAAA;AAH+D,CAAD,KAI1D;AACJ,QAAMG,iBAAiB,GACrBD,QAAQ,KAAKjB,QAAQ,CAACmB,MAAtB,GAA+BhB,gBAA/B,GAAkDD,qBADpD;AAEA,sBACE,uDACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,iBAAiB,CACfE,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,QAAID,CAAC,GAAIC,CAAT,EAAa;AACX,aAAO,CAAC,CAAR;AACD;;AACD,QAAID,CAAC,GAAIC,CAAT,EAAa;AACX,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GATF,EAUEC,GAVF,CAUMC,OAAO,iBACV,oBAAC,cAAD;AACE,IAAA,GAAG,EAAEA,OADP;AAEE,IAAA,KAAK,EAAEA,OAFT;AAGE,IAAA,KAAK,EAAEvB,sBAAsB,CAACuB,OAAD,CAH/B;AAIE,IAAA,aAAa,EAAEV,aAJjB;AAKE,IAAA,SAAS,EAAEC,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CADH,CAFF,CADF;AA0BD,CAjCM","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { MainTitle } from \"../UI/MainTitle\";\nimport { Step } from \"../../models/Step\";\nimport { QuizType, Subject } from \"../../models/Question\";\nimport { shortenLengthySubjects } from \"../../utils/functions\";\nimport {\n  ProgrammingCategories,\n  TriviaCategories\n} from \"../../constants/questionCategories\";\nimport { Colors } from \"../../constants/colors\";\nimport { StepTemplate } from \"./StepTemplate\";\n\nconst SubjectsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  padding: 0 3rem;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst StyledSubject = styled.p`\n  padding: 1rem;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  border-radius: 10px;\n  border: 2px solid white;\n  text-transform: uppercase;\n  background-color: ${Colors.ORANGE};\n  font-size: 0.9rem;\n  margin: 1px;\n  width: 200px;\n  height: 200px;\n\n  :hover {\n    background-color: ${Colors.DARK_BLUE};\n  }\n`;\n\nconst SubjectElement: React.FC<{ title: string; value: Subject } & Updatable &\n  Step> = ({ title, value, updateSubject, goForward }) => {\n  return (\n    <StyledSubject\n      onClick={() => {\n        updateSubject(value);\n        goForward();\n      }}\n    >\n      {title}\n    </StyledSubject>\n  );\n};\n\ninterface Props {\n  quizType: QuizType;\n}\n\ninterface Updatable {\n  updateSubject: (subject: Subject) => void;\n}\n\nexport const SubjectsStep: React.FC<Props & Step & Updatable> = ({\n  quizType,\n  updateSubject,\n  goForward\n}) => {\n  const availableSubjects =\n    quizType === QuizType.TRIVIA ? TriviaCategories : ProgrammingCategories;\n  return (\n    <>\n      <MainTitle>Choose a topic ðŸ‘‡</MainTitle>\n      <SubjectsContainer>\n        {availableSubjects\n          .sort((a, b) => {\n            if (a! < b!) {\n              return -1;\n            }\n            if (a! > b!) {\n              return 1;\n            }\n            return 0;\n          })\n          .map(subject => (\n            <SubjectElement\n              key={subject}\n              value={subject as Subject}\n              title={shortenLengthySubjects(subject as string)!}\n              updateSubject={updateSubject}\n              goForward={goForward}\n            />\n          ))}\n      </SubjectsContainer>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}