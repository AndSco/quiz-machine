{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/quizForm/SavedQuestionCard.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon } from \"../../../UI/Icon\";\nimport { Clickable } from \"../../../UI/Clickable\";\nimport { Colors } from \"../../../../constants/colors\";\nconst StyledQuestionCard = styled.div`\n  border-radius: 10px;\n  padding: 0.2rem 0.6rem;\n  text-align: left;\n  background-color: ${Colors.DARK_BLUE};\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h4 {\n    font-size: 0.9rem;\n  }\n`;\nexport const SavedQuestionCard = ({\n  question,\n  removeQuestion\n}) => {\n  const [wantsToRemoveQuestion, setWantsToRemoveQuestion] = useState(false);\n  return /*#__PURE__*/React.createElement(StyledQuestionCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"question-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), question.question), /*#__PURE__*/React.createElement(Clickable, {\n    onClick: () => {\n      setWantsToRemoveQuestion(true); // removeQuestion(question.question);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"trash-alt\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/quizForm/SavedQuestionCard.tsx"],"names":["React","useState","styled","Icon","Clickable","Colors","StyledQuestionCard","div","DARK_BLUE","SavedQuestionCard","question","removeQuestion","wantsToRemoveQuestion","setWantsToRemoveQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,MAAT,QAAuB,8BAAvB;AAEA,MAAMC,kBAAkB,GAAGJ,MAAM,CAACK,GAAI;;;;sBAIhBF,MAAM,CAACG,SAAU;;;;;;;;;CAJvC;AAoBA,OAAO,MAAMC,iBAAkC,GAAG,CAAC;AACjDC,EAAAA,QADiD;AAEjDC,EAAAA;AAFiD,CAAD,KAG5C;AACJ,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDZ,QAAQ,CAAC,KAAD,CAAlE;AAEA,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGS,QAAQ,CAACA,QAFZ,CADF,eAKE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbG,MAAAA,wBAAwB,CAAC,IAAD,CAAxB,CADa,CAEb;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,WAAZ;AAAyB,IAAA,KAAK,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CALF,CADF;AAgBD,CAtBM","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuizQuestion } from \"../../../../models/PrivateQuiz\";\nimport { Icon } from \"../../../UI/Icon\";\nimport { Clickable } from \"../../../UI/Clickable\";\nimport { Colors } from \"../../../../constants/colors\";\n\nconst StyledQuestionCard = styled.div`\n  border-radius: 10px;\n  padding: 0.2rem 0.6rem;\n  text-align: left;\n  background-color: ${Colors.DARK_BLUE};\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h4 {\n    font-size: 0.9rem;\n  }\n`;\n\ninterface Props {\n  question: PrivateQuizQuestion;\n  removeQuestion: (questionText: string) => void;\n}\n\nexport const SavedQuestionCard: React.FC<Props> = ({\n  question,\n  removeQuestion\n}) => {\n  const [wantsToRemoveQuestion, setWantsToRemoveQuestion] = useState(false);\n\n  return (\n    <StyledQuestionCard>\n      <h4>\n        <Icon icon={\"question-circle\"} />\n        {question.question}\n      </h4>\n      <Clickable\n        onClick={() => {\n          setWantsToRemoveQuestion(true);\n          // removeQuestion(question.question);\n        }}\n      >\n        <Icon icon={\"trash-alt\"} color=\"white\" />\n      </Clickable>\n    </StyledQuestionCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}