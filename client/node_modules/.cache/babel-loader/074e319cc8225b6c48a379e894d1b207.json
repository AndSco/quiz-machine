{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuestionSubForm.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FormContainer, FormTitle } from \"../../UI/Form\";\nimport { StyledInput, Container as InputContainer, StyledLabel } from \"../../UI/Input\";\n\nconst CustomInput = ({\n  label,\n  handleChangeFunction\n}) => {\n  return /*#__PURE__*/React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Question\"), /*#__PURE__*/React.createElement(StyledInput, {\n    type: \"text\",\n    onChange: handleChangeFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Modal = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color: red;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const QuestionSubForm = ({\n  saveQuestionInState\n}) => {\n  const handleChange = () => {};\n\n  const [question, setQuestion] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const [allReplies, setAllReplies] = useState([]);\n  const [rightReply, setRightReply] = useState(\"\");\n  console.log(\"QUESTION\", question);\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Add a question to your quiz\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault(); // saveQuestionInState();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    label: \"Question\",\n    handleChangeFunction: e => setQuestion(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/QuestionSubForm.tsx"],"names":["React","useState","styled","FormContainer","FormTitle","StyledInput","Container","InputContainer","StyledLabel","CustomInput","label","handleChangeFunction","Modal","div","QuestionSubForm","saveQuestionInState","handleChange","question","setQuestion","reply","setReply","allReplies","setAllReplies","rightReply","setRightReply","console","log","e","preventDefault","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,EAAwBC,SAAxB,QAAuD,eAAvD;AACA,SAEEC,WAFF,EAGEC,SAAS,IAAIC,cAHf,EAIEC,WAJF,QAKO,gBALP;;AAOA,MAAMC,WAAmE,GAAG,CAAC;AAC3EC,EAAAA,KAD2E;AAE3EC,EAAAA;AAF2E,CAAD,KAGtE;AACJ,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,QAAQ,EAAEA,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAVD;;AAYA,MAAMC,KAAK,GAAGV,MAAM,CAACW,GAAI;;;;;;;;CAAzB;AAcA,OAAO,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAC3E,QAAMC,YAAY,GAAG,MAAM,CAAE,CAA7B;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAW,EAAX,CAA5C;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C;AAEAwB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,QAAxB;AACA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AACE,IAAA,QAAQ,EAAGU,CAAD,IAAyC;AACjDA,MAAAA,CAAC,CAACC,cAAF,GADiD,CAEjD;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,oBAAoB,EAAGD,CAAD,IACpBT,WAAW,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADF,CADF;AAyBD,CAjCM","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Question } from \"../../../models/PrivateQuiz\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../../UI/Form\";\nimport {\n  Input,\n  StyledInput,\n  Container as InputContainer,\n  StyledLabel\n} from \"../../UI/Input\";\n\nconst CustomInput: React.FC<{ label: string; handleChangeFunction: any }> = ({\n  label,\n  handleChangeFunction\n}) => {\n  return (\n    <InputContainer>\n      <StyledLabel>Question</StyledLabel>\n      <StyledInput type=\"text\" onChange={handleChangeFunction} />\n    </InputContainer>\n  );\n};\n\nconst Modal = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color: red;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\ninterface Props {\n  saveQuestionInState: (question: Question) => void;\n}\n\nexport const QuestionSubForm: React.FC<Props> = ({ saveQuestionInState }) => {\n  const handleChange = () => {};\n  const [question, setQuestion] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const [allReplies, setAllReplies] = useState<string[]>([]);\n  const [rightReply, setRightReply] = useState(\"\");\n\n  console.log(\"QUESTION\", question);\n  return (\n    <Modal>\n      <FormContainer>\n        <FormTitle>Add a question to your quiz</FormTitle>\n        <form\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            // saveQuestionInState();\n          }}\n        >\n          <CustomInput\n            label=\"Question\"\n            handleChangeFunction={(e: React.ChangeEvent<HTMLFormElement>) =>\n              setQuestion(e.target.value)\n            }\n          />\n          {/* <InputContainer>\n            <StyledLabel>Question</StyledLabel>\n            <StyledInput type=\"text\" onChange={handleChange} />\n          </InputContainer> */}\n          {/* <Input inputName=\"title\" onChangeFunction={handleChange} /> */}\n        </form>\n      </FormContainer>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}