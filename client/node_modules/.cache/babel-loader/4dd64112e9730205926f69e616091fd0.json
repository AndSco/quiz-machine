{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/UserDashboard.tsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { SecondaryButton } from \"../../UI/Buttons\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { QuizOverview } from \"./QuizOverview\";\nimport { Wrapper } from \"../../UI/Wrapper\";\nimport { Icon } from \"../../UI/Icon\";\nimport { Colors } from \"../../../constants/colors\";\nimport { Modal } from \"../../UI/Modal\";\nconst WelcomeMessage = styled.h1`\n  color: ${Colors.BLACK};\n`;\nconst CreateButtonContainer = styled.div`\n  position: fixed;\n  top: 90px;\n  left: 30px;\n`;\nconst StyledCreateButton = styled(SecondaryButton)`\n  border-radius: 40px;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n  width: 200px;\n\n  :hover {\n    svg {\n      color: white;\n    }\n  }\n`;\n\nconst CreateButton = ({\n  openCreationForm\n}) => {\n  return /*#__PURE__*/React.createElement(CreateButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledCreateButton, {\n    onClick: () => openCreationForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Create new quiz\", /*#__PURE__*/React.createElement(Icon, {\n    icon: \"plus-circle\",\n    color: Colors.LIGHTEST_GREY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport const UserDashboard = () => {\n  const {\n    currentUser,\n    userQuizzes\n  } = useContext(AuthContext);\n  const [isCreatingQuiz, setIsCreatingQuiz] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/myDashboard\");\n  }, [history]);\n\n  const startCreatingQuiz = () => setIsCreatingQuiz(true);\n\n  if (!currentUser) return null;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, !isCreatingQuiz ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WelcomeMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Welcome \", currentUser.username.toUpperCase()), /*#__PURE__*/React.createElement(CreateButton, {\n    openCreationForm: startCreatingQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), userQuizzes.length > 0 ? /*#__PURE__*/React.createElement(QuizOverview, {\n    myQuizzes: userQuizzes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"No quizzes yet. Create one now\")) : /*#__PURE__*/React.createElement(Modal, {\n    handleClose: () => setIsCreatingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuizCreationOrEditForm, {\n    usage: \"creation\",\n    onFormClose: () => setIsCreatingQuiz(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/UserDashboard.tsx"],"names":["React","useContext","useEffect","useState","styled","AuthContext","useHistory","SecondaryButton","QuizCreationOrEditForm","QuizOverview","Wrapper","Icon","Colors","Modal","WelcomeMessage","h1","BLACK","CreateButtonContainer","div","StyledCreateButton","CreateButton","openCreationForm","LIGHTEST_GREY","UserDashboard","currentUser","userQuizzes","isCreatingQuiz","setIsCreatingQuiz","history","push","startCreatingQuiz","username","toUpperCase","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,cAAc,GAAGV,MAAM,CAACW,EAAG;WACtBH,MAAM,CAACI,KAAM;CADxB;AAIA,MAAMC,qBAAqB,GAAGb,MAAM,CAACc,GAAI;;;;CAAzC;AAMA,MAAMC,kBAAkB,GAAGf,MAAM,CAACG,eAAD,CAAkB;;;;;;;;;;;;;;;CAAnD;;AAiBA,MAAMa,YAAwD,GAAG,CAAC;AAChEC,EAAAA;AADgE,CAAD,KAE3D;AACJ,sBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAE,MAAMA,gBAAgB,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,aAAZ;AAA2B,IAAA,KAAK,EAAET,MAAM,CAACU,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAXD;;AAaA,OAAO,MAAMC,aAAuB,GAAG,MAAM;AAC3C,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BxB,UAAU,CAACI,WAAD,CAA/C;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMyB,OAAO,GAAGtB,UAAU,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACD,GAFQ,EAEN,CAACD,OAAD,CAFM,CAAT;;AAIA,QAAME,iBAAiB,GAAG,MAAMH,iBAAiB,CAAC,IAAD,CAAjD;;AAEA,MAAI,CAACH,WAAL,EAAkB,OAAO,IAAP;AAElB,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,cAAD,gBACC,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWF,WAAW,CAAEO,QAAb,CAAsBC,WAAtB,EADX,CADF,eAIE,oBAAC,YAAD;AAAc,IAAA,gBAAgB,EAAEF,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGL,WAAW,CAACQ,MAAZ,GAAqB,CAArB,gBACC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAER,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARJ,CADD,gBAaC,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,MAAME,iBAAiB,CAAC,KAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,WAAW,EAAE,MAAMA,iBAAiB,CAAC,KAAD,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdJ,CADF;AAwBD,CArCM","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../../contexts/auth/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { SecondaryButton } from \"../../UI/Buttons\";\nimport { QuizCreationOrEditForm } from \"./quizForm/QuizCreationOrEditForm\";\nimport { QuizOverview } from \"./QuizOverview\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { Wrapper } from \"../../UI/Wrapper\";\nimport { Icon } from \"../../UI/Icon\";\nimport { Colors } from \"../../../constants/colors\";\nimport { Modal } from \"../../UI/Modal\";\n\nconst WelcomeMessage = styled.h1`\n  color: ${Colors.BLACK};\n`;\n\nconst CreateButtonContainer = styled.div`\n  position: fixed;\n  top: 90px;\n  left: 30px;\n`;\n\nconst StyledCreateButton = styled(SecondaryButton)`\n  border-radius: 40px;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n  width: 200px;\n\n  :hover {\n    svg {\n      color: white;\n    }\n  }\n`;\n\nconst CreateButton: React.FC<{ openCreationForm: () => void }> = ({\n  openCreationForm\n}) => {\n  return (\n    <CreateButtonContainer>\n      <StyledCreateButton onClick={() => openCreationForm()}>\n        Create new quiz\n        <Icon icon={\"plus-circle\"} color={Colors.LIGHTEST_GREY} />\n      </StyledCreateButton>\n    </CreateButtonContainer>\n  );\n};\n\nexport const UserDashboard: React.FC = () => {\n  const { currentUser, userQuizzes } = useContext(AuthContext);\n  const [isCreatingQuiz, setIsCreatingQuiz] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    history.push(\"/myDashboard\");\n  }, [history]);\n\n  const startCreatingQuiz = () => setIsCreatingQuiz(true);\n\n  if (!currentUser) return null;\n\n  return (\n    <Wrapper>\n      {!isCreatingQuiz ? (\n        <>\n          <WelcomeMessage>\n            Welcome {currentUser!.username.toUpperCase()}\n          </WelcomeMessage>\n          <CreateButton openCreationForm={startCreatingQuiz} />\n          {userQuizzes.length > 0 ? (\n            <QuizOverview myQuizzes={userQuizzes as PrivateQuiz[]} />\n          ) : (\n            <h2>No quizzes yet. Create one now</h2>\n          )}\n        </>\n      ) : (\n        <Modal handleClose={() => setIsCreatingQuiz(false)}>\n          <QuizCreationOrEditForm\n            usage=\"creation\"\n            onFormClose={() => setIsCreatingQuiz(false)}\n          />\n        </Modal>\n      )}\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}