{"ast":null,"code":"import axios from \"axios\";\nimport { apiEndPoints } from \"../constants/apiEndpoints\";\nexport const loginUser = async inputValues => {\n  try {\n    const {\n      username,\n      password\n    } = inputValues;\n    const response = await axios.post(apiEndPoints.LOGIN, {\n      username,\n      password\n    });\n    console.log(\"RES\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const registerUser = async inputValues => {\n  try {\n    const {\n      username,\n      password\n    } = inputValues;\n    const response = await axios.post(apiEndPoints.REGISTER, {\n      username,\n      password\n    });\n    console.log(\"RES\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const createQuiz = async (quiz, userId) => {\n  try {\n    const response = await axios.post(apiEndPoints.QUIZ, {\n      quiz,\n      createdBy: userId\n    });\n    console.log(\"QUIZ CREATION RESPONSE\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const getSingleQuiz = async quizId => {\n  try {} catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/utils/dbFunctions.ts"],"names":["axios","apiEndPoints","loginUser","inputValues","username","password","response","post","LOGIN","console","log","data","err","error","registerUser","REGISTER","createQuiz","quiz","userId","QUIZ","createdBy","getSingleQuiz","quizId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,SAASC,YAAT,QAA6B,2BAA7B;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAP,IAAwC;AAC/D,MAAI;AACF,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBF,WAA/B;AACA,UAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,YAAY,CAACO,KAAxB,EAA+B;AACpDJ,MAAAA,QADoD;AAEpDC,MAAAA;AAFoD,KAA/B,CAAvB;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,QAAQ,CAACK,IAA5B;AACA,WAAOL,QAAQ,CAACK,IAAhB;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAZM;AAcP,OAAO,MAAME,YAAY,GAAG,MAAOX,WAAP,IAA+C;AACzE,MAAI;AACF,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBF,WAA/B;AACA,UAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,YAAY,CAACc,QAAxB,EAAkC;AACvDX,MAAAA,QADuD;AAEvDC,MAAAA;AAFuD,KAAlC,CAAvB;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,QAAQ,CAACK,IAA5B;AACA,WAAOL,QAAQ,CAACK,IAAhB;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAZM;AAcP,OAAO,MAAMI,UAAU,GAAG,OAAOC,IAAP,EAA0BC,MAA1B,KAA6C;AACrE,MAAI;AACF,UAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,YAAY,CAACkB,IAAxB,EAA8B;AACnDF,MAAAA,IADmD;AAEnDG,MAAAA,SAAS,EAAEF;AAFwC,KAA9B,CAAvB;AAIAT,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCJ,QAAQ,CAACK,IAA/C;AACA,WAAOL,QAAQ,CAACK,IAAhB;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CAXM;AAaP,OAAO,MAAMS,aAAa,GAAG,MAAOC,MAAP,IAA0B;AACrD,MAAI,CACH,CADD,CACE,OAAOV,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD;AACF,CALM","sourcesContent":["import axios from \"axios\";\nimport {\n  LoginFormInputs,\n  RegistrationFormInputs\n} from \"../reducers/AuthReducers\";\nimport { apiEndPoints } from \"../constants/apiEndpoints\";\nimport { PrivateQuiz } from \"../models/PrivateQuiz\";\n\nexport const loginUser = async (inputValues: LoginFormInputs) => {\n  try {\n    const { username, password } = inputValues;\n    const response = await axios.post(apiEndPoints.LOGIN, {\n      username,\n      password\n    });\n    console.log(\"RES\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const registerUser = async (inputValues: RegistrationFormInputs) => {\n  try {\n    const { username, password } = inputValues;\n    const response = await axios.post(apiEndPoints.REGISTER, {\n      username,\n      password\n    });\n    console.log(\"RES\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const createQuiz = async (quiz: PrivateQuiz, userId: string) => {\n  try {\n    const response = await axios.post(apiEndPoints.QUIZ, {\n      quiz,\n      createdBy: userId\n    });\n    console.log(\"QUIZ CREATION RESPONSE\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getSingleQuiz = async (quizId: string) => {\n  try {\n  } catch (err) {\n    console.error(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}