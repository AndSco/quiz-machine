{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/UI/Input.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../constants/colors\";\nexport const StyledInput = styled.input`\n  padding: 1rem;\n  background-color: white;\n  width: 300px;\n  box-sizing: border-box;\n  margin: 0.7rem 0 1.5rem 0;\n  border: 0;\n`;\nexport const StyledLabel = styled.label`\n  font-size: 0.7rem;\n  color: ${Colors.DARK_BLUE};\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nexport const Input = ({\n  inputName,\n  onChangeFunction,\n  resetError,\n  inputType,\n  value,\n  label,\n  isRequired = false\n}) => {\n  const [typeOfInput, setTypeOfInput] = useState(inputType);\n\n  const revealHidePassword = () => setTypeOfInput(prevType => prevType === \"password\" ? \"text\" : \"password\");\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: inputName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, label.toUpperCase()), /*#__PURE__*/React.createElement(StyledInput, {\n    type: typeOfInput,\n    value: value,\n    required: isRequired,\n    onClick: resetError,\n    onChange: e => onChangeFunction(e.target.value, inputName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), inputType === \"password\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 36\n    }\n  }, \"Show\"));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/UI/Input.tsx"],"names":["React","useState","styled","Colors","StyledInput","input","StyledLabel","label","DARK_BLUE","Container","div","Input","inputName","onChangeFunction","resetError","inputType","value","isRequired","typeOfInput","setTypeOfInput","revealHidePassword","prevType","toUpperCase","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,OAAO,MAAMC,WAAW,GAAGF,MAAM,CAACG,KAAM;;;;;;;CAAjC;AASP,OAAO,MAAMC,WAAW,GAAGJ,MAAM,CAACK,KAAM;;WAE7BJ,MAAM,CAACK,SAAU;CAFrB;AAKP,OAAO,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI;;;;;CAA7B;AAmBP,OAAO,MAAMC,KAA2B,GAAG,CAAC;AAC1CC,EAAAA,SAD0C;AAE1CC,EAAAA,gBAF0C;AAG1CC,EAAAA,UAH0C;AAI1CC,EAAAA,SAJ0C;AAK1CC,EAAAA,KAL0C;AAM1CT,EAAAA,KAN0C;AAO1CU,EAAAA,UAAU,GAAG;AAP6B,CAAD,KAQrC;AACJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAACc,SAAD,CAA9C;;AAEA,QAAMK,kBAAkB,GAAG,MACzBD,cAAc,CAACE,QAAQ,IAAKA,QAAQ,KAAK,UAAb,GAA0B,MAA1B,GAAmC,UAAjD,CADhB;;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAET,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,KAAK,CAACe,WAAN,EAAlC,CADF,eAEE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEJ,WADR;AAEE,IAAA,KAAK,EAAEF,KAFT;AAGE,IAAA,QAAQ,EAAEC,UAHZ;AAIE,IAAA,OAAO,EAAEH,UAJX;AAKE,IAAA,QAAQ,EAAGS,CAAD,IACRV,gBAAgB,CAACU,CAAC,CAACC,MAAF,CAASR,KAAV,EAAiBJ,SAAjB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWGG,SAAS,KAAK,UAAd,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAX/B,CADF;AAeD,CA5BM","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { InputName as AuthInputName } from \"../../reducers/AuthReducers\";\nimport { InputName as QuizInputName } from \"../../reducers/QuizCreation\";\nimport { Colors } from \"../../constants/colors\";\n\nexport const StyledInput = styled.input`\n  padding: 1rem;\n  background-color: white;\n  width: 300px;\n  box-sizing: border-box;\n  margin: 0.7rem 0 1.5rem 0;\n  border: 0;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 0.7rem;\n  color: ${Colors.DARK_BLUE};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\ntype InputName = AuthInputName | QuizInputName;\n\ninterface InputProps {\n  inputName: InputName;\n  onChangeFunction: (input: string, inputName: any) => void;\n  resetError?: () => void;\n  inputType?: \"text\" | \"password\";\n  value: string;\n  isRequired?: boolean;\n  label: string;\n}\n\nexport const Input: React.FC<InputProps> = ({\n  inputName,\n  onChangeFunction,\n  resetError,\n  inputType,\n  value,\n  label,\n  isRequired = false\n}) => {\n  const [typeOfInput, setTypeOfInput] = useState(inputType);\n\n  const revealHidePassword = () =>\n    setTypeOfInput(prevType => (prevType === \"password\" ? \"text\" : \"password\"));\n  return (\n    <Container>\n      <StyledLabel htmlFor={inputName}>{label.toUpperCase()}</StyledLabel>\n      <StyledInput\n        type={typeOfInput}\n        value={value}\n        required={isRequired}\n        onClick={resetError}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          onChangeFunction(e.target.value, inputName)\n        }\n      />\n      {inputType === \"password\" && <span>Show</span>}\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}