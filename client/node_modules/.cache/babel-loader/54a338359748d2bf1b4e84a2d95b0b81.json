{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/ActualPrivateQuiz.tsx\";\nimport React from \"react\";\nexport const ActualPrivateQuiz = ({// reset\n}) => {\n  // const [currentQuiz, setCurrentQuiz] = useState<PrivateQuiz | null>(null);\n  // useEffect(() => {\n  //   const loadQuiz = async () => {\n  //     const quiz = (await getSingleQuiz(quizId)) as unknown;\n  //     setCurrentQuiz(quiz as PrivateQuiz);\n  //   };\n  //   loadQuiz();\n  // }, []);\n  // console.log(\"CURRENT QUIZ\", currentQuiz);\n  // const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  // const [score, setScore] = useState(0);\n  // const goToNextQuestion = () => setCurrentQuestionIndex(prev => prev + 1);\n  // const givePoint = () => setScore(prevScore => prevScore + 1);\n  // const thereAreStillQuestions = () =>\n  //   allQuestions.length >= currentQuestionIndex + 1;\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"hello from quiz page\") // <QuizBackground imageUrl={subject}>\n  //   {thereAreStillQuestions() ? (\n  //     <QuestionCard\n  //       question={allQuestions[currentQuestionIndex]}\n  //       next={goToNextQuestion}\n  //       numberOfQuestions={allQuestions.length}\n  //       currentNumberOfQuestion={currentQuestionIndex + 1}\n  //       givePoint={givePoint}\n  //     />\n  //   ) : (\n  //     <Ending\n  //       score={score}\n  //       totalQuestions={allQuestions.length}\n  //       playAgain={reset}\n  //     />\n  //   )}\n  // </QuizBackground>\n  ;\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/ActualPrivateQuiz.tsx"],"names":["React","ActualPrivateQuiz"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAaA,OAAO,MAAMC,iBAAmD,GAAG,CACjE,CACE;AADF,CADiE,KAI9D;AACH;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBF;AAoBD,CA7CM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Question, Subject } from \"../../../models/Question\";\nimport { QuestionCard } from \"../../replies/QuestionCard\";\nimport { Ending } from \"../../Ending\";\nimport { QuizBackground } from \"../../UI/QuizBackground\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { getSingleQuiz } from \"../../../utils/dbFunctions\";\n\ninterface ActualPrivateQuizProps {\n  // reset?: () => void;\n}\n\nexport const ActualPrivateQuiz: React.FC<ActualPrivateQuizProps> = (\n  {\n    // reset\n  }\n) => {\n  // const [currentQuiz, setCurrentQuiz] = useState<PrivateQuiz | null>(null);\n\n  // useEffect(() => {\n  //   const loadQuiz = async () => {\n  //     const quiz = (await getSingleQuiz(quizId)) as unknown;\n  //     setCurrentQuiz(quiz as PrivateQuiz);\n  //   };\n\n  //   loadQuiz();\n  // }, []);\n\n  // console.log(\"CURRENT QUIZ\", currentQuiz);\n\n  // const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  // const [score, setScore] = useState(0);\n  // const goToNextQuestion = () => setCurrentQuestionIndex(prev => prev + 1);\n  // const givePoint = () => setScore(prevScore => prevScore + 1);\n  // const thereAreStillQuestions = () =>\n  //   allQuestions.length >= currentQuestionIndex + 1;\n\n  return (\n    <h1>hello from quiz page</h1>\n    // <QuizBackground imageUrl={subject}>\n    //   {thereAreStillQuestions() ? (\n    //     <QuestionCard\n    //       question={allQuestions[currentQuestionIndex]}\n    //       next={goToNextQuestion}\n    //       numberOfQuestions={allQuestions.length}\n    //       currentNumberOfQuestion={currentQuestionIndex + 1}\n    //       givePoint={givePoint}\n    //     />\n    //   ) : (\n    //     <Ending\n    //       score={score}\n    //       totalQuestions={allQuestions.length}\n    //       playAgain={reset}\n    //     />\n    //   )}\n    // </QuizBackground>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}