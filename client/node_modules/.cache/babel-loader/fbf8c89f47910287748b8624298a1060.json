{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/steps/SubjectsStep.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { MainTitle } from \"../UI/MainTitle\";\nimport { QuizType } from \"../../models/Question\";\nimport { shortenLengthySubjects, getSubjectBackgroundPic } from \"../../utils/functions\";\nimport { ProgrammingCategories, TriviaCategories } from \"../../constants/questionCategories\";\nimport { Colors } from \"../../constants/colors\";\nconst SubjectsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  padding: 0 3rem;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  ::after {\n    content: \"\";\n    flex: auto;\n  }\n`;\nconst StyledSubject = styled.div`\n  padding: 1rem;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  border-radius: 10px;\n  text-transform: uppercase;\n  background-color: ${Colors.DARK_BLUE};\n  font-size: 1.6rem;\n  width: 200px;\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  margin: 2px;\n  background-position: center;\n  background-size: cover;\n\n  :hover {\n    transform: scale(1.02);\n\n    h3 {\n      background-color: ${Colors.YELLOW};\n      color: white;\n    }\n  }\n`;\nconst Title = styled.h3`\n  background-color: white;\n  color: ${Colors.BLACK};\n  padding: 0 0.5rem;\n  font-size: 1.2rem;\n`;\nconst BigTitle = styled(MainTitle)`\n  margin-bottom: 0.6rem;\n`;\nconst SubTitle = styled.p`\n  color: ${Colors.LIGHTER_GREY};\n  margin-bottom: 2rem;\n  font-size: 1.1rem;\n`;\n\nconst SubjectElement = ({\n  title,\n  value,\n  updateSubject,\n  goForward\n}) => {\n  return /*#__PURE__*/React.createElement(StyledSubject, {\n    onClick: () => {\n      updateSubject(value);\n      goForward();\n    },\n    style: {\n      backgroundImage: `url(\"${getSubjectBackgroundPic(value)})\"`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nexport const SubjectsStep = ({\n  quizType,\n  updateSubject,\n  goForward\n}) => {\n  const availableSubjects = quizType === QuizType.TRIVIA ? TriviaCategories : ProgrammingCategories;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BigTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, quizType.toUpperCase(), \" QUIZ\"), /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Choose a topic \\uD83D\\uDC47\"), /*#__PURE__*/React.createElement(SubjectsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, availableSubjects.sort((a, b) => {\n    if (a < b) {\n      return -1;\n    }\n\n    if (a > b) {\n      return 1;\n    }\n\n    return 0;\n  }).map(subject => /*#__PURE__*/React.createElement(SubjectElement, {\n    key: subject,\n    value: subject,\n    title: shortenLengthySubjects(subject),\n    updateSubject: updateSubject,\n    goForward: goForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/steps/SubjectsStep.tsx"],"names":["React","styled","MainTitle","QuizType","shortenLengthySubjects","getSubjectBackgroundPic","ProgrammingCategories","TriviaCategories","Colors","SubjectsContainer","div","StyledSubject","DARK_BLUE","YELLOW","Title","h3","BLACK","BigTitle","SubTitle","p","LIGHTER_GREY","SubjectElement","title","value","updateSubject","goForward","backgroundImage","SubjectsStep","quizType","availableSubjects","TRIVIA","toUpperCase","sort","a","b","map","subject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,SAASC,QAAT,QAAkC,uBAAlC;AACA,SACEC,sBADF,EAEEC,uBAFF,QAGO,uBAHP;AAIA,SACEC,qBADF,EAEEC,gBAFF,QAGO,oCAHP;AAIA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,MAAMC,iBAAiB,GAAGR,MAAM,CAACS,GAAI;;;;;;;;;;;CAArC;AAaA,MAAMC,aAAa,GAAGV,MAAM,CAACS,GAAI;;;;;;sBAMXF,MAAM,CAACI,SAAU;;;;;;;;;;;;;;;0BAebJ,MAAM,CAACK,MAAO;;;;CArBxC;AA2BA,MAAMC,KAAK,GAAGb,MAAM,CAACc,EAAG;;WAEbP,MAAM,CAACQ,KAAM;;;CAFxB;AAOA,MAAMC,QAAQ,GAAGhB,MAAM,CAACC,SAAD,CAAY;;CAAnC;AAIA,MAAMgB,QAAQ,GAAGjB,MAAM,CAACkB,CAAE;WACfX,MAAM,CAACY,YAAa;;;CAD/B;;AAMA,MAAMC,cACC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA;AAA/B,CAAD,KAAgD;AACxD,sBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,aAAa,CAACD,KAAD,CAAb;AACAE,MAAAA,SAAS;AACV,KAJH;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAG,QAAOrB,uBAAuB,CAACkB,KAAD,CAAQ;AAA1D,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,KAAR,CAPF,CADF;AAWD,CAbD;;AAuBA,OAAO,MAAMK,YAAgD,GAAG,CAAC;AAC/DC,EAAAA,QAD+D;AAE/DJ,EAAAA,aAF+D;AAG/DC,EAAAA;AAH+D,CAAD,KAI1D;AACJ,QAAMI,iBAAiB,GACrBD,QAAQ,KAAKzB,QAAQ,CAAC2B,MAAtB,GAA+BvB,gBAA/B,GAAkDD,qBADpD;AAEA,sBACE,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWsB,QAAQ,CAACG,WAAT,EAAX,UADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,eAGE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,iBAAiB,CACfG,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,QAAID,CAAC,GAAIC,CAAT,EAAa;AACX,aAAO,CAAC,CAAR;AACD;;AACD,QAAID,CAAC,GAAIC,CAAT,EAAa;AACX,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GATF,EAUEC,GAVF,CAUMC,OAAO,iBACV,oBAAC,cAAD;AACE,IAAA,GAAG,EAAEA,OADP;AAEE,IAAA,KAAK,EAAEA,OAFT;AAGE,IAAA,KAAK,EAAEhC,sBAAsB,CAACgC,OAAD,CAH/B;AAIE,IAAA,aAAa,EAAEZ,aAJjB;AAKE,IAAA,SAAS,EAAEC,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXH,CADH,CAHF,CADF;AA2BD,CAlCM","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { MainTitle } from \"../UI/MainTitle\";\nimport { Step } from \"../../models/Step\";\nimport { QuizType, Subject } from \"../../models/Question\";\nimport {\n  shortenLengthySubjects,\n  getSubjectBackgroundPic\n} from \"../../utils/functions\";\nimport {\n  ProgrammingCategories,\n  TriviaCategories\n} from \"../../constants/questionCategories\";\nimport { Colors } from \"../../constants/colors\";\n\nconst SubjectsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  padding: 0 3rem;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  ::after {\n    content: \"\";\n    flex: auto;\n  }\n`;\n\nconst StyledSubject = styled.div`\n  padding: 1rem;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  border-radius: 10px;\n  text-transform: uppercase;\n  background-color: ${Colors.DARK_BLUE};\n  font-size: 1.6rem;\n  width: 200px;\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  margin: 2px;\n  background-position: center;\n  background-size: cover;\n\n  :hover {\n    transform: scale(1.02);\n\n    h3 {\n      background-color: ${Colors.YELLOW};\n      color: white;\n    }\n  }\n`;\n\nconst Title = styled.h3`\n  background-color: white;\n  color: ${Colors.BLACK};\n  padding: 0 0.5rem;\n  font-size: 1.2rem;\n`;\n\nconst BigTitle = styled(MainTitle)`\n  margin-bottom: 0.6rem;\n`;\n\nconst SubTitle = styled.p`\n  color: ${Colors.LIGHTER_GREY};\n  margin-bottom: 2rem;\n  font-size: 1.1rem;\n`;\n\nconst SubjectElement: React.FC<{ title: string; value: Subject } & Updatable &\n  Step> = ({ title, value, updateSubject, goForward }) => {\n  return (\n    <StyledSubject\n      onClick={() => {\n        updateSubject(value);\n        goForward();\n      }}\n      style={{ backgroundImage: `url(\"${getSubjectBackgroundPic(value)})\"` }}\n    >\n      <Title>{title}</Title>\n    </StyledSubject>\n  );\n};\n\ninterface Props {\n  quizType: QuizType;\n}\n\ninterface Updatable {\n  updateSubject: (subject: Subject) => void;\n}\n\nexport const SubjectsStep: React.FC<Props & Step & Updatable> = ({\n  quizType,\n  updateSubject,\n  goForward\n}) => {\n  const availableSubjects =\n    quizType === QuizType.TRIVIA ? TriviaCategories : ProgrammingCategories;\n  return (\n    <>\n      <BigTitle>{quizType.toUpperCase()} QUIZ</BigTitle>\n      <SubTitle>Choose a topic ðŸ‘‡</SubTitle>\n      <SubjectsContainer>\n        {availableSubjects\n          .sort((a, b) => {\n            if (a! < b!) {\n              return -1;\n            }\n            if (a! > b!) {\n              return 1;\n            }\n            return 0;\n          })\n          .map(subject => (\n            <SubjectElement\n              key={subject}\n              value={subject as Subject}\n              title={shortenLengthySubjects(subject as string)!}\n              updateSubject={updateSubject}\n              goForward={goForward}\n            />\n          ))}\n      </SubjectsContainer>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}