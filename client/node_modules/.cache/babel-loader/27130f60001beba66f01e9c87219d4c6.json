{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/UI/Form.tsx\";\nimport React, { useReducer, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../constants/colors\";\nimport { Input } from \"./Input\";\nimport { FormReducers } from \"../../reducers/FormReducers\";\nimport { MediumButton } from \"./Buttons\";\nimport { loginUser, registerUser } from \"../../utils/dbFunctions\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nconst FormContainer = styled.div`\n  width: 600px;\n  height: 300px;\n  background-color: ${Colors.YELLOW};\n  color: ${Colors.BLACK};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\nconst FormTitle = styled.h4`\n  color: white;\n  text-transform: uppercase;\n`;\nconst SubmitButton = styled(MediumButton)`\n  position: absolute;\n  left: ${300 - 125}px;\n  bottom: -25px;\n`;\nconst ErrorMessage = styled.p`\n  font-size: 0.8rem;\n  color: red;\n  margin-top: 0;\n`;\nexport const Form = ({\n  title,\n  inputs,\n  scope\n}) => {\n  const [error, setError] = useState(\"\");\n  const {\n    loadCurrentUser\n  } = useContext(AuthContext);\n  const relevantReducer = scope === \"login\" ? FormReducers.login.reducer : scope === \"register\" ? FormReducers.register.reducer : FormReducers.quizCreation.reducer;\n  const relevantStartingValues = scope === \"login\" ? FormReducers.login.startingValues : scope === \"register\" ? FormReducers.register.startingValues : FormReducers.quizCreation.startingValues;\n  const [inputValues, dispatch] = useReducer(relevantReducer, relevantStartingValues);\n\n  const handleChange = (input, inputName) => dispatch({\n    type: inputName,\n    payload: input\n  });\n\n  const handleSubmit = async () => {\n    let response;\n\n    if (scope === \"login\") {\n      response = await loginUser(inputValues);\n      console.log(\"RESSSS\", response);\n      loadCurrentUser(response.payload);\n    } else {\n      response = await registerUser(inputValues);\n      console.log(\"RESSSS\", response);\n      loadCurrentUser(response.payload);\n    }\n\n    if (response.message) {\n      setError(response.message);\n    }\n  };\n\n  const resetError = () => setError(\"\");\n\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, inputs.map(input => /*#__PURE__*/React.createElement(Input, {\n    key: input.name,\n    inputType: input.inputType ? input.inputType : \"text\",\n    inputName: input.name,\n    onChangeFunction: handleChange,\n    resetError: resetError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), error && /*#__PURE__*/React.createElement(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(SubmitButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"SUBMIT\")));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/UI/Form.tsx"],"names":["React","useReducer","useState","useContext","styled","Colors","Input","FormReducers","MediumButton","loginUser","registerUser","AuthContext","FormContainer","div","YELLOW","BLACK","FormTitle","h4","SubmitButton","ErrorMessage","p","Form","title","inputs","scope","error","setError","loadCurrentUser","relevantReducer","login","reducer","register","quizCreation","relevantStartingValues","startingValues","inputValues","dispatch","handleChange","input","inputName","type","payload","handleSubmit","response","console","log","message","resetError","e","preventDefault","map","name","inputType"],"mappings":"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","sourcesContent":["import React, { useReducer, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../constants/colors\";\nimport { Input } from \"./Input\";\nimport { FormReducers, InputName } from \"../../reducers/FormReducers\";\nimport { MediumButton } from \"./Buttons\";\nimport { loginUser, registerUser } from \"../../utils/dbFunctions\";\nimport { AuthScope } from \"../../models/AuthScope\";\nimport { ApiResponse } from \"../../models/ApiResponse\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\n\nconst FormContainer = styled.div`\n  width: 600px;\n  height: 300px;\n  background-color: ${Colors.YELLOW};\n  color: ${Colors.BLACK};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nconst FormTitle = styled.h4`\n  color: white;\n  text-transform: uppercase;\n`;\n\nconst SubmitButton = styled(MediumButton)`\n  position: absolute;\n  left: ${300 - 125}px;\n  bottom: -25px;\n`;\n\nconst ErrorMessage = styled.p`\n  font-size: 0.8rem;\n  color: red;\n  margin-top: 0;\n`;\n\nexport type InputConfig = {\n  name: InputName;\n  inputType?: \"text\" | \"password\";\n};\n\ntype Props = {\n  title: string;\n  inputs: InputConfig[];\n  scope: AuthScope | \"quizCreation\";\n};\n\nexport const Form: React.FC<Props> = ({ title, inputs, scope }) => {\n  const [error, setError] = useState(\"\");\n  const { loadCurrentUser } = useContext(AuthContext);\n\n  const relevantReducer =\n    scope === \"login\"\n      ? FormReducers.login.reducer\n      : scope === \"register\"\n      ? FormReducers.register.reducer\n      : FormReducers.quizCreation.reducer;\n\n  const relevantStartingValues =\n    scope === \"login\"\n      ? FormReducers.login.startingValues\n      : scope === \"register\"\n      ? FormReducers.register.startingValues\n      : FormReducers.quizCreation.startingValues;\n\n  const [inputValues, dispatch] = useReducer(\n    relevantReducer,\n    relevantStartingValues\n  );\n\n  const handleChange = (input: string, inputName: InputName) =>\n    dispatch({ type: inputName, payload: input });\n\n  const handleSubmit = async () => {\n    let response: ApiResponse;\n    if (scope === \"login\") {\n      response = await loginUser(inputValues as LoginFormInputs);\n      console.log(\"RESSSS\", response);\n      loadCurrentUser(response.payload);\n    } else {\n      response = await registerUser(inputValues);\n      console.log(\"RESSSS\", response);\n      loadCurrentUser(response.payload);\n    }\n    if (response.message) {\n      setError(response.message);\n    }\n  };\n\n  const resetError = () => setError(\"\");\n\n  return (\n    <FormContainer>\n      <FormTitle>{title}</FormTitle>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          handleSubmit();\n        }}\n      >\n        {inputs.map(input => (\n          <Input\n            key={input.name}\n            inputType={input.inputType ? input.inputType : \"text\"}\n            inputName={input.name}\n            onChangeFunction={handleChange}\n            resetError={resetError}\n          />\n        ))}\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <SubmitButton type=\"submit\">SUBMIT</SubmitButton>\n      </form>\n    </FormContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}