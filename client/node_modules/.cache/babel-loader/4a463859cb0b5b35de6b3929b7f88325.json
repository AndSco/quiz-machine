{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/auth/AuthForm.tsx\";\nimport React, { useReducer, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Input } from \"../UI/Input\";\nimport { AuthReducers } from \"../../reducers/AuthReducers\";\nimport { loginUser, registerUser } from \"../../utils/dbFunctions\";\nimport { getPropertyName } from \"../../utils/functions\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../UI/Form\";\nconst ErrorMessage = styled.p`\n  font-size: 0.8rem;\n  color: red;\n  margin-top: 0;\n`;\nexport const Form = ({\n  title,\n  inputs,\n  scope\n}) => {\n  const [error, setError] = useState(\"\");\n  const {\n    loadCurrentUser\n  } = useContext(AuthContext);\n  const relevantReducer = scope === \"login\" ? AuthReducers.login.reducer : AuthReducers.register.reducer;\n  const relevantStartingValues = scope === \"login\" ? AuthReducers.login.startingValues : AuthReducers.register.startingValues;\n  const [inputValues, dispatch] = useReducer(relevantReducer, relevantStartingValues);\n  console.log(\"input values\", inputValues);\n\n  const handleChange = (input, inputName) => dispatch({\n    type: inputName,\n    payload: input\n  });\n\n  const handleSubmit = async () => {\n    let response;\n\n    if (scope === \"login\") {\n      response = await loginUser(inputValues);\n      console.log(\"RESSSS\", response);\n      loadCurrentUser(response.payload);\n    } else {\n      response = await registerUser(inputValues);\n      console.log(\"RESSSS\", response);\n      loadCurrentUser(response.payload);\n    }\n\n    if (response.message) {\n      setError(response.message);\n    }\n  };\n\n  const resetError = () => setError(\"\");\n\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    isRegistration: scope === \"register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, inputs.map(input => /*#__PURE__*/React.createElement(Input, {\n    label: input.name,\n    key: input.name,\n    inputType: input.inputType ? input.inputType : \"text\",\n    inputName: input.name,\n    onChangeFunction: handleChange,\n    resetError: resetError,\n    value: getPropertyName(inputValues, input.name),\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), error && /*#__PURE__*/React.createElement(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(SubmitButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"SUBMIT\")));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/auth/AuthForm.tsx"],"names":["React","useReducer","useState","useContext","styled","Input","AuthReducers","loginUser","registerUser","getPropertyName","AuthContext","FormContainer","FormTitle","SubmitButton","ErrorMessage","p","Form","title","inputs","scope","error","setError","loadCurrentUser","relevantReducer","login","reducer","register","relevantStartingValues","startingValues","inputValues","dispatch","console","log","handleChange","input","inputName","type","payload","handleSubmit","response","message","resetError","e","preventDefault","map","name","inputType"],"mappings":"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","sourcesContent":["import React, { useReducer, useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Input } from \"../UI/Input\";\nimport {\n  AuthReducers,\n  InputName,\n  RegistrationFormInputs\n} from \"../../reducers/AuthReducers\";\nimport { loginUser, registerUser } from \"../../utils/dbFunctions\";\nimport { getPropertyName } from \"../../utils/functions\";\nimport { AuthScope } from \"../../models/AuthScope\";\nimport { ApiResponse } from \"../../models/ApiResponse\";\nimport { AuthContext } from \"../../contexts/auth/Auth\";\nimport { FormContainer, FormTitle, SubmitButton } from \"../UI/Form\";\nimport { AuthInputConfig } from \"../../constants/formInputsValues\";\n\nconst ErrorMessage = styled.p`\n  font-size: 0.8rem;\n  color: red;\n  margin-top: 0;\n`;\n\ntype Props = {\n  title: string;\n  // inputs: InputConfig[];\n  inputs: AuthInputConfig[];\n  scope: AuthScope;\n};\n\nexport const Form: React.FC<Props> = ({ title, inputs, scope }) => {\n  const [error, setError] = useState(\"\");\n  const { loadCurrentUser } = useContext(AuthContext);\n\n  const relevantReducer =\n    scope === \"login\"\n      ? AuthReducers.login.reducer\n      : AuthReducers.register.reducer;\n\n  const relevantStartingValues =\n    scope === \"login\"\n      ? AuthReducers.login.startingValues\n      : AuthReducers.register.startingValues;\n\n  const [inputValues, dispatch] = useReducer(\n    relevantReducer,\n    relevantStartingValues\n  );\n\n  console.log(\"input values\", inputValues);\n\n  const handleChange = (input: string, inputName: InputName) =>\n    dispatch({ type: inputName, payload: input });\n\n  const handleSubmit = async () => {\n    let response: ApiResponse;\n    if (scope === \"login\") {\n      response = await loginUser(inputValues);\n      console.log(\"RESSSS\", response);\n      loadCurrentUser(response.payload);\n    } else {\n      response = await registerUser(inputValues as RegistrationFormInputs);\n      console.log(\"RESSSS\", response);\n      loadCurrentUser(response.payload);\n    }\n    if (response.message) {\n      setError(response.message);\n    }\n  };\n\n  const resetError = () => setError(\"\");\n\n  return (\n    <FormContainer isRegistration={scope === \"register\"}>\n      <FormTitle>{title}</FormTitle>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          handleSubmit();\n        }}\n      >\n        {inputs.map(input => (\n          <Input\n            label={input.name}\n            key={input.name}\n            inputType={input.inputType ? input.inputType : \"text\"}\n            inputName={input.name}\n            onChangeFunction={handleChange}\n            resetError={resetError}\n            value={getPropertyName(\n              inputValues,\n              input.name as \"password\" | \"username\"\n            )}\n            isRequired={true}\n          />\n        ))}\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <SubmitButton type=\"submit\">SUBMIT</SubmitButton>\n      </form>\n    </FormContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}