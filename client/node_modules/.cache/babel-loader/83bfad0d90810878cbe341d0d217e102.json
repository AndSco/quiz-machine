{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/quizForm/questions_subform/UploadedAnswers.tsx\";\nimport React from \"react\";\nimport { StyledAnswer } from \"./Styled\";\nimport { Colors } from \"../../../../../constants/colors\";\nimport { cropInput, removeEntryFromArray } from \"../../../../../utils/functions\";\nimport { Icon } from \"../../../../UI/Icon\";\nimport { StyledUploadedReplies } from \"./Styled\";\nexport const Answer = ({\n  label,\n  value,\n  isRight\n}) => {\n  return /*#__PURE__*/React.createElement(StyledAnswer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: isRight ? \"check-circle\" : \"times-circle\",\n    color: isRight ? Colors.GREEN : Colors.RED,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: Colors.LIGHTEST_GREY,\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, label), cropInput(value, 50)));\n};\nexport const UploadedAnswers = ({\n  replies\n}) => {\n  return /*#__PURE__*/React.createElement(StyledUploadedReplies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, replies.map((reply, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Answer, {\n    label: \"A: \",\n    isRight: false,\n    value: reply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => console.log(\"replies left\", removeEntryFromArray(replies, reply)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"times-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/quizForm/questions_subform/UploadedAnswers.tsx"],"names":["React","StyledAnswer","Colors","cropInput","removeEntryFromArray","Icon","StyledUploadedReplies","Answer","label","value","isRight","GREEN","RED","color","LIGHTEST_GREY","marginRight","UploadedAnswers","replies","map","reply","index","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,MAAT,QAAuB,iCAAvB;AACA,SACEC,SADF,EAEEC,oBAFF,QAGO,gCAHP;AAIA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,qBAAT,QAAsC,UAAtC;AAQA,OAAO,MAAMC,MAAuB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AACpE,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEA,OAAO,GAAG,cAAH,GAAoB,cADnC;AAEE,IAAA,KAAK,EAAEA,OAAO,GAAGR,MAAM,CAACS,KAAV,GAAkBT,MAAM,CAACU,GAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIK,GAJL,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEX,MAAM,CAACY,aAAhB;AAA+BC,MAAAA,WAAW,EAAE;AAA5C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KADH,CADF,EAIGL,SAAS,CAACM,KAAD,EAAQ,EAAR,CAJZ,CALF,CADF;AAcD,CAfM;AAiBP,OAAO,MAAMO,eAGX,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACpB,sBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACX;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAE,KAA7B;AAAoC,IAAA,KAAK,EAAED,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,OAAO,EAAE,MACPE,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BlB,oBAAoB,CAACa,OAAD,EAAUE,KAAV,CAAhD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,CADD,CADH,CADF;AAgBD,CApBM","sourcesContent":["import React from \"react\";\nimport { StyledAnswer } from \"./Styled\";\nimport { Colors } from \"../../../../../constants/colors\";\nimport {\n  cropInput,\n  removeEntryFromArray\n} from \"../../../../../utils/functions\";\nimport { Icon } from \"../../../../UI/Icon\";\nimport { StyledUploadedReplies } from \"./Styled\";\n\ninterface Props {\n  label: string;\n  value: string;\n  isRight: boolean;\n}\n\nexport const Answer: React.FC<Props> = ({ label, value, isRight }) => {\n  return (\n    <StyledAnswer>\n      <Icon\n        icon={isRight ? \"check-circle\" : \"times-circle\"}\n        color={isRight ? Colors.GREEN : Colors.RED}\n      />{\" \"}\n      <h5>\n        <span style={{ color: Colors.LIGHTEST_GREY, marginRight: 5 }}>\n          {label}\n        </span>\n        {cropInput(value, 50)}\n      </h5>\n    </StyledAnswer>\n  );\n};\n\nexport const UploadedAnswers: React.FC<{\n  replies: string[];\n  updateAnswersOnDelete: (answersLeft: string[]) => void;\n}> = ({ replies }) => {\n  return (\n    <StyledUploadedReplies>\n      {replies.map((reply, index) => (\n        <li key={index}>\n          <Answer label=\"A: \" isRight={false} value={reply} />\n          <div\n            onClick={() =>\n              console.log(\"replies left\", removeEntryFromArray(replies, reply))\n            }\n          >\n            <Icon icon=\"times-circle\" />\n          </div>\n        </li>\n      ))}\n    </StyledUploadedReplies>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}