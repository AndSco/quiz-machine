{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/MyQuizCard.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../../constants/colors\";\nimport { GridCard } from \"../../UI/GridCard\";\nimport { Link } from \"react-router-dom\";\nimport { copyQuizUrlToCipboard } from \"../../../utils/functions\";\nimport { Icon } from \"../../UI/Icon\";\nimport { SmallButton } from \"../../UI/Buttons\";\nconst MyStyledQuizCard = styled(GridCard)`\n  width: 500px;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2rem 0;\n  background-image: ${props => props.imageUrl ? `url(\"${props.imageUrl}\")` : \"none\"};\n  cursor: inherit;\n\n  h3 {\n    background-color: ${Colors.YELLOW};\n    padding: 0.2rem 0.5rem;\n    color: ${Colors.BLACK};\n    font-size: 1.5rem;\n  }\n`;\nconst ActionButtonsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\nconst ActionButton = styled.h5`\n  border-radius: 30px;\n  background-color: ${Colors.BLACK};\n  color: white;\n  font-size: 0.7rem;\n  padding: 0.4rem 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  opacity: 0.9;\n  cursor: pointer;\n\n  :hover {\n    background-color: white;\n    color: ${Colors.BLACK};\n  }\n`;\nconst WarningMessage = styled.div`\n  width: 100%;\n  height: 100%;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-transform: initial;\n\n  h5 {\n    margin-bottom: 0;\n  }\n`;\nexport const MyQuizCard = ({\n  quiz,\n  editQuiz\n}) => {\n  const quizUrl = `quiz/${quiz._id}`;\n  const [wantsToDeleteQuiz, setWantsToDeleteQuiz] = useState(false);\n  return !wantsToDeleteQuiz ? /*#__PURE__*/React.createElement(MyStyledQuizCard, {\n    imageUrl: quiz.backgroundImageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, quiz.title), /*#__PURE__*/React.createElement(ActionButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: quizUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"puzzle-piece\",\n    color: \"lightgrey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), \"Take quiz\")), /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => copyQuizUrlToCipboard(quizUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"link\",\n    color: \"lightgrey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), \"Copy url\"), /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => editQuiz(quiz),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"edit\",\n    color: \"lightgrey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), \"Edit\"), /*#__PURE__*/React.createElement(ActionButton, {\n    onClick: () => {\n      setWantsToDeleteQuiz(true); // deleteQuiz(quiz._id as string);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"trash-alt\",\n    color: \"lightgrey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), \"Delete\"))) : /*#__PURE__*/React.createElement(MyStyledQuizCard, {\n    imageUrl: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WarningMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Sure you want to continue?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"This will delete your quiz forever\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SmallButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(SmallButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/sections/private/MyQuizCard.tsx"],"names":["React","useState","styled","Colors","GridCard","Link","copyQuizUrlToCipboard","Icon","SmallButton","MyStyledQuizCard","props","imageUrl","YELLOW","BLACK","ActionButtonsContainer","div","ActionButton","h5","WarningMessage","MyQuizCard","quiz","editQuiz","quizUrl","_id","wantsToDeleteQuiz","setWantsToDeleteQuiz","backgroundImageUrl","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PrivateQuiz } from \"../../../models/PrivateQuiz\";\nimport { Colors } from \"../../../constants/colors\";\nimport { GridCard } from \"../../UI/GridCard\";\nimport { Link } from \"react-router-dom\";\nimport { copyQuizUrlToCipboard } from \"../../../utils/functions\";\nimport { deleteQuiz } from \"../../../utils/dbFunctions\";\nimport { Icon } from \"../../UI/Icon\";\nimport { SmallButton } from \"../../UI/Buttons\";\n\nconst MyStyledQuizCard = styled(GridCard)`\n  width: 500px;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2rem 0;\n  background-image: ${(props: { imageUrl: string | null }) =>\n    props.imageUrl ? `url(\"${props.imageUrl}\")` : \"none\"};\n  cursor: inherit;\n\n  h3 {\n    background-color: ${Colors.YELLOW};\n    padding: 0.2rem 0.5rem;\n    color: ${Colors.BLACK};\n    font-size: 1.5rem;\n  }\n`;\n\nconst ActionButtonsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ActionButton = styled.h5`\n  border-radius: 30px;\n  background-color: ${Colors.BLACK};\n  color: white;\n  font-size: 0.7rem;\n  padding: 0.4rem 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  opacity: 0.9;\n  cursor: pointer;\n\n  :hover {\n    background-color: white;\n    color: ${Colors.BLACK};\n  }\n`;\n\nconst WarningMessage = styled.div`\n  width: 100%;\n  height: 100%;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-transform: initial;\n\n  h5 {\n    margin-bottom: 0;\n  }\n`;\n\ninterface Props {\n  quiz: PrivateQuiz;\n  editQuiz: (quiz: PrivateQuiz) => void;\n}\n\nexport const MyQuizCard: React.FC<Props> = ({ quiz, editQuiz }) => {\n  const quizUrl = `quiz/${quiz._id}`;\n  const [wantsToDeleteQuiz, setWantsToDeleteQuiz] = useState(false);\n\n  return !wantsToDeleteQuiz ? (\n    <MyStyledQuizCard imageUrl={quiz.backgroundImageUrl as string}>\n      <h3>{quiz.title}</h3>\n      <ActionButtonsContainer>\n        <Link to={quizUrl}>\n          <ActionButton>\n            <Icon icon=\"puzzle-piece\" color=\"lightgrey\" />\n            Take quiz\n          </ActionButton>\n        </Link>\n        <ActionButton onClick={() => copyQuizUrlToCipboard(quizUrl)}>\n          <Icon icon=\"link\" color=\"lightgrey\" />\n          Copy url\n        </ActionButton>\n        <ActionButton onClick={() => editQuiz(quiz)}>\n          <Icon icon=\"edit\" color=\"lightgrey\" />\n          Edit\n        </ActionButton>\n        <ActionButton\n          onClick={() => {\n            setWantsToDeleteQuiz(true);\n            // deleteQuiz(quiz._id as string);\n          }}\n        >\n          <Icon icon=\"trash-alt\" color=\"lightgrey\" />\n          Delete\n        </ActionButton>\n      </ActionButtonsContainer>\n    </MyStyledQuizCard>\n  ) : (\n    <MyStyledQuizCard imageUrl={null}>\n      <WarningMessage>\n        <h5>Sure you want to continue?</h5>\n        <p>This will delete your quiz forever</p>\n        <div>\n          <SmallButton>Yes</SmallButton>\n          <SmallButton>Cancel</SmallButton>\n        </div>\n      </WarningMessage>\n    </MyStyledQuizCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}