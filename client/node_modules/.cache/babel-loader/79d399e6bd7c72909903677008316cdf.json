{"ast":null,"code":"var _jsxFileName = \"/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/replies/Reply.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../constants/colors\";\nconst StyledReply = styled.p`\n  text-align: left;\n  line-height: 24px;\n  cursor: pointer;\n  padding: 0 2rem;\n  background-color: ${props => props.hasReplied && props.isRight ? \"#31ea31\" : props.hasReplied && props.wasSelected && !props.isRight ? \"#ff0f0f\" : \"none\"};\n\n  :hover {\n    background-color: ${props => !props.hasReplied ? \"lightgrey\" : \"none\"};\n  }\n`;\nconst ReplyNumber = styled.h6`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  color: ${Colors.LIGHTER_GREY};\n  border: 1px solid;\n  margin-left: 0.7rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Reply = ({\n  hasReplied,\n  isRight,\n  replyText,\n  replyQuestion,\n  givePoint\n}) => {\n  const [wasSelected, setWasSelected] = useState(false);\n  useEffect(() => {\n    if (!hasReplied) {\n      setWasSelected(false);\n    }\n  }, [hasReplied]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReplyNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(StyledReply, {\n    hasReplied: hasReplied,\n    isRight: isRight,\n    wasSelected: wasSelected,\n    onClick: () => {\n      setWasSelected(true);\n      replyQuestion();\n\n      if (isRight) {\n        givePoint();\n      }\n    },\n    dangerouslySetInnerHTML: {\n      __html: replyText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/andreascorcia/Downloads/CODING/quiz-machine/client/src/components/replies/Reply.tsx"],"names":["React","useState","useEffect","styled","Colors","StyledReply","p","props","hasReplied","isRight","wasSelected","ReplyNumber","h6","LIGHTER_GREY","Reply","replyText","replyQuestion","givePoint","setWasSelected","display","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AAmBA,MAAMC,WAAW,GAAGF,MAAM,CAACG,CAAE;;;;;sBAKNC,KAAD,IAClBA,KAAK,CAACC,UAAN,IAAoBD,KAAK,CAACE,OAA1B,GACI,SADJ,GAEIF,KAAK,CAACC,UAAN,IAAoBD,KAAK,CAACG,WAA1B,IAAyC,CAACH,KAAK,CAACE,OAAhD,GACA,SADA,GAEA,MAAO;;;wBAGUF,KAAD,IAClB,CAACA,KAAK,CAACC,UAAP,GAAoB,WAApB,GAAkC,MAAO;;CAd/C;AAkBA,MAAMG,WAAW,GAAGR,MAAM,CAACS,EAAG;;;;WAInBR,MAAM,CAACS,YAAa;;;;;;CAJ/B;AAYA,OAAO,MAAMC,KAA2B,GAAG,CAAC;AAC1CN,EAAAA,UAD0C;AAE1CC,EAAAA,OAF0C;AAG1CM,EAAAA,SAH0C;AAI1CC,EAAAA,aAJ0C;AAK1CC,EAAAA;AAL0C,CAAD,KAMrC;AACJ,QAAM,CAACP,WAAD,EAAcQ,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,UAAL,EAAiB;AACfU,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACV,UAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAEE,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEX,UADd;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,OAAO,EAAE,MAAM;AACbQ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,aAAa;;AACb,UAAIP,OAAJ,EAAa;AACXQ,QAAAA,SAAS;AACV;AACF,KAVH;AAWE,IAAA,uBAAuB,EAAE;AAAEG,MAAAA,MAAM,EAAEL;AAAV,KAX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAkBD,CAjCM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../../constants/colors\";\n\ninterface ReplyProps {\n  isRight: boolean;\n  hasReplied: boolean;\n  replyText: string;\n  replyQuestion: () => void;\n  givePoint: () => void;\n}\n\ntype PartialProps = Omit<\n  ReplyProps,\n  \"replyText\" | \"replyQuestion\" | \"givePoint\"\n>;\n\ninterface StyledReplyProps extends PartialProps {\n  wasSelected: boolean;\n}\n\nconst StyledReply = styled.p`\n  text-align: left;\n  line-height: 24px;\n  cursor: pointer;\n  padding: 0 2rem;\n  background-color: ${(props: StyledReplyProps) =>\n    props.hasReplied && props.isRight\n      ? \"#31ea31\"\n      : props.hasReplied && props.wasSelected && !props.isRight\n      ? \"#ff0f0f\"\n      : \"none\"};\n\n  :hover {\n    background-color: ${(props: StyledReplyProps) =>\n      !props.hasReplied ? \"lightgrey\" : \"none\"};\n  }\n`;\n\nconst ReplyNumber = styled.h6`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  color: ${Colors.LIGHTER_GREY};\n  border: 1px solid;\n  margin-left: 0.7rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Reply: React.FC<ReplyProps> = ({\n  hasReplied,\n  isRight,\n  replyText,\n  replyQuestion,\n  givePoint\n}) => {\n  const [wasSelected, setWasSelected] = useState(false);\n\n  useEffect(() => {\n    if (!hasReplied) {\n      setWasSelected(false);\n    }\n  }, [hasReplied]);\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ReplyNumber>1</ReplyNumber>\n      <StyledReply\n        hasReplied={hasReplied}\n        isRight={isRight}\n        wasSelected={wasSelected}\n        onClick={() => {\n          setWasSelected(true);\n          replyQuestion();\n          if (isRight) {\n            givePoint();\n          }\n        }}\n        dangerouslySetInnerHTML={{ __html: replyText }}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}